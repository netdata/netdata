{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "title": "Netdata collector single module meta",
  "properties": {
    "plugin_name": {
      "type": "string",
      "description": "Plugin name (e.g. apps.plugin, proc.plugin, go.d.plugin). It must match the name of the executable file in the plugins.d directory."
    },
    "module_name": {
      "type": "string",
      "description": "Module name (e.g. apache, /proc/stat, httpcheck). It usually has the same name as the module configuration file (external plugin) or the section name in netdata.conf (internal plugin)."
    },
    "monitored_instance": {
      "$ref": "#/$defs/_monitored_instance"
    },
    "alternative_monitored_instances": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/_monitored_instance"
      }
    },
    "overview": {
      "type": "object",
      "properties": {
        "data_collection": {
          "type": "object",
          "description": "An overview of the collected metrics and a detailed description of the data collection method.",
          "properties": {
            "metrics_description": {
              "type": "string",
              "description": "Brief description of what metrics are collected. A suggested approach here is to talk about the areas covered (e.g. health, performance, errors) and the metric scopes."
            },
            "method_description": {
              "type": "string",
              "description": "Description of how metrics are collected (e.g. HTTP requests, establish a TCP connection and send a command, a specific binary execution). A suggested approach here is to provide a detailed description of how the collector gathers metrics: how many connections are established, exact requests/commands executed, exact endpoints used."
            }
          }
        },
        "supported_platforms": {
          "type": "object",
          "description": "Supported OS/platforms. By default, all platforms supported by Netdata are considered supported. See https://learn.netdata.cloud/docs/installing/platform-support-policy#currently-supported-platforms.",
          "properties": {
            "include": {
              "type": "array",
              "description": "Only supported OS/platforms. Platforms supported by Netdata will be ignored, only those listed are considered supported.",
              "items": {
                "type": "string"
              }
            },
            "exclude": {
              "type": "array",
              "description": "Unsupported OS/platforms. The result set is all platforms supported by Netdata except for those excluded.",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "multi-instance": {
          "type": "boolean",
          "description": "Whether this collector supports collecting metrics from multiple (for example, local and remote) instances."
        },
        "additional_permissions": {
          "type": "object",
          "description": "Information about additional permissions other than those required by the Netdata process (e.g. setuid, specific Linux capabilities).",
          "properties": {
            "description": {
              "type": "string"
            }
          }
        },
        "default_behavior": {
          "type": "object",
          "description": "Descriptions of how the data collector works with the default configuration.",
          "properties": {
            "auto_detection": {
              "type": "object",
              "description": "Information about detecting (discovering) monitored instances with default configuration. Example: tries to connect to Apache running on localhost on ports 80, 443 and 8080.",
              "properties": {
                "description": {
                  "type": "string"
                }
              }
            },
            "limits": {
              "type": "object",
              "description": "Information about limiting data collection, taking into account the default values of any configuration settings that restrict data collection (including filtering metrics).",
              "properties": {
                "description": {
                  "type": "string"
                }
              }
            },
            "performance_impact": {
              "type": "object",
              "description": "Information about the known impact on the performance of the monitored application or system.",
              "properties": {
                "description": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "setup": {
      "type": "object",
      "description": "Complete information that is needed to enable and configure the data collector.",
      "properties": {
        "prerequisites": {
          "type": "object",
          "description": "Actions the user must take to make the collector work, if any. It includes both configuring Netdata (e.g. if the collector is disabled by default) and configuring the monitored instance (e.g. enabling Apache mod_stats).",
          "properties": {
            "list": {
              "type": "array",
              "description": "List of prerequisites.",
              "items": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Title should reflect the description, be short and in the form of a command (e.g. Create netdata user, Enable build-in web server)."
                  },
                  "description": {
                    "type": "string",
                    "description": "Steps to follow to meet this prerequisite."
                  }
                }
              }
            }
          }
        },
        "configuration": {
          "description": "Information on how to configure the collector and available configuration options.",
          "type": "object",
          "properties": {
            "file": {
              "type": "object",
              "description": "Configuration file.",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Configuration file name."
                },
                "section_name": {
                  "type": "string",
                  "description": "The name of the section in the configuration file. Only for data collectors whose configuration is in netdata.conf (e.g. proc.plugin modules)."
                }
              }
            },
            "options": {
              "type": "object",
              "description": "All information about the available configuration options.",
              "properties": {
                "description": {
                  "type": "string",
                  "description": "Optional common information about options."
                },
                "folding": {
                  "$ref": "#/$defs/_folding"
                },
                "list": {
                  "type": "array",
                  "description": "List of configuration options.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Option name."
                      },
                      "description": {
                        "type": "string",
                        "description": "Option description. Must be short. Use 'detailed_description' for a long description."
                      },
                      "detailed_description": {
                        "type": "string",
                        "description": "Option detailed description. Use it to describe in details complex options."
                      },
                      "default_value": {
                        "type": [
                          "string",
                          "number"
                        ],
                        "description": "Default value. Leave empty if none."
                      },
                      "required": {
                        "type": "boolean",
                        "description": "Indicates whether this option is required or not. The option is required if the collector does not work, if it is not set."
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "type": "object",
              "description": "Configuration examples. The more examples the better!",
              "properties": {
                "list": {
                  "type": "array",
                  "description": "List of configuration examples.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "folding": {
                        "$ref": "#/$defs/_folding"
                      },
                      "name": {
                        "type": "string",
                        "description": "Example name."
                      },
                      "description": {
                        "type": "string",
                        "description": "Example description."
                      },
                      "config": {
                        "type": "string",
                        "description": "Example configuration."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "troubleshooting": {
      "type": "object",
      "description": "Information needed to troubleshoot issues with this collector.",
      "properties": {
        "problems": {
          "type": "object",
          "description": "Common problems that users face again and again... and their solutions.",
          "properties": {
            "list": {
              "type": "array",
              "description": "List of common problems.",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Problem name."
                  },
                  "description": {
                    "type": "string",
                    "description": "Explanation of the problem and its solution."
                  }
                }
              }
            }
          }
        }
      }
    },
    "related_resources": {
      "type": "object",
      "description": "Available related resources for the monitored instance.",
      "properties": {
        "integrations": {
          "type": "object",
          "description": "All collectors that provide additional metrics for the monitored instance. This may include generic collectors, e.g. 'httpcheck' for web servers to monitor specific endpoints.",
          "properties": {
            "list": {
              "type": "array",
              "description": "List of related integrations.",
              "items": {
                "type": "object",
                "properties": {
                  "plugin_name": {
                    "type": "string",
                    "description": "Related integration plugin name."
                  },
                  "module_name": {
                    "type": "string",
                    "description": "Related integration module name."
                  }
                }
              }
            }
          }
        }
      }
    },
    "info_provided_to_referring_integrations": {
      "type": "object",
      "description": "Information that this collector can provide about itself when other integrations mention it. This text will not be appear on this collector's page.",
      "properties": {
        "description": {
          "type": "string",
          "description": "TODO"
        }
      }
    },
    "alerts": {
      "type": "array",
      "description": "The list of configured alerts shipped with Netdata for this collector.",
      "items": {
        "type": "object",
        "description": "Information about the configured alert.",
        "properties": {
          "name": {
            "type": "string",
            "description": "Alert's 'alarm' or 'template' value (https://learn.netdata.cloud/docs/alerting/health-configuration-reference#alarm-line-alarm-or-template)."
          },
          "link": {
            "type": "string",
            "description": "Link to github .conf file that this alert originates from"
          },
          "metric": {
            "type": "string",
            "description": "Alert's 'on' value (https://learn.netdata.cloud/docs/alerting/health-configuration-reference#alarm-line-on)."
          },
          "info": {
            "type": "string",
            "description": "Alert's 'info' value (https://learn.netdata.cloud/docs/alerting/health-configuration-reference#alarm-line-info)."
          },
          "os": {
            "type": "string",
            "description": "Alert's 'os' value (https://learn.netdata.cloud/docs/alerting/health-configuration-reference#alarm-line-os)."
          }
        }
      }
    },
    "metrics": {
      "type": "object",
      "description": "Collected metrics grouped by scope. The scope defines the instance that the metric belongs to. An instance is uniquely identified by a set of labels.",
      "properties": {
        "folding": {
          "$ref": "#/$defs/_folding"
        },
        "description": {
          "type": "string",
          "description": "General description of collected metrics/scopes."
        },
        "availability": {
          "type": "array",
          "description": "Metrics collection availability conditions. Some metrics are only available when certain conditions are met. For example, Apache exposes additional metrics when Extended status is configured, Consul exposes different set of metrics depends on its mode. This field should list the available conditions that will later be matched for each of the metrics.",
          "items": {
            "type": "string",
            "description": "Availability condition name."
          }
        },
        "scopes": {
          "type": "array",
          "description": "List of scopes and their metrics.",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Scope name."
              },
              "description": {
                "type": "string",
                "description": "Scope description."
              },
              "labels": {
                "type": "array",
                "description": "Label set of the scope.",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Label name."
                    },
                    "description": {
                      "type": "string",
                      "description": "Label description."
                    }
                  }
                }
              },
              "metrics": {
                "type": "array",
                "description": "List of collected metrics (chart contexts) in the scope.",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Metric name (chart context)."
                    },
                    "availability": {
                      "type": "array",
                      "description": "Metric collection availability conditions. An empty list means that it is available for all conditions defined in 'metrics.availability'.",
                      "items": {
                        "type": "string",
                        "description": "Availability condition name."
                      }
                    },
                    "description": {
                      "type": "string",
                      "description": "Metric description (chart title)."
                    },
                    "unit": {
                      "type": "string",
                      "description": "Metric description (chart unit)."
                    },
                    "chart_type": {
                      "type": "string",
                      "description": "Metric description (chart type)."
                    },
                    "dimensions": {
                      "type": "array",
                      "description": "",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Dimension name."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "$defs": {
    "_monitored_instance": {
      "type": "object",
      "description": "Information about the monitored instance (metrics source).",
      "properties": {
        "name": {
          "description": "Metrics source name (e.g. VerneMQ, Network interfaces, Files and directories). Use official spelling for applications.",
          "type": "string"
        },
        "link": {
          "description": "Link to the monitored instance official website if any.",
          "type": "string"
        }
      }
    },
    "_folding": {
      "type": "object",
      "description": "Content folding settings.",
      "properties": {
        "title": {
          "description": "Folded content summary title",
          "type": "string"
        },
        "enabled": {
          "description": "Determines if this content should be folded",
          "type": "boolean"
        }
      }
    }
  }
}
