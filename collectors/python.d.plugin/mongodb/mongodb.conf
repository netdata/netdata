# netdata python.d.plugin configuration for mongodb
#
# This file is in YaML format. Generally the format is:
#
# name: value
#
# There are 2 sections:
#  - global variables
#  - one or more JOBS
#
# JOBS allow you to collect values from multiple sources.
# Each source will have its own set of charts.
#
# JOB parameters have to be indented (using spaces only, example below).

# ----------------------------------------------------------------------
# Global Variables
# These variables set the defaults for all JOBs, however each JOB
# may define its own, overriding the defaults.

# update_every sets the default data collection frequency.
# If unset, the python.d.plugin default is used.
# update_every: 1

# priority controls the order of charts at the netdata dashboard.
# Lower numbers move the charts towards the top of the page.
# If unset, the default for python.d.plugin is used.
# priority: 60000

# penalty indicates whether to apply penalty to update_every in case of failures.
# Penalty will increase every 5 failed updates in a row. Maximum penalty is 10 minutes.
# penalty: yes

# autodetection_retry sets the job re-check interval in seconds.
# The job is not deleted if check fails.
# Attempts to start the job are made once every autodetection_retry.
# This feature is disabled by default.
# autodetection_retry: 0

# ----------------------------------------------------------------------
# JOBS (data collection sources)
#
# The default JOBS share the same *name*. JOBS with the same name
# are mutually exclusive. Only one of them will be allowed running at
# any time. This allows autodetection to try several alternatives and
# pick the one that works.
#
# Any number of jobs is supported.
#
# All python.d.plugin JOBS (for all its modules) support a set of
# predefined parameters. These are:
#
# job_name:
#     name: myname            # the JOB's name as it will appear at the
#                             # dashboard (by default is the job_name)
#                             # JOBs sharing a name are mutually exclusive
#     update_every: 1         # the JOB's data collection frequency
#     priority: 60000         # the JOB's order on the dashboard
#     penalty: yes            # the JOB's penalty
#     autodetection_retry: 0  # the JOB's re-check interval in seconds
#
# Additionally to the above, mongodb also supports the following:
#
#     host: 'IP or HOSTNAME' # type <str> the host to connect to
#     port: PORT             # type <int> the port to connect to
#
#  in all cases, the following can also be set:
#
#     authdb: 'dbname'       # database to authenticate the user against,
#                            # defaults to "admin".
#     user: 'username'       # the mongodb username to use
#     pass: 'password'       # the mongodb password to use
#
# SSL connection parameters (https://api.mongodb.com/python/current/examples/tls.html):
#
#     ssl: yes                             # connect to the server using TLS
#     ssl_cert_reqs: yes                   # require a certificate from the server when TLS is enabled
#     ssl_ca_certs: '/path/to/ca.pem'      # use a specific set of CA certificates
#     ssl_crlfile: '/path/to/crl.pem'      # use a certificate revocation lists
#     ssl_certfile: '/path/to/client.pem'  # use a client certificate
#     ssl_keyfile: '/path/to/key.pem'      # use a specific client certificate key
#     ssl_pem_passphrase: 'passphrase'     # use a passphrase to decrypt encrypted private keys
#

# ----------------------------------------------------------------------
# to connect to the mongodb on localhost, without a password:
# ----------------------------------------------------------------------
# AUTO-DETECTION JOBS
# only one of them will run (they have the same name)

local:
    name : 'local'
    host : '127.0.0.1'
    port : 27017

# authsample:
#     name   : 'secure'
#     host   : 'mongodb.example.com'
#     port   : 27017
#     authdb : 'admin'
#     user   : 'monitor'
#     pass   : 'supersecret'
