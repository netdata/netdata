# netdata python.d.plugin configuration for openvpn status log
#
# This file is in YaML format. Generally the format is:
#
# name: value
#
# There are 2 sections:
#  - global variables
#  - one or more JOBS
#
# JOBS allow you to collect values from multiple sources.
# Each source will have its own set of charts.
#
# JOB parameters have to be indented (using spaces only, example below).

# ----------------------------------------------------------------------
# Global Variables
# These variables set the defaults for all JOBs, however each JOB
# may define its own, overriding the defaults.

# update_every sets the default data collection frequency.
# If unset, the python.d.plugin default is used.
# update_every: 1

# priority controls the order of charts at the netdata dashboard.
# Lower numbers move the charts towards the top of the page.
# If unset, the default for python.d.plugin is used.
# priority: 60000

# penalty indicates whether to apply penalty to update_every in case of failures.
# Penalty will increase every 5 failed updates in a row. Maximum penalty is 10 minutes.
# penalty: yes

# autodetection_retry sets the job re-check interval in seconds.
# The job is not deleted if check fails.
# Attempts to start the job are made once every autodetection_retry.
# This feature is disabled by default.
# autodetection_retry: 0

# ----------------------------------------------------------------------
# JOBS (data collection sources)
#
# The default JOBS share the same *name*. JOBS with the same name
# are mutually exclusive. Only one of them will be allowed running at
# any time. This allows autodetection to try several alternatives and
# pick the one that works.
#
# Any number of jobs is supported.
#
# All python.d.plugin JOBS (for all its modules) support a set of
# predefined parameters. These are:
#
# job_name:
#     name: myname            # the JOB's name as it will appear at the
#                             # dashboard (by default is the job_name)
#                             # JOBs sharing a name are mutually exclusive
#     update_every: 1         # the JOB's data collection frequency
#     priority: 60000         # the JOB's order on the dashboard
#     penalty: yes            # the JOB's penalty
#     autodetection_retry: 0  # the JOB's re-check interval in seconds
#
# Additionally to the above, openvpn status log also supports the following:
#
#     log_path: 'PATH'     # the path to openvpn status log file
#
# ----------------------------------------------------------------------
# AUTO-DETECTION JOBS
# only one of them will run (they have the same name)
#
# IMPORTANT information
#
# 1. If you are running multiple OpenVPN instances out of the same directory, MAKE SURE TO EDIT DIRECTIVES which create output files
# so that multiple instances do not overwrite each other's output files.
# 2. Make sure NETDATA USER CAN READ openvpn-status.log
#
#     * cd into directory with openvpn-status.log and run the following commands as root 
#     * #chown :netdata openvpn-status.log && chmod 640 openvpn-status.log
#     * To check permission and group membership run
#     * #ls -l openvpn-status.log
#     -rw-r----- 1 root netdata 359 dec 21 21:22 openvpn-status.log
#
# 3. Update_every interval MUST MATCH interval on which OpenVPN writes operational status to log file.
# If its not true traffic chart WILL DISPLAY WRONG values
#
# Default OpenVPN update interval is 10 second on Debian 8
# # ps -C openvpn -o command=
#       /usr/sbin/openvpn --daemon ovpn-server --status /run/openvpn/server.status 10 --cd /etc/openvpn --config /etc/openvpn/server.conf
# 
# 4. Confirm status is configured in your OpenVPN configuration.
#     * Open OpenVPN config in an editor (e.g. sudo nano /etc/openvpn/default.conf)
#     * Confirm status is enabled with below:
#     status /var/log/openvpn-status.log
#
#default:
# log_path: '/var/log/openvpn-status.log'
#
# ----------------------------------------------------------------------
