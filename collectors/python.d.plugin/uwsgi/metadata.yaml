plugin_name: python.d.plugin
modules:
  - meta:
      plugin_name: python.d.plugin
      module_name: uwsgi
      monitored_instance:
        name: uWSGI
        link: "https://github.com/unbit/uwsgi/tree/2.0.21"
        categories:
          - data-collection.web-servers-and-web-proxies
        icon_filename: "uwsgi.svg"
      related_resources:
        integrations:
          list: []
      info_provided_to_referring_integrations:
        description: ""
      keywords:
        - application server
        - python
        - web applications
      most_popular: false
    overview:
      data_collection:
        metrics_description: "This collector monitors uWSGI metrics about requests, workers, memory and more."
        method_description: "It collects every metric exposed from the stats server of uWSGI, either from the `stats.socket` or from the web server's TCP/IP socket."
      supported_platforms:
        include: []
        exclude: []
      multi_instance: true
      additional_permissions:
        description: ""
      default_behavior:
        auto_detection:
          description: "This collector will auto-detect uWSGI instances deployed on the local host, running on port 1717, or exposing stats on socket `tmp/stats.socket`."
        limits:
          description: ""
        performance_impact:
          description: ""
    setup:
      prerequisites:
        list:
          - title: Enable the uWSGI Stats server
            description: |
              Make sure that you uWSGI exposes it's metrics via a Stats server.
              
              Source: https://uwsgi-docs.readthedocs.io/en/latest/StatsServer.html
      configuration:
        file:
          name: "python.d/uwsgi.conf"
        options:
          description: |
            There are 2 sections:
            
            * Global variables
            * One or more JOBS that can define multiple different instances to monitor.
            
            The following options can be defined globally: priority, penalty, autodetection_retry, update_every, but can also be defined per JOB to override the global values.
            
            Additionally, the following collapsed table contains all the options that can be configured inside a JOB definition.
            
            Every configuration JOB starts with a `job_name` value which will appear in the dashboard, unless a `name` parameter is specified.
          folding:
            title: "Config options"
            enabled: true
          list:
            - name: update_every
              description: Sets the default data collection frequency.
              default_value: 5
              required: false
            - name: priority
              description: Controls the order of charts at the netdata dashboard.
              default_value: 60000
              required: false
            - name: autodetection_retry
              description: Sets the job re-check interval in seconds.
              default_value: 0
              required: false
            - name: penalty
              description: Indicates whether to apply penalty to update_every in case of failures.
              default_value: yes
              required: false
            - name: name
              description: The JOB's name as it will appear at the dashboard (by default is the job_name)
              default_value: job_name
              required: false
            - name: socket
              description: The 'path/to/uwsgistats.sock'
              default_value: no
              required: false
            - name: host
              description: The host to connect to
              default_value: no
              required: false
            - name: port
              description: The port to connect to
              default_value: no
              required: false
        examples:
          folding:
            enabled: true
            title: "Config"
          list:
            - name: Basic (default out-of-the-box)
              description: A basic example configuration, one job will run at a time. Autodetect mechanism uses it by default. As all JOBs have the same name, only one can run at a time.
              config: |
                socket:
                  name     : 'local'
                  socket   : '/tmp/stats.socket'
                
                localhost:
                  name     : 'local'
                  host     : 'localhost'
                  port     : 1717
                
                localipv4:
                  name     : 'local'
                  host     : '127.0.0.1'
                  port     : 1717
                
                localipv6:
                  name     : 'local'
                  host     : '::1'
                  port     : 1717
            - name: Multi-instance
              description: |
                > **Note**: When you define multiple jobs, their names must be unique.
                
                Collecting metrics from local and remote instances.
              config: |
                local:
                  name     : 'local'
                  host     : 'localhost'
                  port     : 1717
                
                remote:
                  name     : 'remote'
                  host     : '192.0.2.1'
                  port     : 1717
    troubleshooting:
      problems:
        list: []
    alerts: []
    metrics:
      folding:
        title: Metrics
        enabled: false
      description: ""
      availability: []
      scopes:
        - name: global
          description: "These metrics refer to the entire monitored application."
          labels: []
          metrics:
            - name: uwsgi.requests
              description: Requests
              unit: "requests/s"
              chart_type: stacked
              dimensions:
                - name: a dimension per worker
            - name: uwsgi.tx
              description: Transmitted data
              unit: "KiB/s"
              chart_type: stacked
              dimensions:
                - name: a dimension per worker
            - name: uwsgi.avg_rt
              description: Average request time
              unit: "milliseconds"
              chart_type: line
              dimensions:
                - name: a dimension per worker
            - name: uwsgi.memory_rss
              description: RSS (Resident Set Size)
              unit: "MiB"
              chart_type: stacked
              dimensions:
                - name: a dimension per worker
            - name: uwsgi.memory_vsz
              description: VSZ (Virtual Memory Size)
              unit: "MiB"
              chart_type: stacked
              dimensions:
                - name: a dimension per worker
            - name: uwsgi.exceptions
              description: Exceptions
              unit: "exceptions"
              chart_type: line
              dimensions:
                - name: exceptions
            - name: uwsgi.harakiris
              description: Harakiris
              unit: "harakiris"
              chart_type: line
              dimensions:
                - name: harakiris
            - name: uwsgi.respawns
              description: Respawns
              unit: "respawns"
              chart_type: line
              dimensions:
                - name: respawns
