# netdata python.d.plugin configuration for ProxySQL
#
# This file is in YaML format. Generally the format is:
#
# name: value
#
# There are 2 sections:
#  - global variables
#  - one or more JOBS
#
# JOBS allow you to collect values from multiple sources.
# Each source will have its own set of charts.
#
# JOB parameters have to be indented (using spaces only, example below).

# ----------------------------------------------------------------------
# Global Variables
# These variables set the defaults for all JOBs, however each JOB
# may define its own, overriding the defaults.

# update_every sets the default data collection frequency.
# If unset, the python.d.plugin default is used.
# update_every: 1

# priority controls the order of charts at the netdata dashboard.
# Lower numbers move the charts towards the top of the page.
# If unset, the default for python.d.plugin is used.
# priority: 60000

# penalty indicates whether to apply penalty to update_every in case of failures.
# Penalty will increase every 5 failed updates in a row. Maximum penalty is 10 minutes.
# penalty: yes

# autodetection_retry sets the job re-check interval in seconds.
# The job is not deleted if check fails.
# Attempts to start the job are made once every autodetection_retry.
# This feature is disabled by default.
# autodetection_retry: 0

# ----------------------------------------------------------------------
# JOBS (data collection sources)
#
# The default JOBS share the same *name*. JOBS with the same name
# are mutually exclusive. Only one of them will be allowed running at
# any time. This allows autodetection to try several alternatives and
# pick the one that works.
#
# Any number of jobs is supported.
#
# All python.d.plugin JOBS (for all its modules) support a set of
# predefined parameters. These are:
#
# job_name:
#     name: myname            # the JOB's name as it will appear at the
#                             # dashboard (by default is the job_name)
#                             # JOBs sharing a name are mutually exclusive
#     update_every: 1         # the JOB's data collection frequency
#     priority: 60000         # the JOB's order on the dashboard
#     penalty: yes            # the JOB's penalty
#     autodetection_retry: 0  # the JOB's re-check interval in seconds
#
# Additionally to the above, proxysql also supports the following:
#
#     host: 'IP or HOSTNAME' # the host to connect to
#     port: PORT             # the port to connect to
#
#  in all cases, the following can also be set:
#
#     user: 'username'       # the proxysql username to use
#     pass: 'password'       # the proxysql password to use
#

# AUTO-DETECTION JOBS
# only one of them will run (they have the same name)

tcp:
  name     : 'local'
  user     : 'stats'
  pass     : 'stats'
  host     : 'localhost'
  port     : '6032'

tcpipv4:
  name     : 'local'
  user     : 'stats'
  pass     : 'stats'
  host     : '127.0.0.1'
  port     : '6032'

tcpipv6:
  name     : 'local'
  user     : 'stats'
  pass     : 'stats'
  host     : '::1'
  port     : '6032'

tcp_admin:
  name     : 'local'
  user     : 'admin'
  pass     : 'admin'
  host     : 'localhost'
  port     : '6032'

tcpipv4_admin:
  name     : 'local'
  user     : 'admin'
  pass     : 'admin'
  host     : '127.0.0.1'
  port     : '6032'

tcpipv6_admin:
  name     : 'local'
  user     : 'admin'
  pass     : 'admin'
  host     : '::1'
  port     : '6032'
