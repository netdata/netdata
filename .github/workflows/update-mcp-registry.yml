name: Update MCP Registry
on:
  release:
    types: [released]

concurrency:
  group: update-mcp-registry-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read

jobs:
  publish-mcp-registry:
    name: Publish to MCP Registry
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v5

      - name: Update server.json version
        id: update_version
        run: |
          VERSION="$(cat packaging/version)"
          VERSION="${VERSION#v}"
          sed -i 's/"version": ".*"/"version": "'"$VERSION"'"/' server.json
          echo "Updated server.json to version: $VERSION"

      - name: Install mcp-publisher (latest release)
        id: install_publisher
        run: |
          set -euo pipefail
          OS="$(uname -s | tr '[:upper:]' '[:lower:]')"
          ARCH="$(uname -m | sed 's/x86_64/amd64/;s/aarch64/arm64/')"
          URL="https://github.com/modelcontextprotocol/registry/releases/latest/download/mcp-publisher_${OS}_${ARCH}.tar.gz"
          curl -fsSL "$URL" | tar xz
          sudo mv mcp-publisher /usr/local/bin/
          mcp-publisher --version

      - name: Validate server.json (dry run)
        id: validate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mcp-publisher publish server.json --dry-run

      - name: Publish to registry
        id: publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mcp-publisher publish server.json

      - name: Failure Notification
        uses: rtCamp/action-slack-notify@v2
        if: failure()
        env:
          SLACK_COLOR: 'danger'
          SLACK_FOOTER: ''
          SLACK_ICON_EMOJI: ':github-actions:'
          SLACK_TITLE: 'Failed to publish to MCP Registry:'
          SLACK_USERNAME: 'GitHub Actions'
          SLACK_MESSAGE: |-
            ${{ github.repository }}: Failed to publish new agent version to MCP Registry.
            Checkout: ${{ steps.checkout.outcome }}
            Update version: ${{ steps.update_version.outcome }}
            Install mcp-publisher: ${{ steps.install_publisher.outcome }}
            Validate: ${{ steps.validate.outcome }}
            Publish: ${{ steps.publish.outcome }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
