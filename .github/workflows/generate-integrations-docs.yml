---
# CI workflow used to generate documentation from integrations/integrations.js.

name: Generate Integrations Documentation
on:
  push:
    branches:
      - master
    paths:
      - 'integrations/integrations.js'
  workflow_dispatch: null
concurrency: # This keeps multiple instances of the job from running concurrently for the same ref.
  group: generate-integrations-docs-${{ github.ref }}
  cancel-in-progress: true
jobs:
  generate-integrations-documentation:
    name: Generate Integrations Documentation
    runs-on: ubuntu-latest
    if: github.repository == 'netdata/netdata'
    steps:
      - name: Checkout Agent
        id: checkout-agent
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: recursive
      - name: Generate Integrations Documentation
        id: generate
        run: |
          python3 integrations/gen_docs_integrations.py
      - name: Create PR
        id: create-pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.NETDATABOT_GITHUB_TOKEN }}
          commit-message: Generate Integrations Documentation
          branch: integrations-docs
          title: Integrations Documentation
          body: |
            Generate Documentation from `integrations/integrations.js` based on the latest code.

            This PR was auto-generated by
            `.github/workflows/generate-integrations-docs.yml`.
      - name: Failure Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: 'danger'
          SLACK_FOOTER: ''
          SLACK_ICON_EMOJI: ':github-actions:'
          SLACK_TITLE: 'Integrations Documentation generation failed:'
          SLACK_USERNAME: 'GitHub Actions'
          SLACK_MESSAGE: |-
              ${{ github.repository }}: Failed to create PR generating documentation from integrations.js
              Checkout Agent: ${{ steps.checkout-agent.outcome }}
              Generate Integrations: ${{ steps.generate.outcome }}
              Create PR: ${{ steps.create-pr.outcome }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: >-
          ${{
            failure()
            && startsWith(github.ref, 'refs/heads/master')
            && github.repository == 'netdata/netdata'
          }}
