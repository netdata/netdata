disabled: yes

name: 'snmp'

discover:
  - discoverer: snmp
    snmp:
      # how often to scan the networks for devices (default: 30 m)
      rescan_interval: "30m"

      # the maximum time to wait for SNMP device responses (default: 1 s)
      timeout: "1s"

      # How long to trust cached discovery results before requiring a new probe (default: 6h)
      device_cache_ttl: "6h"

      # how many IPs to scan concurrently within each subnet (default: 32)
      parallel_scans_per_network: 32

      credentials:
        - name: "public-v2c"
          version: "2"
          community: "public"

        - name: "secure-v3"
          version: "3"
          username: "admin"
          auth_protocol: "SHA"
          auth_password: "secret123"
          priv_protocol: "AES"
          priv_password: "encrypt123"

      networks:
        # Subnet is the IP range to scan, supporting various formats:
        #  https://github.com/netdata/netdata/tree/master/src/go/plugin/go.d/pkg/iprange#supported-formats
        - subnet: "192.168.1.0/24"
          # Credential is the name of a credential from the Credentials list
          credential: "public-v2c"

classify:
  - name: "SNMP Devices"
    selector: "*"
    tags: "snmp"
    match:
      - tags: "snmp"
        expr: '{{ true }}'
compose:
  - name: "SNMP Devices"
    selector: "snmp"
    config:
      - selector: "snmp"
        template: |
          module: snmp
          update_every: 5
          {{- if .SysInfo.Name }}
          name: {{ .SysInfo.Name }}-ip-{{ .IPAddress }}
          {{- else }}
          name: ip-{{ .IPAddress }}
          {{- end }}
          hostname: {{ .IPAddress }}
          options:
            version: {{ .Credential.Version }}
          {{- if eq .Credential.Version "1" "2" }}
          community: {{ .Credential.Community }}
          {{- else }}
            user:
              name: {{ .Credential.UserName }}
              level: {{ .Credential.SecurityLevel }}
              auth_proto: {{ .Credential.AuthProtocol }}
              auth_key: {{ .Credential.AuthPassphrase }}
              priv_proto: {{ .Credential.PrivacyProtocol }}
              priv_key: {{ .Credential.PrivacyPassphrase }}
          {{- end }}
