## netdata configuration for AS/400 (IBM i) monitoring
## https://github.com/netdata/netdata/tree/master/src/go/plugin/ibm.d/collector/as400#configuration

## This collector monitors IBM AS/400 (IBM i) systems via unixODBC connections.
## It uses unixODBC exclusively for database connectivity, which provides several advantages:
## ✅ No IBM DB2 client library licensing required
## ✅ Works with both AS/400 and DB2 systems
## ✅ Simplified deployment and configuration
## ✅ Consistent behavior across all IBM database types

## Prerequisites:
## 1. Install unixODBC and tools:
##    Ubuntu/Debian: apt-get install unixodbc unixodbc-dev odbcinst
##    RHEL/CentOS: yum install unixODBC unixODBC-devel
## 2. Download and install IBM i Access ODBC driver:
##    https://www.ibm.com/support/pages/ibm-i-access-client-solutions
##    Direct link: https://public.dhe.ibm.com/software/ibmi/products/odbc/
##    Install: dpkg -i ibm-iaccess-*.deb (Ubuntu) or rpm -i ibm-iaccess-*.rpm (RHEL)
## 3. Verify installation: odbcinst -q -d should show "IBM i Access ODBC Driver"
## 4. Database user must have SELECT permissions on QSYS2 schema tables

#------------------------------------------------------------------------------
# JOBS (data collection sources)

## Each job represents a connection to an AS/400 system.
## You can define multiple jobs to monitor multiple AS/400 systems.

jobs:
  ## Example: Component-based configuration (recommended)
  ## Uncomment and modify the following example:
  
  # - name: as400_prod
  #   # Connection details using component-based configuration
  #   hostname: your.as400.host
  #   port: 8471               # Default AS/400 DRDA port
  #   username: your_username
  #   password: your_password
  #   database: '*SYSBAS'      # Default AS/400 database
  #   
  #   # Optional: ODBC driver name (auto-detected if not specified)
  #   # odbc_driver: 'IBM i Access ODBC Driver'
  #   
  #   # Optional: Enable SSL/TLS
  #   # use_ssl: true
  #   # ssl_server_cert_path: /path/to/cert.pem
  #   
  #   # Update interval in seconds
  #   # Default: 5
  #   update_every: 5
  #   
  #   # Connection timeout
  #   # Default: 2
  #   timeout: 2
  #   
  #   # Slow-path worker for expensive queries
  #   # Defaults: slow_path=true, slow_path_update_every=10, slow_path_max_connections=1
  #   slow_path: true
  #   slow_path_update_every: 10
  #   slow_path_max_connections: 1
  #
  #   # Batch-path worker for aggregate queue totals (disabled by default)
  #   # Recommended: enable only when queue totals are required and use a long interval (>=600s in production).
  #   batch_path: false
  #   batch_path_update_every: 60
  #   batch_path_max_connections: 1
  
  ## Example: ODBC DSN string configuration
  # - name: as400_dsn
  #   # Direct ODBC connection string
  #   dsn: 'Driver={IBM i Access ODBC Driver};System=your.as400.host;Uid=username;Pwd=password'
  #   # IMPORTANT: For production environments, consider using secure methods for credential management
  #   # instead of storing them directly in this file (e.g., environment variables, secrets management systems)

  ## Example: SSL connection
  # - name: as400_ssl
  #   # Component-based SSL configuration
  #   hostname: your.as400.host
  #   port: 446                # SSL port
  #   username: your_username
  #   password: your_password
  #   database: '*SYSBAS'
  #   use_ssl: true
  #   ssl_server_cert_path: '/path/to/cert.crt'
  #   timeout: 5
  #   
  #   # OR using DSN string with SSL
  #   # dsn: 'Driver={IBM i Access ODBC Driver};System=your.as400.host;Uid=username;Pwd=password;SSL=1'

  ## Example: Large system with cardinality control
  ## Use this configuration for systems with many disks, subsystems, or job queues
  ## to prevent excessive memory usage and chart creation
  
  # - name: as400_large_system
  #   # Component-based configuration for large systems
  #   hostname: large.as400.com
  #   port: 8471
  #   username: monitor
  #   password: secret
  #   database: '*SYSBAS'
  #   
  #   # Active jobs to monitor (fully-qualified identifiers: JOB_NUMBER/USER/JOB_NAME).
  #   # Provide concrete job names to enable active job metrics; leave empty to disable.
  #   # Example: 
  #   # active_jobs:
  #   #   - 123456/QSYS/QSPCJOB
  #   active_jobs: []
  #   
  #   # Per-instance metric collection settings
  #   # These control which detailed metrics are collected
  #   
  #   # Collect disk metrics (per-disk statistics)
  #   # Default: true
  #   collect_disk_metrics: true
  #   
  #   # Maximum number of disks to monitor
  #   # Default: 100 (0 = unlimited)
  #   max_disks: 20
  #   
  #   # Pattern to filter disks. Supports wildcards (*, ?) and multiple patterns separated by |
  #   # Example: '*SSD*' to monitor only SSD disks, 'DD*|DM*' for DD or DM disks
  #   # Default: '' (all disks)
  #   collect_disks_matching: ''
  #   
  #   # Collect subsystem metrics (per-subsystem statistics)
  #   # Default: true
  #   collect_subsystem_metrics: true
  #   
  #   # Maximum number of subsystems to monitor
  #   # Default: 100 (0 = unlimited)
  #   max_subsystems: 10
  #   
  #   # Message queues to monitor (explicit list). Leave empty to disable collection.
  #   message_queues:
  #     - QSYS/QSYSOPR
  #     - QSYS/QSYSMSG
  #     - QSYS/QHST
  #   
  #   # Job queues to monitor (explicit list). Leave empty to disable collection.
  #   job_queues: []
  #   
  #   # Output queues to monitor (explicit list). Leave empty to disable collection.
  #   output_queues: []
  #   
  #   # Active jobs to monitor (fully-qualified identifiers: JOB_NUMBER/USER/JOB_NAME).
  #   # Provide concrete job names to enable active job metrics; leave empty to disable.
  #   # Example:
  #   # active_jobs:
  #   #   - 123456/QUSER/QPADEV0001
  #   active_jobs: []
  #   
  #   # Virtual node (vnode) assignment
  #   # Associates this job with a Virtual Node in Netdata Cloud
  #   # Default: not set
  #   # vnode: 'as400-prod'

  ## Example: Minimal monitoring (system-wide metrics only)
  ## Use this for basic monitoring without per-instance details
  
  # - name: as400_minimal
  #   # Component-based configuration for minimal monitoring
  #   hostname: minimal.as400.com
  #   port: 8471
  #   username: monitor
  #   password: secret
  #   database: '*SYSBAS'
  #   # Disable all per-instance metrics
  #   collect_disk_metrics: false
  #   collect_subsystem_metrics: false
  #   message_queues: []
  #   job_queues: []
  #   output_queues: []

  ## Example: Filtered collection
  ## Monitor specific resources using SQL LIKE patterns
  
  # - name: as400_filtered
  #   # Component-based configuration with filtering
  #   hostname: filtered.as400.com
  #   port: 8471
  #   username: monitor
  #   password: secret
  #   database: '*SYSBAS'
  #   # Monitor only SSD disks
  #   collect_disks_matching: '*SSD*'
  #   max_disks: 0  # No limit since we're filtering
  #   
  #   # Monitor only interactive and batch subsystems
  #   collect_subsystems_matching: 'Q*'
  #   
  #   # Monitor specific job queues
  #   job_queues:
  #     - QSYS/QBATCH
  #     - MYLIB/MYJOBQ

#------------------------------------------------------------------------------
# COLLECTED METRICS

## System-wide metrics (always collected):
## - CPU utilization (overall, partition, interactive, database, shared pool)
## - CPU configuration (configured CPUs, current processing capacity)
## - Active jobs count and job type breakdown (batch, interactive, system, spooled, other)
## - System ASP (Auxiliary Storage Pool) usage
## - Memory pool usage (Machine, Base, Interactive, Spool)
## - Memory pool sizes (current, defined, reserved for Machine and Base pools)
## - IFS (Integrated File System) usage and file count
## - System message queue depths (QSYSMSG, QSYSOPR)
## - Critical message counts in system queues
## - Aggregate disk busy percentage
## - Aggregate job queue length

## Per-disk metrics (when collect_disk_metrics is true):
## - Disk busy percentage
## - I/O requests per second (read/write)
## - I/O throughput (read/write bytes/s)
## - Average response time
## - Disk space usage percentage
## - Disk capacity (available/used GB)
## - Block operations per second (read/write)
## - SSD health (life remaining percentage) - SSDs only
## - SSD age (power on days) - SSDs only

## Per-subsystem metrics (when collect_subsystem_metrics is true):
## - Active jobs count
## - Jobs on job queues
## - Jobs held on job queues
## - Storage used (MB)

## Per-job-queue metrics (when job_queues list is non-empty):
## - Jobs waiting
## - Jobs held
## - Jobs scheduled

## Per-message-queue metrics (when message_queues list is non-empty):
## - Total messages
## - Message counts by type (informational, inquiry, diagnostic, escape, notify, sender copy)
## - Maximum severity in queue

## Per-output-queue metrics (when output_queues list is non-empty):
## - Number of files waiting
## - Active writers
## - Released status

## Per-job metrics (when active_jobs list is non-empty and collect_active_jobs is true):
## - CPU time used
## - Temporary storage used
## - Job active time
## - Elapsed CPU percentage

#------------------------------------------------------------------------------
# TROUBLESHOOTING

## ODBC Connection Issues:

## 1. "ODBC driver not found"
##    - Check that unixODBC is installed: odbcinst -j
##    - Verify IBM i Access ODBC driver is installed: odbcinst -q -d
##    - Check ODBC configuration: /etc/odbcinst.ini
##    - Ensure driver name matches exactly (case-sensitive)

## 2. "Connection refused"
##    - Check firewall rules for port 8471 (AS/400 DRDA) or 446 (SSL)
##    - Verify AS/400 system accepts TCP/IP connections
##    - Try telnet your.as400.host 8471 to test connectivity
##    - Verify hostname and credentials are correct

## 3. "Driver not found" or "Data source name not found"
##    - Common driver names: "IBM i Access ODBC Driver", "IBM i Access ODBC Driver 64-bit"
##    - List installed drivers: odbcinst -q -d
##    - Check /etc/odbcinst.ini for proper driver registration

## Common Issues:

## 1. "cgo: C compiler not found"
##    - Install gcc or build-essential package
##    - The ibm.d.plugin requires CGO

## 2. Certificate errors with SSL connections
##    - Use absolute paths for SSL certificate
##    - Ensure certificate is in PEM format
##    - Check file permissions (readable by netdata user)

## 3. Permission denied errors
##    - Grant SELECT permissions on QSYS2 tables:
##      GRANT SELECT ON QSYS2.SYSTEM_STATUS_INFO TO monitor_user;
##      GRANT SELECT ON QSYS2.ASP_INFO TO monitor_user;
##      GRANT SELECT ON QSYS2.MEMORY_POOL_INFO TO monitor_user;
##      (see documentation for complete list)

## 4. "connection failed: no database drivers available"
##    - The plugin will show available drivers in the error message
##    - Install unixODBC and IBM i Access ODBC driver
##    - This collector uses ODBC exclusively (no IBM licensing required)

#------------------------------------------------------------------------------
# TESTING YOUR CONFIGURATION

## To test this collector, run as netdata user:
## cd /usr/libexec/netdata/plugins.d/
## sudo -u netdata -s
## ./ibm.d.plugin -d -m as400 --dump=3s --dump-summary
##
## Test ODBC connection separately:
## isql -v "Driver={IBM i Access ODBC Driver};System=hostname;Uid=user;Pwd=pass;"
