## All available configuration options, their descriptions and default values:
## https://github.com/netdata/netdata/tree/master/src/go/plugin/ibm.d/modules/mq#configuration

## IBM MQ collector monitors Queue Managers, Queues, Channels, Topics, Listeners, and Subscriptions
## using the PCF (Programmable Command Format) protocol for comprehensive metrics collection.

## Prerequisites:
## 1. IBM MQ Server 7.0+ or IBM MQ Client libraries installed
## 2. PCF commands must be enabled (they are by default)
## 3. User must have MQ monitoring permissions:
##    - CONNECT and INQUIRE authority on the Queue Manager
##    - DISPLAY authority on objects to be monitored
##    - For reset statistics: PUT authority on SYSTEM.ADMIN.COMMAND.QUEUE
## 4. Network connectivity to MQ server port (default 1414)

#jobs:
#  # Example: Basic MQ monitoring with authentication
#  - name: mq_production
#    # Queue Manager name to connect to
#    # Default: QM1
#    queue_manager: QM1
#
#    # MQ server hostname or IP address
#    # Default: localhost
#    host: mq.example.com
#
#    # MQ server port number
#    # Default: 1414
#    port: 1414
#
#    # MQ channel name for connection
#    # Default: SYSTEM.DEF.SVRCONN
#    # Note: Production systems should use dedicated admin channels
#    channel: SYSTEM.ADMIN.SVRCONN
#
#    # Username for MQ authentication (leave empty if not required)
#    # Default: "" (no authentication)
#    user: mqadmin
#
#    # Password for MQ authentication (leave empty if not required)
#    # Default: "" (no authentication)
#    password: secret
#
#    # Update interval in seconds
#    # Default: 1
#    update_every: 5
#
#  # Example: Full monitoring with all metrics enabled
#  - name: mq_full_monitoring
#    queue_manager: QMGR1
#    host: localhost
#    port: 1414
#    channel: SYSTEM.DEF.SVRCONN
#
#    # === COLLECTION TOGGLES ===
#    # Enable collection of queue metrics (depth, messages in/out, etc.)
#    # Default: true
#    collect_queues: true
#
#    # Enable collection of channel metrics (status, messages, bytes)
#    # Default: true
#    collect_channels: true
#
#    # Enable collection of topic metrics (publish/subscribe statistics)
#    # Default: true
#    collect_topics: true
#
#    # Enable collection of listener metrics (status, connections)
#    # Default: true
#    collect_listeners: true
#
#    # Enable collection of subscription metrics (messages delivered)
#    # Default: true
#    collect_subscriptions: true
#
#    # === SYSTEM OBJECT COLLECTION ===
#    # Enable collection of SYSTEM.* queues (infrastructure visibility)
#    # These provide critical MQ internal metrics
#    # Default: true
#    collect_system_queues: true
#
#    # Enable collection of SYSTEM.* channels (clustering/admin health)
#    # Shows MQ internal communication patterns
#    # Default: true
#    collect_system_channels: true
#
#    # Enable collection of SYSTEM.* topics (internal messaging)
#    # Reveals MQ pub/sub infrastructure
#    # Default: true
#    collect_system_topics: true
#
#    # Enable collection of SYSTEM.* listeners (internal connectivity)
#    # Shows MQ network infrastructure
#    # Default: true
#    collect_system_listeners: true
#
#    # === CONFIGURATION METRICS ===
#    # Collect channel configuration details (max message length, etc.)
#    # Default: true
#    collect_channel_config: true
#
#    # Collect queue configuration details (max depth, max message length)
#    # Default: true
#    collect_queue_config: true
#
#    # === ADVANCED METRICS ===
#    # Enable queue reset statistics collection (MQCMD_RESET_Q_STATS)
#    # WARNING: This is a DESTRUCTIVE operation that resets queue statistics
#    # Requires PUT authority on SYSTEM.ADMIN.COMMAND.QUEUE
#    # Default: false
#    collect_reset_queue_stats: false
#
#    # Enable SYSTEM.ADMIN.STATISTICS.QUEUE metrics (MQ 7.5+)
#    # Provides advanced metrics like min/max depth over time
#    # Default: false (may not be available on all systems)
#    collect_statistics_queue: false
#
#    # Enable $SYS topic metrics (MQ 9.0+)
#    # Provides Queue Manager CPU, memory, and log utilization
#    # Default: false (requires MQ 9.0+)
#    collect_sys_topics: false
#
#    # === FILTERING AND SELECTORS ===
#    # Queue include patterns (wildcards supported). Empty list means all queues are eligible.
#    # Default: monitors critical system queues required for healthy operations.
#    include_queues:
#      - "SYSTEM.DEAD.LETTER.QUEUE"
#      - "SYSTEM.ADMIN.COMMAND.QUEUE"
#      - "SYSTEM.ADMIN.STATISTICS.QUEUE"
#
#    # Queue exclude patterns applied after includes. Defaults drop churn-heavy namespaces.
#    exclude_queues:
#      - "SYSTEM.*"
#      - "AMQ.*"
#
#    # Pattern to filter channels (wildcards supported)
#    # Default: "" (all channels)
#    channel_selector: ""
#
#    # Pattern to filter topics (wildcards supported)
#    # Default: "" (all topics)
#    topic_selector: ""
#
#    # Pattern to filter listeners (wildcards supported)
#    # Default: "" (all listeners)
#    listener_selector: ""
#
#    # Pattern to filter subscriptions (wildcards supported)
#    # Default: "" (all subscriptions)
#    subscription_selector: ""
#
#    # === CARDINALITY LIMITS ===
#    # Maximum number of queues to monitor (0 = unlimited)
#    # Use this to prevent excessive memory usage on large systems
#    # Default: 50
#    max_queues: 50
#
#    # Maximum number of channels to monitor (0 = unlimited)
#    # Default: 100
#    max_channels: 100
#
#    # Maximum number of topics to monitor (0 = unlimited)
#    # Default: 100
#    max_topics: 100
#
#    # Maximum number of listeners to monitor (0 = unlimited)
#    # Default: 100
#    max_listeners: 100
#
#    # === INTERVAL CONFIGURATION ===
#    # Statistics collection interval in seconds
#    # Auto-detected from Queue Manager STATINT if available
#    # Default: 60 (overwritten by STATINT if detected)
#    statistics_interval: 60
#
#    # $SYS topic collection interval in seconds
#    # Can be customized if MQ configuration differs from default
#    # Default: 10 (per IBM documentation)
#    sys_topic_interval: 10
#
#  # Example: Production configuration with filtering
#  - name: mq_production_filtered
#    queue_manager: PROD_QM
#    host: mq-prod.example.com
#    port: 1414
#    channel: ADMIN.SVRCONN
#    user: monitor
#    password: secret
#
#    # Monitor only application queues (exclude system queues)
#    collect_system_queues: false
#    collect_system_channels: false
#    collect_system_topics: false
#
#    # Filter to monitor only production queues
#    include_queues:
#      - "PROD.*"
#      - "APP.*"
#    exclude_queues:
#      - "PROD.TEMP.*"
#    max_queues: 200
#
#    # Monitor only active channels
#    channel_selector: "APP.*|CLUSTER.*"
#    max_channels: 50
#
#    # Don't collect destructive statistics
#    collect_reset_queue_stats: false
#
#    # Enable advanced monitoring if available
#    collect_statistics_queue: true
#    collect_sys_topics: true
#
#  # Example: Minimal monitoring (system health only)
#  - name: mq_minimal
#    queue_manager: QM1
#    host: localhost
#    port: 1414
#    channel: SYSTEM.DEF.SVRCONN
#
#    # Disable all per-object metrics
#    collect_queues: false
#    collect_channels: false
#    collect_topics: false
#    collect_listeners: false
#    collect_subscriptions: false
#
#    # Keep only queue manager level metrics
#    update_every: 10
#
#  # Example: Development environment with reset stats
#  - name: mq_dev
#    queue_manager: DEV_QM
#    host: dev-mq.example.com
#    port: 1414
#    channel: DEV.ADMIN.SVRCONN
#    user: admin
#    password: admin
#
#    # Enable reset statistics in dev (provides detailed metrics)
#    # WARNING: Destructive operation - resets counters
#    collect_reset_queue_stats: true
#
#    # Monitor everything including system objects
#    collect_system_queues: true
#    collect_system_channels: true
#
#    # No limits in development
#    max_queues: 0
#    max_channels: 0
#    max_topics: 0
#
## TROUBLESHOOTING:
## 1. "AMQ4036: Access not permitted"
##    - User needs CONNECT and INQUIRE authority on Queue Manager
##    - Grant with: setmqaut -m QM1 -t qmgr -p user +connect +inq +dsp
##
## 2. "AMQ4417: Channel not available"
##    - Check channel name and ensure it's enabled
##    - Verify with: runmqsc QM1 -> DISPLAY CHANNEL(channelname)
##
## 3. "Connection refused"
##    - Check MQ listener is running: runmqsc QM1 -> DISPLAY LISTENER(*)
##    - Verify firewall allows port 1414
##    - Test with: telnet hostname 1414
##
## 4. "MQRC_NOT_AUTHORIZED (2035)"
##    - Check user authentication settings
##    - For dev/test, can disable with: ALTER QMGR CHLAUTH(DISABLED)
##    - For production, configure proper channel authentication records
##
## 5. High cardinality warnings
##    - Use selectors to filter objects: include_queues: ["APP.*"]
##    - Set max limits: max_queues: 50
##    - Disable system object collection if not needed
##
## To test configuration:
## cd /usr/libexec/netdata/plugins.d/
## sudo -u netdata ./ibm.d.plugin -d -m mq --dump=3s --dump-summary
