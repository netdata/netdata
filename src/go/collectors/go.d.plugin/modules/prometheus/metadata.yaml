plugin_name: go.d.plugin
modules:
  - &module
    meta: &meta
      id: collector-go.d.plugin-prometheus-generic
      module_name: prometheus
      plugin_name: go.d.plugin
      monitored_instance:
        name: Prometheus endpoint
        link: https://prometheus.io/
        icon_filename: prometheus.svg
        categories:
          - data-collection.generic-data-collection
          # - data-collection.apm
      keywords:
        - prometheus
        - openmetrics
      related_resources:
        integrations:
          list: []
      info_provided_to_referring_integrations:
        description: ""
      most_popular: true
    overview: &overview
      data_collection:
        metrics_description: |
          This generic Prometheus collector gathers metrics from any [`Prometheus`](https://prometheus.io/) endpoints.
        method_description: |
          It collects metrics by periodically sending HTTP requests to the target instance.
      supported_platforms:
        include: []
        exclude: []
      multi_instance: true
      additional_permissions:
        description: ""
      default_behavior:
        auto_detection:
          description: |
            By default, it detects instances running on the local host by trying to connect to known ports that are [allocated to exporters](https://github.com/prometheus/prometheus/wiki/Default-port-allocations).
            The full list of endpoints is available in the collector's [configuration file](https://github.com/netdata/go.d.plugin/blob/master/config/go.d/prometheus.conf).
        limits:
          description: ""
        performance_impact:
          description: ""
    setup: &setup
      prerequisites:
        list: []
      configuration:
        file:
          name: go.d/prometheus.conf
        options:
          description: |
            The following options can be defined globally: update_every, autodetection_retry.
          folding:
            title: Config options
            enabled: true
          list:
            - name: update_every
              description: Data collection frequency.
              default_value: 10
              required: false
            - name: autodetection_retry
              description: Recheck interval in seconds. Zero means no recheck will be scheduled.
              default_value: 0
              required: false
            - name: url
              description: Server URL.
              default_value: ""
              required: true
            - name: selector
              description: Time series selector (filter).
              default_value: ""
              required: false
              detailed_description: |
                This option allows you to filter out unwanted time series. Only metrics matching the selector will be collected.

                - Logic: (pattern1 OR pattern2) AND !(pattern3 or pattern4)
                - Pattern syntax: [selector](https://github.com/netdata/go.d.plugin/blob/master/pkg/prometheus/selector/README.md).
                - Option syntax:
                
                ```yaml
                selector:
                  allow:
                    - pattern1
                    - pattern2
                  deny:
                    - pattern3
                    - pattern4
                ```
            - name: fallback_type
              description: Time series selector (filter).
              default_value: ""
              required: false
              detailed_description: |
                This option allows you to process Untyped metrics as Counter or Gauge instead of ignoring them.

                - Metric name pattern syntax: [shell file name pattern](https://golang.org/pkg/path/filepath/#Match).
                - Option syntax:
                
                ```yaml
                fallback_type:
                  counter:
                    - metric_name_pattern1
                    - metric_name_pattern2
                  gauge:
                    - metric_name_pattern3
                    - metric_name_pattern4
                ```
            - name: max_time_series
              description: Global time series limit. If an endpoint returns number of time series > limit the data is not processed.
              default_value: 2000
              required: false
            - name: max_time_series_per_metric
              description: Time series per metric (metric name) limit. Metrics with number of time series > limit are skipped.
              default_value: 200
              required: false
            - name: timeout
              description: HTTP request timeout.
              default_value: 10
              required: false
            - name: username
              description: Username for basic HTTP authentication.
              default_value: ""
              required: false
            - name: password
              description: Password for basic HTTP authentication.
              default_value: ""
              required: false
            - name: proxy_url
              description: Proxy URL.
              default_value: ""
              required: false
            - name: proxy_username
              description: Username for proxy basic HTTP authentication.
              default_value: ""
              required: false
            - name: proxy_password
              description: Password for proxy basic HTTP authentication.
              default_value: ""
              required: false
            - name: method
              description: HTTP request method.
              default_value: "GET"
              required: false
            - name: body
              description: HTTP request body.
              default_value: ""
              required: false
            - name: headers
              description: HTTP request headers.
              default_value: ""
              required: false
            - name: not_follow_redirects
              description: Redirect handling policy. Controls whether the client follows redirects.
              default_value: no
              required: false
            - name: tls_skip_verify
              description: Server certificate chain and hostname validation policy. Controls whether the client performs this check.
              default_value: no
              required: false
            - name: tls_ca
              description: Certification authority that the client uses when verifying the server's certificates.
              default_value: ""
              required: false
            - name: tls_cert
              description: Client TLS certificate.
              default_value: ""
              required: false
            - name: tls_key
              description: Client TLS key.
              default_value: ""
              required: false
        examples:
          folding:
            title: Config
            enabled: true
          list:
            - name: Basic
              folding:
                enabled: false
              description: |
                > **Note**: Change the port of the monitored application on which it provides metrics.

                A basic example configuration.
              config: |
                jobs:
                  - name: local
                    url: http://127.0.0.1:9090/metrics
            - name: Read metrics from a file
              description: An example configuration to read metrics from a file.
              config: |
                # use "file://" scheme
                jobs:
                  - name: myapp
                    url: file:///opt/metrics/myapp/metrics.txt
            - name: HTTP authentication
              description: |
                > **Note**: Change the port of the monitored application on which it provides metrics.

                Basic HTTP authentication.
              config: |
                jobs:
                  - name: local
                    url: http://127.0.0.1:9090/metrics
                    username: username
                    password: password
            - name: HTTPS with self-signed certificate
              description: |
                > **Note**: Change the port of the monitored application on which it provides metrics.

                Do not validate server certificate chain and hostname.
              config: |
                jobs:
                  - name: local
                    url: https://127.0.0.1:9090/metrics
                    tls_skip_verify: yes
            - name: Multi-instance
              description: |
                > **Note**: When you define multiple jobs, their names must be unique.
                > **Note**: Change the port of the monitored application on which it provides metrics.
                
                Collecting metrics from local and remote instances.
              config: |
                jobs:
                  - name: local
                    url: http://127.0.0.1:9090/metrics
                
                  - name: remote
                    url: http://192.0.2.1:9090/metrics
    troubleshooting:
      problems:
        list: []
    alerts: []
    metrics:
      folding:
        title: Metrics
        enabled: false
      description: |
        This collector has built-in grouping logic based on the [type of metrics](https://prometheus.io/docs/concepts/metric_types/).

        | Metric                    | Chart                                     | Dimension(s)         | Algorithm   |
        |---------------------------|-------------------------------------------|----------------------|-------------|
        | Gauge                     | for each label set                        | one, the metric name | absolute    |
        | Counter                   | for each label set                        | one, the metric name | incremental |
        | Summary (quantiles)       | for each label set (excluding 'quantile') | for each quantile    | absolute    |
        | Summary (sum and count)   | for each label set                        | the metric name      | incremental |
        | Histogram (buckets)       | for each label set (excluding 'le')       | for each bucket      | incremental |
        | Histogram (sum and count) | for each label set                        | the metric name      | incremental |

        Untyped metrics (have no '# TYPE') processing:

        - As Counter or Gauge depending on pattern match when 'fallback_type' is used.
        - As Counter if it has suffix '_total'.
        - As Summary if it has 'quantile' label.
        - As Histogram if it has 'le' label.

        **The rest are ignored**.
      availability: []
      scopes: []
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-a10-acos
      most_popular: false
      community: true
      monitored_instance:
        name: A10 ACOS network devices
        link: https://github.com/a10networks/PrometheusExporter
        icon_filename: a10-networks.png
        categories:
          - data-collection.networking-stack-and-network-interfaces
      keywords:
        - network monitoring
        - network performance
        - traffic analysis
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor A10 Networks device metrics for comprehensive management and analysis.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [A10-Networks Prometheus Exporter](https://github.com/a10networks/PrometheusExporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [A10-Networks Prometheus Exporter](https://github.com/a10networks/PrometheusExporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-airflow
      most_popular: false
      community: true
      monitored_instance:
        name: Apache Airflow
        link: https://github.com/shalb/airflow-exporter
        icon_filename: airflow.png
        categories:
          - data-collection.apm
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Apache Airflow metrics to optimize task scheduling and workflow management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Airflow exporter](https://github.com/shalb/airflow-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Airflow exporter](https://github.com/shalb/airflow-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      most_popular: false
      community: true
      id: collector-go.d.plugin-prometheus-alibaba-cloud
      monitored_instance:
        name: Alibaba Cloud
        link: https://github.com/aylei/aliyun-exporter # FIXME: This repository has been archived by the owner on Oct 28, 2019
        icon_filename: alibaba-cloud.svg
        categories:
          - data-collection.cloud-provider-managed
      keywords:
        - cloud services
        - cloud computing
        - scalability
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Alibaba Cloud services and resources for efficient management and cost optimization.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Alibaba Cloud Exporter](https://github.com/aylei/aliyun-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Alibaba Cloud Exporter](https://github.com/aylei/aliyun-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-flink
      most_popular: false
      community: true
      monitored_instance:
        name: Apache Flink
        link: https://github.com/matsumana/flink_exporter
        icon_filename: apache_flink.png
        categories:
          - data-collection.apm
      keywords:
        - web server
        - http
        - https
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep an eye on Apache Flink metrics for efficient stream processing and application management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Apache Flink Metrics Reporter](https://github.com/matsumana/flink_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Apache Flink Metrics Reporter](https://github.com/matsumana/flink_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      most_popular: false
      community: true
      id: collector-go.d.plugin-prometheus-aruba
      monitored_instance:
        name: Aruba devices
        link: https://github.com/slashdoom/aruba_exporter
        icon_filename: aruba.svg
        categories:
          - data-collection.networking-stack-and-network-interfaces
      keywords:
        - network monitoring
        - network performance
        - aruba devices
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Aruba Networks devices performance metrics for comprehensive network management and analysis.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Aruba Exporter](https://github.com/slashdoom/aruba_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Aruba Exporter](https://github.com/slashdoom/aruba_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-aws_ec2
      most_popular: false
      community: true
      monitored_instance:
        name: AWS EC2 Compute instances
        link: https://github.com/O1ahmad/aws_ec2_exporter
        icon_filename: aws-ec2.png
        categories:
          - data-collection.cloud-provider-managed
      keywords:
        - cloud services
        - cloud computing
        - aws services
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track AWS EC2 instances key metrics for optimized performance and cost management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [AWS EC2 Exporter](https://github.com/O1ahmad/aws_ec2_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [AWS EC2 Exporter](https://github.com/O1ahmad/aws_ec2_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-aws_ecs
      most_popular: false
      community: true
      monitored_instance:
        name: AWS ECS
        link: https://github.com/bevers222/ecs-exporter
        icon_filename: amazon-ecs.png
        categories:
          - data-collection.cloud-provider-managed
      keywords:
        - cloud services
        - cloud computing
        - aws services
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep an eye on AWS ECS services and resources for optimized container management and orchestration.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [AWS ECS exporter](https://github.com/bevers222/ecs-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [AWS ECS exporter](https://github.com/bevers222/ecs-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-aws_health
      most_popular: false
      community: true
      monitored_instance:
        name: AWS Health events
        link: https://github.com/vladvasiliu/aws-health-exporter-rs
        icon_filename: aws.svg
        categories:
          - data-collection.cloud-provider-managed
      keywords:
        - cloud services
        - cloud computing
        - aws services
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track AWS service health metrics for proactive incident management and resolution.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [AWS Health Exporter](https://github.com/vladvasiliu/aws-health-exporter-rs).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [AWS Health Exporter](https://github.com/vladvasiliu/aws-health-exporter-rs) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-aws_instance_health
      most_popular: false
      community: true
      monitored_instance:
        name: AWS instance health
        link: https://github.com/bobtfish/aws-instance-health-exporter
        icon_filename: aws.svg
        categories:
          - data-collection.cloud-provider-managed
      keywords:
        - cloud services
        - cloud computing
        - aws services
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor the health of AWS instances for improved performance and availability.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [AWS instance health exporter](https://github.com/bobtfish/aws-instance-health-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [AWS instance health exporter](https://github.com/bobtfish/aws-instance-health-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-aws_s3
      most_popular: false
      community: true
      monitored_instance:
        name: AWS S3 buckets
        link: https://github.com/ribbybibby/s3_exporter
        icon_filename: aws-s3.png
        categories:
          - data-collection.cloud-provider-managed
      keywords:
        - cloud services
        - cloud computing
        - aws services
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor AWS S3 storage metrics for optimized performance, data management, and cost efficiency.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [AWS S3 Exporter](https://github.com/ribbybibby/s3_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [AWS S3 Exporter](https://github.com/ribbybibby/s3_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-aws_sqs
      most_popular: false
      community: true
      monitored_instance:
        name: AWS SQS
        link: https://github.com/jmal98/sqs-exporter
        icon_filename: aws-sqs.png
        categories:
          - data-collection.cloud-provider-managed
      keywords:
        - cloud services
        - cloud computing
        - aws services
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track AWS SQS messaging metrics for efficient message processing and queue management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [AWS SQS Exporter](https://github.com/jmal98/sqs-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [AWS SQS Exporter](https://github.com/jmal98/sqs-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-azure_ad_app_passwords
      most_popular: false
      community: true
      monitored_instance:
        name: Azure AD App passwords
        link: https://github.com/vladvasiliu/azure-app-secrets-monitor
        icon_filename: azure.png
        categories:
          - data-collection.cloud-provider-managed
      keywords:
        - cloud services
        - cloud computing
        - azure services
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Safeguard and track Azure App secrets for enhanced security and access management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Azure App Secrets monitor](https://github.com/vladvasiliu/azure-app-secrets-monitor).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Azure App Secrets monitor](https://github.com/vladvasiliu/azure-app-secrets-monitor) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-azure_elastic_sql
      most_popular: false
      community: true
      monitored_instance:
        name: Azure Elastic Pool SQL
        link: https://github.com/benclapp/azure_elastic_sql_exporter
        icon_filename: azure-elastic-sql.png
        categories:
          - data-collection.cloud-provider-managed
      keywords:
        - database
        - relational db
        - data querying
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Azure Elastic SQL performance metrics for efficient database management and query optimization.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Azure Elastic SQL Exporter](https://github.com/benclapp/azure_elastic_sql_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Azure Elastic SQL Exporter](https://github.com/benclapp/azure_elastic_sql_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-azure_app
      most_popular: false
      community: true
      monitored_instance:
        name: Azure application
        link: https://github.com/RobustPerception/azure_metrics_exporter
        icon_filename: azure.png
        categories:
          - data-collection.cloud-provider-managed
      keywords:
        - cloud services
        - cloud computing
        - azure services
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Azure Monitor metrics for comprehensive resource management and performance optimization.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Azure Monitor exporter](https://github.com/RobustPerception/azure_metrics_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Azure Monitor exporter](https://github.com/RobustPerception/azure_metrics_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-azure_res
      most_popular: false
      community: true
      monitored_instance:
        name: Azure Resources
        link: https://github.com/FXinnovation/azure-resources-exporter
        icon_filename: azure.png
        categories:
          - data-collection.cloud-provider-managed
      keywords:
        - cloud services
        - cloud computing
        - azure services
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep tabs on Azure resources vital metrics for efficient cloud management and cost optimization.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Azure Resources Exporter](https://github.com/FXinnovation/azure-resources-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Azure Resources Exporter](https://github.com/FXinnovation/azure-resources-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-azure_service_bus
      most_popular: false
      community: true
      monitored_instance:
        name: Azure Service Bus
        link: https://github.com/marcinbudny/servicebus_exporter
        icon_filename: azure-service-bus.png
        categories:
          - data-collection.cloud-provider-managed
      keywords:
        - cloud services
        - cloud computing
        - azure services
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Azure Service Bus messaging metrics for optimized communication and integration.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Azure Service Bus Exporter](https://github.com/marcinbudny/servicebus_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Azure Service Bus Exporter](https://github.com/marcinbudny/servicebus_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-azure_sql
      most_popular: false
      community: true
      monitored_instance:
        name: Azure SQL
        link: https://github.com/iamseth/azure_sql_exporter
        icon_filename: azure-sql.png
        categories:
          - data-collection.cloud-provider-managed
      keywords:
        - database
        - relational db
        - data querying
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Azure SQL performance metrics for efficient database management and query performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Azure SQL exporter](https://github.com/iamseth/azure_sql_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Azure SQL exporter](https://github.com/iamseth/azure_sql_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-bigquery
      most_popular: false
      community: true
      monitored_instance:
        name: BigQuery
        link: https://github.com/m-lab/prometheus-bigquery-exporter
        icon_filename: bigquery.png
        categories:
          - data-collection.cloud-provider-managed
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Google BigQuery metrics for optimized data processing and analysis.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [BigQuery Exporter](https://github.com/m-lab/prometheus-bigquery-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [BigQuery Exporter](https://github.com/m-lab/prometheus-bigquery-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-blackbox
      most_popular: false
      community: true
      monitored_instance:
        name: Blackbox
        link: https://github.com/prometheus/blackbox_exporter
        icon_filename: prometheus.svg
        categories:
          - data-collection.synthetic-checks
      keywords:
        - blackbox
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track external service availability and response times with Blackbox monitoring.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Blackbox exporter](https://github.com/prometheus/blackbox_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Blackbox exporter](https://github.com/prometheus/blackbox_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-borg
      most_popular: false
      community: true
      monitored_instance:
        name: Borg backup
        link: https://github.com/k0ral/borg-exporter
        icon_filename: borg.svg
        categories:
          - data-collection.storage-mount-points-and-filesystems
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Borg backup performance metrics for efficient data protection and recovery.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Borg backup exporter](https://github.com/k0ral/borg-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Borg backup exporter](https://github.com/k0ral/borg-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-cadvisor
      most_popular: false
      community: true
      monitored_instance:
        name: cAdvisor
        link: https://github.com/google/cadvisor
        icon_filename: cadvisor.png
        categories:
          - data-collection.containers-and-vms
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor container resource usage and performance metrics with cAdvisor for efficient container management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [cAdvisor](https://github.com/google/cadvisor).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [cAdvisor](https://github.com/google/cadvisor) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-cilium_agent
      most_popular: false
      community: true
      monitored_instance:
        name: Cilium Agent
        link: https://github.com/cilium/cilium
        icon_filename: cilium.png
        categories:
          - data-collection.kubernetes
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep an eye on Cilium Agent metrics for optimized network security and connectivity.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Cilium Agent](https://github.com/cilium/cilium).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Cilium Agent](https://github.com/cilium/cilium) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-cilium_operator
      most_popular: false
      community: true
      monitored_instance:
        name: Cilium Operator
        link: https://github.com/cilium/cilium
        icon_filename: cilium.png
        categories:
          - data-collection.kubernetes
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Cilium Operator metrics for efficient Kubernetes network security management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Cilium Operator](https://github.com/cilium/cilium).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Cilium Operator](https://github.com/cilium/cilium) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-cilium_proxy
      most_popular: false
      community: true
      monitored_instance:
        name: Cilium Proxy
        link: https://github.com/cilium/proxy
        icon_filename: cilium.png
        categories:
          - data-collection.kubernetes
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Cilium Proxy metrics for enhanced network security and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Cilium Proxy](https://github.com/cilium/proxy).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Cilium Proxy](https://github.com/cilium/proxy) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-cisco_aci
      most_popular: false
      community: true
      monitored_instance:
        name: Cisco ACI
        link: https://github.com/RavuAlHemio/prometheus_aci_exporter
        icon_filename: cisco.svg
        categories:
          - data-collection.networking-stack-and-network-interfaces
      keywords:
        - network monitoring
        - network performance
        - cisco devices
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Cisco ACI infrastructure metrics for optimized network performance and resource management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Cisco ACI Exporter](https://github.com/RavuAlHemio/prometheus_aci_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Cisco ACI Exporter](https://github.com/RavuAlHemio/prometheus_aci_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-citrix_netscaler
      most_popular: false
      community: true
      monitored_instance:
        name: Citrix NetScaler
        link: https://github.com/rokett/Citrix-NetScaler-Exporter
        icon_filename: citrix.svg
        categories:
          - data-collection.networking-stack-and-network-interfaces
      keywords:
        - network monitoring
        - network performance
        - traffic analysis
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep tabs on NetScaler performance metrics for efficient application delivery and load balancing.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Citrix NetScaler Exporter](https://github.com/rokett/Citrix-NetScaler-Exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Citrix NetScaler Exporter](https://github.com/rokett/Citrix-NetScaler-Exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-clickhouse
      most_popular: false
      community: true
      monitored_instance:
        name: ClickHouse
        link: https://github.com/ClickHouse/ClickHouse
        icon_filename: clickhouse.svg
        categories:
          - data-collection.database-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor ClickHouse database metrics for efficient data storage and query performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to the ClickHouse built-in Prometheus exporter.
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Configure built-in Prometheus exporter
            description: |
              To configure the built-in Prometheus exporter, follow the [official documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings#server_configuration_parameters-prometheus).
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-cloudflare_pcap
      most_popular: false
      community: true
      monitored_instance:
        name: Cloudflare PCAP
        link: https://github.com/wehkamp/docker-prometheus-cloudflare-exporter
        icon_filename: cloudflare.svg
        categories:
          - data-collection.web-servers-and-web-proxies
      keywords:
        - cloud services
        - cloud computing
        - scalability
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep tabs on Cloudflare CDN and security metrics for optimized content delivery and protection.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Cloudflare exporter](https://github.com/wehkamp/docker-prometheus-cloudflare-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Cloudflare exporter](https://github.com/wehkamp/docker-prometheus-cloudflare-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      id: collector-go.d.plugin-prometheus-aws_cloudwatch
      <<: *meta
      most_popular: false
      community: true
      monitored_instance:
        name: CloudWatch
        link: https://github.com/prometheus/cloudwatch_exporter
        icon_filename: aws-cloudwatch.png
        categories:
          - data-collection.cloud-provider-managed
      keywords:
        - cloud services
        - cloud computing
        - scalability
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor AWS CloudWatch metrics for comprehensive AWS resource management and performance optimization.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [CloudWatch exporter](https://github.com/prometheus/cloudwatch_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [CloudWatch exporter](https://github.com/prometheus/cloudwatch_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-concourse
      most_popular: false
      community: true
      monitored_instance:
        name: Concourse
        link: https://concourse-ci.org
        icon_filename: concourse.png
        categories:
          - data-collection.ci-cd-systems
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Concourse CI/CD pipeline metrics for optimized workflow management and deployment.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to the Concourse built-in Prometheus exporter.
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Configure built-in Prometheus exporter
            description: |
              To configure the built-in Prometheus exporter, follow the [official documentation](https://concourse-ci.org/metrics.html#configuring-metrics).
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-crowdsec
      most_popular: false
      community: true
      monitored_instance:
        name: Crowdsec
        link: https://docs.crowdsec.net/docs/observability/prometheus
        icon_filename: crowdsec.png
        categories:
          - data-collection.security-systems
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Crowdsec security metrics for efficient threat detection and response.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to the Crowdsec build-in Prometheus exporter.
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Configure built-in Prometheus exporter
            description: |
              To configure the built-in Prometheus exporter, follow the [official documentation](https://docs.crowdsec.net/docs/observability/prometheus/).
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-dell_emc_ecs
      most_popular: false
      community: true
      monitored_instance:
        name: Dell EMC ECS cluster
        link: https://github.com/paychex/prometheus-emcecs-exporter
        icon_filename: dell.svg
        categories:
          - data-collection.cloud-provider-managed
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Dell EMC ECS object storage metrics for optimized storage management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Dell EMC ECS Exporter](https://github.com/paychex/prometheus-emcecs-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Dell EMC ECS Exporter](https://github.com/paychex/prometheus-emcecs-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-dell_emc_isilon
      most_popular: false
      community: true
      monitored_instance:
        name: Dell EMC Isilon cluster
        link: https://github.com/paychex/prometheus-isilon-exporter
        icon_filename: dell.svg
        categories:
          - data-collection.storage-mount-points-and-filesystems
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Dell EMC Isilon scale-out NAS metrics for efficient storage management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Dell EMC Isilon Exporter](https://github.com/paychex/prometheus-isilon-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Dell EMC Isilon Exporter](https://github.com/paychex/prometheus-isilon-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-digitalocean
      most_popular: false
      community: true
      monitored_instance:
        name: DigitalOcean
        link: https://github.com/metalmatze/digitalocean_exporter
        icon_filename: digitalocean.svg
        categories:
          - data-collection.cloud-provider-managed
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track DigitalOcean cloud provider metrics for optimized resource management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [DigitalOcean Exporter](https://github.com/metalmatze/digitalocean_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [DigitalOcean Exporter](https://github.com/metalmatze/digitalocean_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-discourse
      most_popular: false
      community: true
      monitored_instance:
        name: Discourse
        link: https://github.com/discourse/discourse-prometheus
        icon_filename: discourse.svg
        categories:
          - data-collection.media-streaming-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Discourse forum metrics for efficient community management and engagement.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Discourse Exporter](https://github.com/discourse/discourse-prometheus).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Discourse Exporter](https://github.com/discourse/discourse-prometheus) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-dynatrace
      most_popular: false
      community: true
      monitored_instance:
        name: Dynatrace
        link: https://github.com/Apside-TOP/dynatrace_exporter
        icon_filename: dynatrace.svg
        categories:
          - data-collection.observability
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Dynatrace APM metrics for comprehensive application performance management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Dynatrace Exporter](https://github.com/Apside-TOP/dynatrace_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Dynatrace Exporter](https://github.com/Apside-TOP/dynatrace_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-eos_web
      most_popular: false
      community: true
      monitored_instance:
        name: EOS
        link: https://eos-web.web.cern.ch/eos-web/
        icon_filename: eos.png
        categories:
          - data-collection.storage-mount-points-and-filesystems
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor CERN EOS metrics for efficient storage management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [EOS exporter](https://github.com/cern-eos/eos_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [EOS exporter](https://github.com/cern-eos/eos_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-etcd
      most_popular: false
      community: true
      monitored_instance:
        name: etcd
        link: https://etcd.io/
        icon_filename: etcd.svg
        categories:
          - data-collection.service-discovery-registry
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track etcd database metrics for optimized distributed key-value store management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to etcd built-in Prometheus exporter.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-fortigate
      most_popular: false
      community: true
      monitored_instance:
        name: Fortigate firewall
        link: https://github.com/bluecmd/fortigate_exporter
        icon_filename: fortinet.svg
        categories:
          - data-collection.networking-stack-and-network-interfaces
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep tabs on Fortigate firewall metrics for enhanced network protection and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [fortigate_exporter](https://github.com/bluecmd/fortigate_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [fortigate_exporter](https://github.com/bluecmd/fortigate_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-freebsd_nfs
      most_popular: false
      community: true
      monitored_instance:
        name: FreeBSD NFS
        link: https://github.com/Axcient/freebsd-nfs-exporter
        icon_filename: freebsd.svg
        categories:
          - data-collection.freebsd
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor FreeBSD Network File System metrics for efficient file sharing management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [FreeBSD NFS Exporter](https://github.com/Axcient/freebsd-nfs-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [FreeBSD NFS Exporter](https://github.com/Axcient/freebsd-nfs-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-freebsd_rctl
      most_popular: false
      community: true
      monitored_instance:
        name: FreeBSD RCTL-RACCT
        link: https://github.com/yo000/rctl_exporter
        icon_filename: freebsd.svg
        categories:
          - data-collection.freebsd
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep an eye on FreeBSD Resource Container metrics for optimized resource management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [FreeBSD RCTL Exporter](https://github.com/yo000/rctl_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [FreeBSD RCTL Exporter](https://github.com/yo000/rctl_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-gcp_gce
      most_popular: false
      community: true
      monitored_instance:
        name: GCP GCE
        link: https://github.com/O1ahmad/gcp-gce-exporter
        icon_filename: gcp-gce.svg
        categories:
          - data-collection.cloud-provider-managed
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep an eye on Google Cloud Platform Compute Engine metrics for efficient cloud resource management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [GCP GCE Exporter](https://github.com/O1ahmad/gcp-gce-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [GCP GCE Exporter](https://github.com/O1ahmad/gcp-gce-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-gcp_quota
      most_popular: false
      community: true
      monitored_instance:
        name: GCP Quota
        link: https://github.com/mintel/gcp-quota-exporter
        icon_filename: gcp.png
        categories:
          - data-collection.cloud-provider-managed
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Google Cloud Platform quota metrics for optimized resource usage and cost management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [GCP Quota Exporter](https://github.com/mintel/gcp-quota-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [GCP Quota Exporter](https://github.com/mintel/gcp-quota-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-github_repo
      most_popular: false
      community: true
      monitored_instance:
        name: GitHub repository
        link: https://github.com/githubexporter/github-exporter
        icon_filename: github.svg
        categories:
          - data-collection.other
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track GitHub repository metrics for optimized project and user analytics monitoring.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [GitHub Exporter](https://github.com/githubexporter/github-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [GitHub Exporter](https://github.com/githubexporter/github-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-gitlab_runner
      most_popular: false
      community: true
      monitored_instance:
        name: GitLab Runner
        link: https://gitlab.com/gitlab-org/gitlab-runner
        icon_filename: gitlab.png
        categories:
          - data-collection.ci-cd-systems
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep an eye on GitLab CI/CD job metrics for efficient development and deployment management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to GitLab built-in Prometheus exporter.
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Configure built-in Prometheus exporter
            description: |
              To configure the built-in Prometheus exporter, follow the [official documentation](https://docs.gitlab.com/runner/monitoring/#configuration-of-the-metrics-http-server).
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-gobetween
      most_popular: false
      community: true
      monitored_instance:
        name: Gobetween
        link: https://github.com/yyyar/gobetween
        icon_filename: gobetween.svg
        categories:
          - data-collection.web-servers-and-web-proxies
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Gobetween load balancer metrics for optimized network traffic management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to Gobetween built-in Prometheus exporter.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-gcp
      most_popular: false
      community: true
      monitored_instance:
        name: Google Cloud Platform
        link: https://github.com/DazWilkin/gcp-exporter
        icon_filename: gcp.png
        categories:
          - data-collection.cloud-provider-managed
      keywords:
        - cloud services
        - cloud computing
        - scalability
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Google Cloud Platform metrics for comprehensive cloud resource management and performance optimization.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Google Cloud Platform Exporter](https://github.com/DazWilkin/gcp-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Google Cloud Platform Exporter](https://github.com/DazWilkin/gcp-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-gcp_stackdriver
      most_popular: false
      community: true
      monitored_instance:
        name: Google Stackdriver
        link: https://github.com/prometheus-community/stackdriver_exporter
        icon_filename: gcp-stackdriver.svg
        categories:
          - data-collection.cloud-provider-managed
      keywords:
        - cloud services
        - cloud computing
        - google cloud services
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Google Stackdriver monitoring metrics for optimized cloud performance and diagnostics.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Google Stackdriver exporter](https://github.com/prometheus-community/stackdriver_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Google Stackdriver exporter](https://github.com/prometheus-community/stackdriver_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-grafana
      most_popular: false
      community: true
      monitored_instance:
        name: Grafana
        link: https://grafana.com/
        icon_filename: grafana.png
        categories:
          - data-collection.observability
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep tabs on Grafana dashboard and visualization metrics for optimized monitoring and data analysis.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to Grafana built-in Prometheus exporter.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-graylog
      most_popular: false
      community: true
      monitored_instance:
        name: Graylog Server
        link: https://github.com/Graylog2/graylog2-server/
        icon_filename: graylog.svg
        categories:
          - data-collection.logs-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Graylog server metrics for efficient log management and analysis.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to Graylog built-in Prometheus exporter.
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Configure built-in Prometheus exporter
            description: |
              To configure the built-in Prometheus exporter, follow the [official documentation](https://go2docs.graylog.org/5-0/interacting_with_your_log_data/metrics.html#PrometheusMetricExporting).

  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-hana
      most_popular: false
      community: true
      monitored_instance:
        name: HANA
        link: https://github.com/jenningsloy318/hana_exporter
        icon_filename: sap.svg
        categories:
          - data-collection.database-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track SAP HANA database metrics for efficient data storage and query performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [HANA Exporter](https://github.com/jenningsloy318/hana_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [HANA Exporter](https://github.com/jenningsloy318/hana_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-honeypot
      most_popular: false
      community: true
      monitored_instance:
        name: Honeypot
        link: https://github.com/Intrinsec/honeypot_exporter
        icon_filename: intrinsec.svg
        categories:
          - data-collection.security-systems
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor honeypot metrics for efficient threat detection and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Intrinsec honeypot_exporter](https://github.com/Intrinsec/honeypot_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Intrinsec honeypot_exporter](https://github.com/Intrinsec/honeypot_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-hp_ilo
      most_popular: false
      community: true
      monitored_instance:
        name: HP iLO
        link: https://github.com/infinityworks/hpilo-exporter
        icon_filename: hp.svg
        categories:
          - data-collection.hardware-devices-and-sensors
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor HP Integrated Lights Out (iLO) metrics for efficient server management and diagnostics.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [HP iLO Metrics Exporter](https://github.com/infinityworks/hpilo-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [HP iLO Metrics Exporter](https://github.com/infinityworks/hpilo-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-hubble
      most_popular: false
      community: true
      monitored_instance:
        name: Hubble
        link: https://github.com/cilium/hubble
        icon_filename: hubble.png
        categories:
          - data-collection.observability
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Hubble network observability metrics for efficient network visibility and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to Hubble built-in Prometheus exporter.
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Configure built-in Prometheus exporter
            description: |
              To configure the built-in Prometheus exporter, follow the [official documentation](https://docs.cilium.io/en/stable/observability/metrics/#hubble-metrics).
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-ibm_spectrum
      most_popular: false
      community: true
      monitored_instance:
        name: IBM Spectrum
        link: https://github.com/topine/ibm-spectrum-exporter
        icon_filename: ibm.svg
        categories:
          - data-collection.storage-mount-points-and-filesystems
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor IBM Spectrum storage metrics for efficient data management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [IBM Spectrum Exporter](https://github.com/topine/ibm-spectrum-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [IBM Spectrum Exporter](https://github.com/topine/ibm-spectrum-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-influxdb
      most_popular: false
      community: true
      monitored_instance:
        name: InfluxDB
        link: https://github.com/prometheus/influxdb_exporter
        icon_filename: influxdb.svg
        categories:
          - data-collection.database-servers
      keywords:
        - database
        - dbms
        - data storage
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor InfluxDB time-series database metrics for efficient data storage and query performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [InfluxDB exporter](https://github.com/prometheus/influxdb_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [InfluxDB exporter](https://github.com/prometheus/influxdb_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-jenkins
      most_popular: false
      community: true
      monitored_instance:
        name: Jenkins
        link: https://www.jenkins.io/
        icon_filename: jenkins.svg
        categories:
          - data-collection.ci-cd-systems
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Jenkins continuous integration server metrics for efficient development and build management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Jenkins exporter](https://github.com/simplesurance/jenkins-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Jenkins exporter](https://github.com/simplesurance/jenkins-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-jmx
      most_popular: false
      community: true
      monitored_instance:
        name: JMX
        link: https://github.com/prometheus/jmx_exporter
        icon_filename: java.svg
        categories:
          - data-collection.apm
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Java Management Extensions (JMX) metrics for efficient Java application management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [JMX Exporter](https://github.com/prometheus/jmx_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [JMX Exporter](https://github.com/prometheus/jmx_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-jolokia
      most_popular: false
      community: true
      monitored_instance:
        name: jolokia
        link: https://github.com/aklinkert/jolokia_exporter
        icon_filename: jolokia.png
        categories:
          - data-collection.apm
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Jolokia JVM metrics for optimized Java application performance and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [jolokia_exporter](https://github.com/aklinkert/jolokia_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [jolokia_exporter](https://github.com/aklinkert/jolokia_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-kafka_consumer_lag
      most_popular: false
      community: true
      monitored_instance:
        name: Kafka Consumer Lag
        link: https://github.com/omarsmak/kafka-consumer-lag-monitoring
        icon_filename: kafka.svg
        categories:
          - data-collection.service-discovery-registry
      keywords:
        - big data
        - stream processing
        - message broker
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Kafka consumer lag metrics for efficient message queue management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Kafka Consumer Lag Monitoring](https://github.com/omarsmak/kafka-consumer-lag-monitoring).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Kafka Consumer Lag Monitoring](https://github.com/omarsmak/kafka-consumer-lag-monitoring) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-kafka
      most_popular: false
      community: true
      monitored_instance:
        name: Kafka
        link: https://github.com/danielqsj/kafka_exporter/
        icon_filename: kafka.svg
        categories:
          - data-collection.message-brokers
      keywords:
        - big data
        - stream processing
        - message broker
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep an eye on Kafka message queue metrics for optimized data streaming and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Kafka Exporter](https://github.com/danielqsj/kafka_exporter/).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Kafka Exporter](https://github.com/danielqsj/kafka_exporter/) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-kafka_zookeeper
      most_popular: false
      community: true
      monitored_instance:
        name: Kafka ZooKeeper
        link: https://github.com/cloudflare/kafka_zookeeper_exporter
        icon_filename: kafka.svg
        categories:
          - data-collection.message-brokers
      keywords:
        - big data
        - stream processing
        - message broker
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Kafka ZooKeeper metrics for optimized distributed coordination and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Kafka ZooKeeper Exporter](https://github.com/cloudflare/kafka_zookeeper_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Kafka ZooKeeper Exporter](https://github.com/cloudflare/kafka_zookeeper_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-linode
      most_popular: false
      community: true
      monitored_instance:
        name: Linode
        link: https://github.com/DazWilkin/linode-exporter
        icon_filename: linode.svg
        categories:
          - data-collection.cloud-provider-managed
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Linode cloud hosting metrics for efficient virtual server management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Linode Exporter](https://github.com/DazWilkin/linode-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Linode Exporter](https://github.com/DazWilkin/linode-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-loki
      most_popular: false
      community: true
      monitored_instance:
        name: loki
        link: https://github.com/grafana/loki
        icon_filename: loki.png
        categories:
          - data-collection.logs-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Loki metrics.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [loki](https://github.com/grafana/loki).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Loki
            description: |
              Install [loki](https://github.com/grafana/loki) according to its documentation.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-minecraft
      most_popular: false
      community: true
      monitored_instance:
        name: Minecraft
        link: https://github.com/sladkoff/minecraft-prometheus-exporter
        icon_filename: minecraft.png
        categories:
          - data-collection.gaming
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Minecraft server metrics for efficient game server management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Minecraft Exporter](https://github.com/sladkoff/minecraft-prometheus-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Minecraft Exporter](https://github.com/sladkoff/minecraft-prometheus-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-mosquitto
      most_popular: false
      community: true
      monitored_instance:
        name: mosquitto
        link: https://github.com/sapcc/mosquitto-exporter
        icon_filename: mosquitto.svg
        categories:
          - data-collection.message-brokers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep an eye on Mosquitto MQTT broker metrics for efficient IoT message transport and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [mosquitto exporter](https://github.com/sapcc/mosquitto-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [mosquitto exporter](https://github.com/sapcc/mosquitto-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-mp707
      most_popular: false
      community: true
      monitored_instance:
        name: MP707 USB thermometer
        link: https://github.com/nradchenko/mp707_exporter
        icon_filename: thermometer.png
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track MP707 power strip metrics for efficient energy management and monitoring.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [MP707 exporter](https://github.com/nradchenko/mp707_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [MP707 exporter](https://github.com/nradchenko/mp707_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-ibm_mq
      most_popular: false
      community: true
      monitored_instance:
        name: IBM MQ
        link: https://github.com/agebhar1/mq_exporter
        icon_filename: ibm.svg
        categories:
          - data-collection.message-brokers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep tabs on IBM MQ message queue metrics for efficient message transport and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [MQ Exporter](https://github.com/agebhar1/mq_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [MQ Exporter](https://github.com/agebhar1/mq_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-mqtt_blackbox
      most_popular: false
      community: true
      monitored_instance:
        name: MQTT Blackbox
        link: https://github.com/inovex/mqtt_blackbox_exporter
        icon_filename: mqtt.svg
        categories:
          - data-collection.message-brokers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track MQTT message transport performance using blackbox testing methods.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [MQTT Blackbox Exporter](https://github.com/inovex/mqtt_blackbox_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [MQTT Blackbox Exporter](https://github.com/inovex/mqtt_blackbox_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-netapp_ontap
      most_popular: false
      community: true
      monitored_instance:
        name: Netapp ONTAP API
        link: https://github.com/sapcc/netapp-api-exporter
        icon_filename: netapp.svg
        categories:
          - data-collection.storage-mount-points-and-filesystems
      keywords:
        - network monitoring
        - network performance
        - traffic analysis
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep tabs on NetApp ONTAP storage system metrics for efficient data storage management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Netapp ONTAP API Exporter](https://github.com/sapcc/netapp-api-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Netapp ONTAP API Exporter](https://github.com/sapcc/netapp-api-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-netapp_solidfire
      most_popular: false
      community: true
      monitored_instance:
        name: NetApp Solidfire
        link: https://github.com/mjavier2k/solidfire-exporter
        icon_filename: netapp.svg
        categories:
          - data-collection.storage-mount-points-and-filesystems
      keywords:
        - network monitoring
        - network performance
        - traffic analysis
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track NetApp Solidfire storage system metrics for efficient data storage management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [NetApp Solidfire Exporter](https://github.com/mjavier2k/solidfire-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [NetApp Solidfire Exporter](https://github.com/mjavier2k/solidfire-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-netmeter
      most_popular: false
      community: true
      monitored_instance:
        name: NetMeter
        link: https://github.com/ssbostan/netmeter-exporter
        icon_filename: netmeter.png
        categories:
          - data-collection.networking-stack-and-network-interfaces
      keywords:
        - network monitoring
        - network performance
        - traffic analysis
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor NetMeter network traffic metrics for efficient network management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [NetMeter Exporter](https://github.com/ssbostan/netmeter-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [NetMeter Exporter](https://github.com/ssbostan/netmeter-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-newrelic
      most_popular: false
      community: true
      monitored_instance:
        name: New Relic
        link: https://github.com/jfindley/newrelic_exporter
        icon_filename: newrelic.svg
        categories:
          - data-collection.observability
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor New Relic application performance management metrics for efficient application monitoring and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [New Relic exporter](https://github.com/jfindley/newrelic_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [New Relic exporter](https://github.com/jfindley/newrelic_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-openvswitch
      most_popular: false
      community: true
      monitored_instance:
        name: Open vSwitch
        link: https://github.com/digitalocean/openvswitch_exporter
        icon_filename: ovs.png
        categories:
          - data-collection.networking-stack-and-network-interfaces
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep an eye on Open vSwitch software-defined networking metrics for efficient network virtualization and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Open vSwitch Exporter](https://github.com/digitalocean/openvswitch_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Open vSwitch Exporter](https://github.com/digitalocean/openvswitch_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-openldap
      most_popular: false
      community: true
      monitored_instance:
        name: OpenLDAP (community)
        link: https://github.com/tomcz/openldap_exporter
        icon_filename: openldap.svg
        categories:
          - data-collection.authentication-and-authorization
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor OpenLDAP directory service metrics for efficient directory management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [OpenLDAP Metrics Exporter](https://github.com/tomcz/openldap_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [OpenLDAP Metrics Exporter](https://github.com/tomcz/openldap_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-openstack
      most_popular: false
      community: true
      monitored_instance:
        name: OpenStack
        link: https://github.com/CanonicalLtd/prometheus-openstack-exporter
        icon_filename: openstack.svg
        categories:
          - data-collection.cloud-provider-managed
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track OpenStack cloud computing platform metrics for efficient infrastructure management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Openstack exporter](https://github.com/CanonicalLtd/prometheus-openstack-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Openstack exporter](https://github.com/CanonicalLtd/prometheus-openstack-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-openvas
      most_popular: false
      community: true
      monitored_instance:
        name: OpenVAS
        link: https://github.com/ModeClearCode/openvas_exporter
        icon_filename: openVAS.png
        categories:
          - data-collection.security-systems
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor OpenVAS vulnerability scanner metrics for efficient security assessment and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [OpenVAS exporter](https://github.com/ModeClearCode/openvas_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [OpenVAS exporter](https://github.com/ModeClearCode/openvas_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-google_pagespeed
      most_popular: false
      community: true
      monitored_instance:
        name: Google Pagespeed
        link: https://github.com/foomo/pagespeed_exporter
        icon_filename: google.svg
        categories:
          - data-collection.apm
      keywords:
        - cloud services
        - cloud computing
        - google cloud services
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep an eye on Google PageSpeed Insights performance metrics for efficient web page optimization and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Pagespeed exporter](https://github.com/foomo/pagespeed_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Pagespeed exporter](https://github.com/foomo/pagespeed_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      id: collector-go.d.plugin-prometheus-philips_hue
      <<: *meta
      most_popular: false
      community: true
      monitored_instance:
        name: Philips Hue
        link: https://github.com/aexel90/hue_exporter
        icon_filename: hue.svg
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep an eye on Philips Hue smart lighting metrics for efficient home automation and energy management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Philips Hue Exporter](https://github.com/aexel90/hue_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Philips Hue Exporter](https://github.com/aexel90/hue_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-podman
      most_popular: false
      community: true
      monitored_instance:
        name: Podman
        link: https://github.com/containers/prometheus-podman-exporter
        icon_filename: podman.png
        categories:
          - data-collection.containers-and-vms
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep tabs on Podman container runtime metrics for efficient container management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [PODMAN exporter](https://github.com/containers/prometheus-podman-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [PODMAN exporter](https://github.com/containers/prometheus-podman-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-proxmox
      most_popular: false
      community: true
      monitored_instance:
        name: Proxmox VE
        link: https://github.com/prometheus-pve/prometheus-pve-exporter
        icon_filename: proxmox.png
        categories:
          - data-collection.containers-and-vms
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep tabs on Proxmox Virtual Environment metrics for efficient virtualization and container management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Proxmox VE Exporter](https://github.com/prometheus-pve/prometheus-pve-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Proxmox VE Exporter](https://github.com/prometheus-pve/prometheus-pve-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-radius
      most_popular: false
      community: true
      monitored_instance:
        name: RADIUS
        link: https://github.com/devon-mar/radius-exporter
        icon_filename: radius.png
        categories:
          - data-collection.authentication-and-authorization
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep tabs on RADIUS (Remote Authentication Dial-In User Service) protocol metrics for efficient authentication and access management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [RADIUS exporter](https://github.com/devon-mar/radius-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [RADIUS exporter](https://github.com/devon-mar/radius-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-aws_rds
      most_popular: false
      community: true
      monitored_instance:
        name: AWS RDS
        link: https://github.com/percona/rds_exporter
        icon_filename: aws-rds.svg
        categories:
          - data-collection.database-servers
      keywords:
        - cloud services
        - cloud computing
        - aws services
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Amazon RDS (Relational Database Service) metrics for efficient cloud database management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [rds_exporter](https://github.com/percona/rds_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [rds_exporter](https://github.com/percona/rds_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-ripe_atlas
      most_popular: false
      community: true
      monitored_instance:
        name: RIPE Atlas
        link: https://github.com/czerwonk/atlas_exporter
        icon_filename: ripe.png
        categories:
          - data-collection.networking-stack-and-network-interfaces
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep tabs on RIPE Atlas Internet measurement platform metrics for efficient network monitoring and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [RIPE Atlas Exporter](https://github.com/czerwonk/atlas_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [RIPE Atlas Exporter](https://github.com/czerwonk/atlas_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-sentry
      most_popular: false
      community: true
      monitored_instance:
        name: Sentry
        link: https://github.com/snakecharmer/sentry_exporter
        icon_filename: sentry.png
        categories:
          - data-collection.apm
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Sentry error tracking and monitoring platform metrics for efficient application performance and error management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Sentry Exporter](https://github.com/snakecharmer/sentry_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Sentry Exporter](https://github.com/snakecharmer/sentry_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-slurm
      most_popular: false
      community: true
      monitored_instance:
        name: Slurm
        link: https://github.com/vpenso/prometheus-slurm-exporter
        icon_filename: slurm.png
        categories:
          - data-collection.task-queues
          #- data-collection.provisioning-systems
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Slurm workload manager metrics for efficient high-performance computing (HPC) and cluster management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [slurm exporter](https://github.com/vpenso/prometheus-slurm-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [slurm exporter](https://github.com/vpenso/prometheus-slurm-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-ipmi
      most_popular: false
      community: true
      monitored_instance:
        name: IPMI (By SoundCloud)
        link: https://github.com/prometheus-community/ipmi_exporter
        icon_filename: soundcloud.svg
        categories:
          - data-collection.hardware-devices-and-sensors
      keywords:
        - cloud services
        - cloud computing
        - scalability
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor IPMI metrics externally for efficient server hardware management and monitoring.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [SoundCloud IPMI Exporter (querying IPMI externally, blackbox-exporter style)](https://github.com/prometheus-community/ipmi_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [SoundCloud IPMI Exporter (querying IPMI externally, blackbox-exporter style)](https://github.com/prometheus-community/ipmi_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-spacelift
      most_popular: false
      community: true
      monitored_instance:
        name: Spacelift
        link: https://github.com/spacelift-io/prometheus-exporter
        icon_filename: spacelift.png
        categories:
          - data-collection.provisioning-systems
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Spacelift infrastructure-as-code (IaC) platform metrics for efficient infrastructure automation and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Spacelift Exporter](https://github.com/spacelift-io/prometheus-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Spacelift Exporter](https://github.com/spacelift-io/prometheus-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-ssh
      most_popular: false
      community: true
      monitored_instance:
        name: SSH
        link: https://github.com/Nordstrom/ssh_exporter
        icon_filename: ssh.png
        categories:
          - data-collection.authentication-and-authorization
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor SSH server metrics for efficient secure shell server management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [SSH Exporter](https://github.com/Nordstrom/ssh_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [SSH Exporter](https://github.com/Nordstrom/ssh_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-ssl
      most_popular: false
      community: true
      monitored_instance:
        name: SSL Certificate
        link: https://github.com/ribbybibby/ssl_exporter
        icon_filename: ssl.svg
        categories:
          - data-collection.security-systems
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track SSL/TLS certificate metrics for efficient web security and certificate management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [SSL Certificate exporter](https://github.com/ribbybibby/ssl_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [SSL Certificate exporter](https://github.com/ribbybibby/ssl_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-starlink
      most_popular: false
      community: true
      monitored_instance:
        name: Starlink (SpaceX)
        link: https://github.com/danopstech/starlink_exporter
        icon_filename: starlink.svg
        categories:
          - data-collection.networking-stack-and-network-interfaces
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor SpaceX Starlink satellite internet metrics for efficient internet service management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Starlink Exporter (SpaceX)](https://github.com/danopstech/starlink_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Starlink Exporter (SpaceX)](https://github.com/danopstech/starlink_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-statuspage
      most_popular: false
      community: true
      monitored_instance:
        name: StatusPage
        link: https://github.com/vladvasiliu/statuspage-exporter
        icon_filename: statuspage.png
        categories:
          - data-collection.notifications
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor StatusPage.io incident and status metrics for efficient incident management and communication.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [StatusPage Exporter](https://github.com/vladvasiliu/statuspage-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [StatusPage Exporter](https://github.com/vladvasiliu/statuspage-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-tacas
      most_popular: false
      community: true
      monitored_instance:
        name: TACACS
        link: https://github.com/devon-mar/tacacs-exporter
        icon_filename: tacacs.png
        categories:
          - data-collection.authentication-and-authorization
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Terminal Access Controller Access-Control System (TACACS) protocol metrics for efficient network authentication and authorization management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [TACACS Exporter](https://github.com/devon-mar/tacacs-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [TACACS Exporter](https://github.com/devon-mar/tacacs-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-tesla_vehicle
      most_popular: false
      community: true
      monitored_instance:
        name: Tesla vehicle
        link: https://github.com/wywywywy/tesla-prometheus-exporter
        icon_filename: tesla.png
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Tesla vehicle metrics for efficient electric vehicle management and monitoring.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Tesla exporter](https://github.com/wywywywy/tesla-prometheus-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Tesla exporter](https://github.com/wywywywy/tesla-prometheus-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-tesla_powerwall
      most_popular: false
      community: true
      monitored_instance:
        name: Tesla Powerwall
        link: https://github.com/foogod/powerwall_exporter
        icon_filename: tesla.png
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Tesla Powerwall metrics for efficient home energy storage and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Tesla Powerwall Exporter](https://github.com/foogod/powerwall_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Tesla Powerwall Exporter](https://github.com/foogod/powerwall_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-twitch
      most_popular: false
      community: true
      monitored_instance:
        name: Twitch
        link: https://github.com/damoun/twitch_exporter
        icon_filename: twitch.svg
        categories:
          - data-collection.media-streaming-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Twitch streaming platform metrics for efficient live streaming management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Twitch exporter](https://github.com/damoun/twitch_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Twitch exporter](https://github.com/damoun/twitch_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-ubiquity_ufiber
      most_popular: false
      community: true
      monitored_instance:
        name: Ubiquiti UFiber OLT
        link: https://github.com/swoga/ufiber-exporter
        icon_filename: ubiquiti.png
        categories:
          - data-collection.networking-stack-and-network-interfaces
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Ubiquiti UFiber GPON (Gigabit Passive Optical Network) device metrics for efficient fiber-optic network management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [ufiber-exporter](https://github.com/swoga/ufiber-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [ufiber-exporter](https://github.com/swoga/ufiber-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-uptimerobot
      most_popular: false
      community: true
      monitored_instance:
        name: Uptimerobot
        link: https://github.com/wosc/prometheus-uptimerobot
        icon_filename: uptimerobot.svg
        categories:
          - data-collection.synthetic-checks
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor UptimeRobot website uptime monitoring metrics for efficient website availability tracking and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Uptimerobot Exporter](https://github.com/wosc/prometheus-uptimerobot).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Uptimerobot Exporter](https://github.com/wosc/prometheus-uptimerobot) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-hashicorp_vault
      most_popular: false
      community: true
      monitored_instance:
        name: HashiCorp Vault secrets
        link: https://github.com/tomtom-international/vault-assessment-prometheus-exporter
        icon_filename: vault.svg
        categories:
          - data-collection.authentication-and-authorization
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track HashiCorp Vault security assessment metrics for efficient secrets management and security.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Vault Assessment Prometheus Exporter](https://github.com/tomtom-international/vault-assessment-prometheus-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Vault Assessment Prometheus Exporter](https://github.com/tomtom-international/vault-assessment-prometheus-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-vault_pki
      most_popular: false
      community: true
      monitored_instance:
        name: Vault PKI
        link: https://github.com/aarnaud/vault-pki-exporter
        icon_filename: vault.svg
        categories:
          - data-collection.security-systems
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor HashiCorp Vault Public Key Infrastructure (PKI) metrics for efficient certificate management and security.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Vault PKI Exporter](https://github.com/aarnaud/vault-pki-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Vault PKI Exporter](https://github.com/aarnaud/vault-pki-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-vertica
      most_popular: false
      community: true
      monitored_instance:
        name: Vertica
        link: https://github.com/vertica/vertica-prometheus-exporter
        icon_filename: vertica.svg
        categories:
          - data-collection.database-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Vertica analytics database platform metrics for efficient database performance and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [vertica-prometheus-exporter](https://github.com/vertica/vertica-prometheus-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [vertica-prometheus-exporter](https://github.com/vertica/vertica-prometheus-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-vscode
      most_popular: false
      community: true
      monitored_instance:
        name: VSCode
        link: https://github.com/guicaulada/vscode-exporter
        icon_filename: vscode.svg
        categories:
          - data-collection.apm
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Visual Studio Code editor metrics for efficient development environment management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [VSCode Exporter](https://github.com/guicaulada/vscode-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [VSCode Exporter](https://github.com/guicaulada/vscode-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-airthings_waveplus
      most_popular: false
      community: true
      monitored_instance:
        name: Airthings Waveplus air sensor
        link: https://github.com/jeremybz/waveplus_exporter
        icon_filename: airthings.svg
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Waveplus radon sensor metrics for efficient indoor air quality monitoring and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Waveplus Radon Sensor Exporter](https://github.com/jeremybz/waveplus_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Waveplus Radon Sensor Exporter](https://github.com/jeremybz/waveplus_exporter) by following the instructions mentioned in the exporter README.

  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-xmpp_blackbox
      most_popular: false
      community: true
      monitored_instance:
        name: XMPP Server
        link: https://github.com/horazont/xmpp-blackbox-exporter
        icon_filename: xmpp.svg
        categories:
          - data-collection.message-brokers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor XMPP (Extensible Messaging and Presence Protocol) server metrics for efficient messaging and communication management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [XMPP Server Exporter](https://github.com/horazont/xmpp-blackbox-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [XMPP Server Exporter](https://github.com/horazont/xmpp-blackbox-exporter) by following the instructions mentioned in the exporter README.

  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-4d_server
      most_popular: false
      community: true
      monitored_instance:
        name: 4D Server
        link: https://github.com/ThomasMaul/Prometheus_4D_Exporter
        icon_filename: 4d_server.png
        categories:
          - data-collection.database-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor 4D Server performance metrics for efficient application management and optimization.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [4D Server exporter](https://github.com/ThomasMaul/Prometheus_4D_Exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [4D Server exporter](https://github.com/ThomasMaul/Prometheus_4D_Exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-8430ft-modem
      most_popular: false
      community: true
      monitored_instance:
        name: 8430FT modem
        link: https://github.com/dernasherbrezon/8430ft_exporter
        icon_filename: mtc.svg
        categories:
          - data-collection.networking-stack-and-network-interfaces
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep track of vital metrics from the MTS 8430FT modem for streamlined network performance and diagnostics.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [8430FT Exporter](https://github.com/dernasherbrezon/8430ft_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [8430FT Exporter](https://github.com/dernasherbrezon/8430ft_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-steam_a2s
      most_popular: false
      community: true
      monitored_instance:
        name: Steam
        link: https://github.com/armsnyder/a2s-exporter
        icon_filename: a2s.png
        categories:
          - data-collection.gaming
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Gain insights into Steam A2S-supported game servers for performance and availability through real-time metric monitoring.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [A2S Exporter](https://github.com/armsnyder/a2s-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [A2S Exporter](https://github.com/armsnyder/a2s-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-akami_edgedns
      most_popular: false
      community: true
      monitored_instance:
        name: Akamai Edge DNS Traffic
        link: https://github.com/akamai/akamai-edgedns-traffic-exporter
        icon_filename: akamai.svg
        categories:
          - data-collection.dns-and-dhcp-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track and analyze Akamai Edge DNS traffic for enhanced performance and security.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Akamai Edge DNS Traffic Exporter](https://github.com/akamai/akamai-edgedns-traffic-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Akamai Edge DNS Traffic Exporter](https://github.com/akamai/akamai-edgedns-traffic-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-akami_gtm
      most_popular: false
      community: true
      monitored_instance:
        name: Akamai Global Traffic Management
        link: https://github.com/akamai/akamai-gtm-metrics-exporter
        icon_filename: akamai.svg
        categories:
          - data-collection.cloud-provider-managed
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor vital metrics of Akamai Global Traffic Management (GTM) for optimized load balancing and failover.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Akamai Global Traffic Management Metrics Exporter](https://github.com/akamai/akamai-gtm-metrics-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Akamai Global Traffic Management Metrics Exporter](https://github.com/akamai/akamai-gtm-metrics-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-alamos_fe2
      most_popular: false
      community: true
      monitored_instance:
        name: Alamos FE2 server
        link: https://github.com/codemonauts/prometheus-fe2-exporter
        icon_filename: alamos_fe2.png
        categories:
          - data-collection.apm
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep tabs on Alamos FE2 systems for improved performance and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Alamos FE2 Exporter](https://github.com/codemonauts/prometheus-fe2-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Alamos FE2 Exporter](https://github.com/codemonauts/prometheus-fe2-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-altaro_backup
      most_popular: false
      community: true
      monitored_instance:
        name: Altaro Backup
        link: https://github.com/raph2i/altaro_backup_exporter
        icon_filename: altaro.svg
        categories:
          - data-collection.storage-mount-points-and-filesystems
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Altaro Backup performance metrics to ensure smooth data protection and recovery operations.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Altaro Backup Exporter](https://github.com/raph2i/altaro_backup_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Altaro Backup Exporter](https://github.com/raph2i/altaro_backup_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-amd_smi
      most_popular: false
      community: true
      monitored_instance:
        name: AMD CPU & GPU
        link: https://github.com/amd/amd_smi_exporter
        icon_filename: amd.svg
        categories:
          - data-collection.hardware-devices-and-sensors
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor AMD System Management Interface performance for optimized hardware management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [AMD SMI Exporter](https://github.com/amd/amd_smi_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [AMD SMI Exporter](https://github.com/amd/amd_smi_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-aaisp
      most_popular: false
      community: true
      monitored_instance:
        name: Andrews & Arnold line status
        link: https://github.com/daveio/aaisp-exporter
        icon_filename: andrewsarnold.jpg
        categories:
          - data-collection.networking-stack-and-network-interfaces
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Andrews & Arnold Ltd (AAISP) metrics for improved network performance and diagnostics.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Andrews & Arnold line status exporter](https://github.com/daveio/aaisp-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Andrews & Arnold line status exporter](https://github.com/daveio/aaisp-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-apicast
      most_popular: false
      community: true
      monitored_instance:
        name: APIcast
        link: https://github.com/3scale/apicast
        icon_filename: apicast.png
        categories:
          - data-collection.web-servers-and-web-proxies
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor APIcast performance metrics to optimize API gateway operations and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [APIcast](https://github.com/3scale/apicast).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [APIcast](https://github.com/3scale/apicast) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-apple_timemachine
      most_popular: false
      community: true
      monitored_instance:
        name: Apple Time Machine
        link: https://github.com/znerol/prometheus-timemachine-exporter
        icon_filename: apple.svg
        categories:
          - data-collection.macos-systems
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Apple Time Machine backup metrics for efficient data protection and recovery.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Apple Time Machine Exporter](https://github.com/znerol/prometheus-timemachine-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Apple Time Machine Exporter](https://github.com/znerol/prometheus-timemachine-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-arm_hwcpipe
      most_popular: false
      community: true
      monitored_instance:
        name: ARM HWCPipe
        link: https://github.com/ylz-at/arm-hwcpipe-exporter
        icon_filename: arm.svg
        categories:
          - data-collection.hardware-devices-and-sensors
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep track of ARM running Android devices and get metrics for efficient performance optimization.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [ARM HWCPipe Exporter](https://github.com/ylz-at/arm-hwcpipe-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [ARM HWCPipe Exporter](https://github.com/ylz-at/arm-hwcpipe-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-arvancloud_cdn
      most_popular: false
      community: true
      monitored_instance:
        name: ArvanCloud CDN
        link: https://github.com/arvancloud/ar-prometheus-exporter
        icon_filename: arvancloud.png
        categories:
          - data-collection.cloud-provider-managed
      keywords:
        - cloud services
        - cloud computing
        - scalability
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track and analyze ArvanCloud CDN and cloud services performance metrics for optimized delivery and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [ArvanCloud exporter](https://github.com/arvancloud/ar-prometheus-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [ArvanCloud exporter](https://github.com/arvancloud/ar-prometheus-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-audisto
      most_popular: false
      community: true
      monitored_instance:
        name: Audisto
        link: https://github.com/ZeitOnline/audisto_exporter
        icon_filename: audisto.svg
        categories:
          - data-collection.apm
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Audisto SEO and website metrics for improved search performance and optimization.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Audisto exporter](https://github.com/ZeitOnline/audisto_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Audisto exporter](https://github.com/ZeitOnline/audisto_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-authlog
      most_popular: false
      community: true
      monitored_instance:
        name: AuthLog
        link: https://github.com/woblerr/authlog_exporter
        icon_filename: linux.png
        categories:
          - data-collection.logs-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor authentication logs for security insights and efficient access management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [AuthLog Exporter](https://github.com/woblerr/authlog_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [AuthLog Exporter](https://github.com/woblerr/authlog_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-aws_ec2_spot
      most_popular: false
      community: true
      monitored_instance:
        name: AWS EC2 Spot Instance
        link: https://github.com/patcadelina/ec2-spot-exporter
        icon_filename: aws-ec2.png
        categories:
          - data-collection.cloud-provider-managed
      keywords:
        - cloud services
        - cloud computing
        - aws services
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor AWS EC2 Spot instances'' performance metrics for efficient resource allocation and cost optimization.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [AWS EC2 Spot Exporter](https://github.com/patcadelina/ec2-spot-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [AWS EC2 Spot Exporter](https://github.com/patcadelina/ec2-spot-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-aws_quota
      most_popular: false
      community: true
      monitored_instance:
        name: AWS Quota
        link: https://github.com/emylincon/aws_quota_exporter
        icon_filename: aws.svg
        categories:
          - data-collection.cloud-provider-managed
      keywords:
        - cloud services
        - cloud computing
        - aws services
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor AWS service quotas for effective resource usage and cost management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [aws_quota_exporter](https://github.com/emylincon/aws_quota_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [aws_quota_exporter](https://github.com/emylincon/aws_quota_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-bobcat
      most_popular: false
      community: true
      monitored_instance:
        name: Bobcat Miner 300
        link: https://github.com/pperzyna/bobcat_exporter
        icon_filename: bobcat.jpg
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Bobcat equipment metrics for optimized performance and maintenance management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Bobcat Exporter](https://github.com/pperzyna/bobcat_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Bobcat Exporter](https://github.com/pperzyna/bobcat_exporter) by following the instructions mentioned in the exporter README.

  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-bosh
      most_popular: false
      community: true
      monitored_instance:
        name: BOSH
        link: https://github.com/bosh-prometheus/bosh_exporter
        icon_filename: bosh.png
        categories:
          - data-collection.provisioning-systems
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep an eye on BOSH deployment metrics for improved cloud orchestration and resource management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [BOSH exporter](https://github.com/bosh-prometheus/bosh_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [BOSH exporter](https://github.com/bosh-prometheus/bosh_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-bpftrace
      most_popular: false
      community: true
      monitored_instance:
        name: bpftrace variables
        link: https://github.com/andreasgerstmayr/bpftrace_exporter
        icon_filename: bpftrace.png
        categories:
          - data-collection.apm
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track bpftrace metrics for advanced performance analysis and troubleshooting.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [bpftrace exporter](https://github.com/andreasgerstmayr/bpftrace_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [bpftrace exporter](https://github.com/andreasgerstmayr/bpftrace_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-bungeecord
      most_popular: false
      community: true
      monitored_instance:
        name: BungeeCord
        link: https://github.com/weihao/bungeecord-prometheus-exporter
        icon_filename: bungee.png
        categories:
          - data-collection.gaming
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track BungeeCord proxy server metrics for efficient load balancing and performance management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [BungeeCord Prometheus Exporter](https://github.com/weihao/bungeecord-prometheus-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [BungeeCord Prometheus Exporter](https://github.com/weihao/bungeecord-prometheus-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-celery
      most_popular: false
      community: true
      monitored_instance:
        name: Celery
        link: https://github.com/ZeitOnline/celery_redis_prometheus
        icon_filename: celery.png
        categories:
          - data-collection.task-queues
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep an eye on Celery task queue metrics for optimized task processing and resource management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Celery Exporter](https://github.com/ZeitOnline/celery_redis_prometheus).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Celery Exporter](https://github.com/ZeitOnline/celery_redis_prometheus) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-checkpoint
      most_popular: false
      community: true
      monitored_instance:
        name: Checkpoint device
        link: https://github.com/RespiroConsulting/CheckPointExporter
        icon_filename: checkpoint.png
        categories:
          - data-collection.networking-stack-and-network-interfaces
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Check Point firewall and security metrics for enhanced network protection and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Checkpoint exporter](https://github.com/RespiroConsulting/CheckPointExporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Checkpoint exporter](https://github.com/RespiroConsulting/CheckPointExporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-chia
      most_popular: false
      community: true
      monitored_instance:
        name: Chia
        link: https://github.com/chia-network/chia-exporter
        icon_filename: chia.png
        categories:
          - data-collection.blockchain-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Chia blockchain metrics for optimized farming and resource allocation.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Chia Exporter](https://github.com/chia-network/chia-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Chia Exporter](https://github.com/chia-network/chia-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-clm5ip
      most_popular: false
      community: true
      monitored_instance:
        name: Christ Elektronik CLM5IP power panel
        link: https://github.com/christmann/clm5ip_exporter/
        icon_filename: christelec.png
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Christ Elektronik CLM5IP device metrics for efficient performance and diagnostics.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Christ Elektronik CLM5IP Exporter](https://github.com/christmann/clm5ip_exporter/).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Christ Elektronik CLM5IP Exporter](https://github.com/christmann/clm5ip_exporter/) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-clamd
      most_popular: false
      community: true
      monitored_instance:
        name: ClamAV daemon
        link: https://github.com/sergeymakinen/clamav_exporter
        icon_filename: clamav.png
        categories:
          - data-collection.security-systems
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track ClamAV antivirus metrics for enhanced threat detection and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [ClamAV daemon stats exporter](https://github.com/sergeymakinen/clamav_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [ClamAV daemon stats exporter](https://github.com/sergeymakinen/clamav_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-clamscan
      most_popular: false
      community: true
      monitored_instance:
        name: Clamscan results
        link: https://github.com/FortnoxAB/clamscan-exporter
        icon_filename: clamav.png
        categories:
          - data-collection.security-systems
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor ClamAV scanning performance metrics for efficient malware detection and analysis.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [clamscan-exporter](https://github.com/FortnoxAB/clamscan-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [clamscan-exporter](https://github.com/FortnoxAB/clamscan-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-clash
      most_popular: false
      community: true
      monitored_instance:
        name: Clash
        link: https://github.com/elonzh/clash_exporter
        icon_filename: clash.png
        categories:
          - data-collection.web-servers-and-web-proxies
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep an eye on Clash proxy server metrics for optimized network performance and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Clash exporter](https://github.com/elonzh/clash_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Clash exporter](https://github.com/elonzh/clash_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-cloud_foundry
      most_popular: false
      community: true
      monitored_instance:
        name: Cloud Foundry
        link: https://github.com/bosh-prometheus/cf_exporter
        icon_filename: cloud-foundry.svg
        categories:
          - data-collection.provisioning-systems
      keywords:
        - cloud services
        - cloud computing
        - scalability
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Cloud Foundry platform metrics for optimized application deployment and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Cloud Foundry exporter](https://github.com/bosh-prometheus/cf_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Cloud Foundry exporter](https://github.com/bosh-prometheus/cf_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-cloud_foundry_firebase
      most_popular: false
      community: true
      monitored_instance:
        name: Cloud Foundry Firehose
        link: https://github.com/bosh-prometheus/firehose_exporter
        icon_filename: cloud-foundry.svg
        categories:
          - data-collection.provisioning-systems
      keywords:
        - cloud services
        - cloud computing
        - scalability
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Cloud Foundry Firehose metrics for comprehensive platform diagnostics and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Cloud Foundry Firehose exporter](https://github.com/bosh-prometheus/firehose_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Cloud Foundry Firehose exporter](https://github.com/bosh-prometheus/firehose_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-akami_cloudmonitor
      most_popular: false
      community: true
      monitored_instance:
        name: Akami Cloudmonitor
        link: https://github.com/ExpressenAB/cloudmonitor_exporter
        icon_filename: akamai.svg
        categories:
          - data-collection.cloud-provider-managed
      keywords:
        - cloud services
        - cloud computing
        - scalability
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Akamai cloudmonitor provider metrics for comprehensive cloud performance management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Cloudmonitor exporter](https://github.com/ExpressenAB/cloudmonitor_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Cloudmonitor exporter](https://github.com/ExpressenAB/cloudmonitor_exporter) by following the instructions mentioned in the exporter README.

  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-lustre
      most_popular: false
      community: true
      monitored_instance:
        name: Lustre metadata
        link: https://github.com/GSI-HPC/prometheus-cluster-exporter
        icon_filename: lustre.png
        categories:
          - data-collection.cloud-provider-managed
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep tabs on Lustre clustered file system for efficient management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Cluster Exporter](https://github.com/GSI-HPC/prometheus-cluster-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Cluster Exporter](https://github.com/GSI-HPC/prometheus-cluster-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-cmon
      most_popular: false
      community: true
      monitored_instance:
        name: ClusterControl CMON
        link: https://github.com/severalnines/cmon_exporter
        icon_filename: cluster-control.svg
        categories:
          - data-collection.database-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track CMON metrics for Severalnines Cluster Control for efficient monitoring and management of database operations.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [CMON Exporter](https://github.com/severalnines/cmon_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [CMON Exporter](https://github.com/severalnines/cmon_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-collectd
      most_popular: false
      community: true
      monitored_instance:
        name: Collectd
        link: https://github.com/prometheus/collectd_exporter
        icon_filename: collectd.png
        categories:
          - data-collection.observability
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor system and application metrics with Collectd for comprehensive performance analysis.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Collectd exporter](https://github.com/prometheus/collectd_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Collectd exporter](https://github.com/prometheus/collectd_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-shell_cmd
      most_popular: false
      community: true
      monitored_instance:
        name: Shell command
        link: https://github.com/tomwilkie/prom-run
        icon_filename: crunner.svg
        categories:
          - data-collection.generic-data-collection
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track custom command output metrics for tailored monitoring and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Command runner exporter](https://github.com/tomwilkie/prom-run).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Command runner exporter](https://github.com/tomwilkie/prom-run) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-ftbeerpi
      most_popular: false
      community: true
      monitored_instance:
        name: CraftBeerPi
        link: https://github.com/jo-hannes/craftbeerpi_exporter
        icon_filename: craftbeer.png
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep an eye on CraftBeerPi homebrewing metrics for optimized brewing process management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [CraftBeerPi exporter](https://github.com/jo-hannes/craftbeerpi_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [CraftBeerPi exporter](https://github.com/jo-hannes/craftbeerpi_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-crypto
      most_popular: false
      community: true
      monitored_instance:
        name: Crypto exchanges
        link: https://github.com/ix-ai/crypto-exporter
        icon_filename: crypto.png
        categories:
          - data-collection.blockchain-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track cryptocurrency market metrics for informed investment and trading decisions.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Crypto exporter](https://github.com/ix-ai/crypto-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Crypto exporter](https://github.com/ix-ai/crypto-exporter) by following the instructions mentioned in the exporter README.

  - <<: *module
    meta:
      id: collector-go.d.plugin-prometheus-cryptowatch
      <<: *meta
      most_popular: false
      community: true
      monitored_instance:
        name: Cryptowatch
        link: https://github.com/nbarrientos/cryptowat_exporter
        icon_filename: cryptowatch.png
        categories:
          - data-collection.blockchain-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep tabs on Cryptowatch market data metrics for comprehensive cryptocurrency market analysis.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Cryptowat Exporter](https://github.com/nbarrientos/cryptowat_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Cryptowat Exporter](https://github.com/nbarrientos/cryptowat_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-csgo
      most_popular: false
      community: true
      monitored_instance:
        name: CS:GO
        link: https://github.com/kinduff/csgo_exporter
        icon_filename: csgo.svg
        categories:
          - data-collection.gaming
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Counter-Strike: Global Offensive server metrics for improved game performance and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [CS:GO Exporter](https://github.com/kinduff/csgo_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [CS:GO Exporter](https://github.com/kinduff/csgo_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-certificate_transparency
      most_popular: false
      community: true
      monitored_instance:
        name: Certificate Transparency
        link: https://github.com/Hsn723/ct-exporter
        icon_filename: ct.png
        categories:
          - data-collection.security-systems
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track certificate transparency log metrics for enhanced
          SSL/TLS certificate management and security.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [ct-exporter](https://github.com/Hsn723/ct-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [ct-exporter](https://github.com/Hsn723/ct-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-custom
      most_popular: false
      community: true
      monitored_instance:
        name: Custom Exporter
        link: https://github.com/orange-cloudfoundry/custom_exporter
        icon_filename: customdata.png
        categories:
          - data-collection.generic-data-collection
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Create and monitor custom metrics tailored to your specific use case and requirements.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Custom Exporter](https://github.com/orange-cloudfoundry/custom_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Custom Exporter](https://github.com/orange-cloudfoundry/custom_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-cvmfs
      most_popular: false
      community: true
      monitored_instance:
        name: CVMFS clients
        link: https://github.com/guilbaults/cvmfs-exporter
        icon_filename: cvmfs.png
        categories:
          - data-collection.storage-mount-points-and-filesystems
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track CernVM File System metrics for optimized distributed file system performance and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [CVMFS exporter](https://github.com/guilbaults/cvmfs-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [CVMFS exporter](https://github.com/guilbaults/cvmfs-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-ddwrt
      most_popular: false
      community: true
      monitored_instance:
        name: DDWRT Routers
        link: https://github.com/camelusferus/ddwrt_collector
        icon_filename: ddwrt.png
        categories:
          - data-collection.networking-stack-and-network-interfaces
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep tabs on DD-WRT router metrics for efficient network management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [ddwrt-collector](https://github.com/camelusferus/ddwrt_collector).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [ddwrt-collector](https://github.com/camelusferus/ddwrt_collector) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      id: collector-go.d.plugin-prometheus-dell_emc_xtremio
      <<: *meta
      most_popular: false
      community: true
      monitored_instance:
        name: Dell EMC XtremIO cluster
        link: https://github.com/cthiel42/prometheus-xtremio-exporter
        icon_filename: dell.svg
        categories:
          - data-collection.storage-mount-points-and-filesystems
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep an eye on Dell/EMC XtremIO storage metrics for optimized data management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Dell/EMC XtremIO Exporter](https://github.com/cthiel42/prometheus-xtremio-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Dell/EMC XtremIO Exporter](https://github.com/cthiel42/prometheus-xtremio-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-dependency_track
      most_popular: false
      community: true
      monitored_instance:
        name: Dependency-Track
        link: https://github.com/jetstack/dependency-track-exporter
        icon_filename: dependency-track.png
        categories:
          - data-collection.apm
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Dependency-Track metrics for efficient vulnerability management and software supply chain analysis.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Dependency-Track Exporter](https://github.com/jetstack/dependency-track-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Dependency-Track Exporter](https://github.com/jetstack/dependency-track-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      id: collector-go.d.plugin-prometheus-dmarc
      <<: *meta
      most_popular: false
      community: true
      monitored_instance:
        name: DMARC
        link: https://github.com/jgosmann/dmarc-metrics-exporter
        icon_filename: dmarc.png
        categories:
          - data-collection.mail-servers
      keywords:
        - email authentication
        - policy
        - reporting
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track DMARC email authentication metrics for improved email security and deliverability.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [dmarc-metrics-exporter](https://github.com/jgosmann/dmarc-metrics-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [dmarc-metrics-exporter](https://github.com/jgosmann/dmarc-metrics-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      id: collector-go.d.plugin-prometheus-dnsbl
      <<: *meta
      most_popular: false
      community: true
      monitored_instance:
        name: DNSBL
        link: https://github.com/Luzilla/dnsbl_exporter/
        icon_filename: dnsbl.png
        categories:
          - data-collection.dns-and-dhcp-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor DNSBL metrics for efficient domain reputation and security management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [dnsbl-exporter](https://github.com/Luzilla/dnsbl_exporter/).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [dnsbl-exporter](https://github.com/Luzilla/dnsbl_exporter/) by following the instructions mentioned in the exporter README.


  - <<: *module
    meta:
      id: collector-go.d.plugin-prometheus-bird
      <<: *meta
      most_popular: false
      community: true
      monitored_instance:
        name: Bird Routing Daemon
        link: https://github.com/czerwonk/bird_exporter
        icon_filename: bird.png
        categories:
          - data-collection.networking-stack-and-network-interfaces
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep an eye on Bird Routing Daemon metrics for optimized network routing and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Bird Routing Daemon Exporter](https://github.com/czerwonk/bird_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Bird Routing Daemon Exporter](https://github.com/czerwonk/bird_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-elgato_keylight
      most_popular: false
      community: true
      monitored_instance:
        name: Elgato Key Light devices.
        link: https://github.com/mdlayher/keylight_exporter
        icon_filename: elgato.svg
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep tabs on Elgato Key Light metrics for optimized lighting control and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Elgato Key Light exporter](https://github.com/mdlayher/keylight_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Elgato Key Light exporter](https://github.com/mdlayher/keylight_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-energomera
      most_popular: false
      community: true
      monitored_instance:
        name: Energomera smart power meters
        link: https://github.com/peak-load/energomera_exporter
        icon_filename: energomera.png
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Energomera electricity meter metrics for efficient energy management and monitoring.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Energomera electricity meter exporter](https://github.com/peak-load/energomera_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [energomera-exporter Energomera electricity meter exporter](https://github.com/peak-load/energomera_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-excel
      most_popular: false
      community: true
      monitored_instance:
        name: Excel spreadsheet
        link: https://github.com/MarcusCalidus/excel-exporter
        icon_filename: excel.png
        categories:
          - data-collection.generic-data-collection
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Export Prometheus metrics to Excel for versatile data analysis and reporting.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Excel Exporter](https://github.com/MarcusCalidus/excel-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Excel Exporter](https://github.com/MarcusCalidus/excel-exporter) by following the instructions mentioned in the exporter README.

  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-fastd
      most_popular: false
      community: true
      monitored_instance:
        name: Fastd
        link: https://github.com/freifunk-darmstadt/fastd-exporter
        icon_filename: fastd.png
        categories:
          - data-collection.vpns
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Fastd VPN metrics for efficient virtual private network management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Fastd Exporter](https://github.com/freifunk-darmstadt/fastd-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Fastd Exporter](https://github.com/freifunk-darmstadt/fastd-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-freifunk
      most_popular: false
      community: true
      monitored_instance:
        name: Freifunk network
        link: https://github.com/xperimental/freifunk-exporter
        icon_filename: freifunk.png
        categories:
          - data-collection.networking-stack-and-network-interfaces
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep tabs on Freifunk community network metrics for optimized network performance and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Freifunk Exporter](https://github.com/xperimental/freifunk-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Freifunk Exporter](https://github.com/xperimental/freifunk-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-fritzbox
      most_popular: false
      community: true
      monitored_instance:
        name: Fritzbox network devices
        link: https://github.com/pdreker/fritz_exporter
        icon_filename: avm.png
        categories:
          - data-collection.networking-stack-and-network-interfaces
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track AVM Fritzbox router metrics for efficient home network management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Fritzbox exporter](https://github.com/pdreker/fritz_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Fritzbox exporter](https://github.com/pdreker/fritz_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-frrouting
      most_popular: false
      community: true
      monitored_instance:
        name: FRRouting
        link: https://github.com/tynany/frr_exporter
        icon_filename: frrouting.png
        categories:
          - data-collection.networking-stack-and-network-interfaces
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Free Range Routing (FRR) metrics for optimized network routing and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [FRRouting Exporter](https://github.com/tynany/frr_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [FRRouting Exporter](https://github.com/tynany/frr_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-generic_cli
      most_popular: false
      community: true
      monitored_instance:
        name: Generic Command Line Output
        link: https://github.com/MarioMartReq/generic-exporter
        icon_filename: cli.svg
        categories:
          - data-collection.generic-data-collection
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track custom command line output metrics for tailored monitoring and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Generic Command Line Output Exporter](https://github.com/MarioMartReq/generic-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Generic Command Line Output Exporter](https://github.com/MarioMartReq/generic-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-github_ratelimit
      most_popular: false
      community: true
      monitored_instance:
        name: GitHub API rate limit
        link: https://github.com/lunarway/github-ratelimit-exporter
        icon_filename: github.svg
        categories:
          - data-collection.other
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor GitHub API rate limit metrics for efficient
          API usage and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [GitHub API rate limit Exporter](https://github.com/lunarway/github-ratelimit-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [GitHub API rate limit Exporter](https://github.com/lunarway/github-ratelimit-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-gpsd
      most_popular: false
      community: true
      monitored_instance:
        name: gpsd
        link: https://github.com/natesales/gpsd-exporter
        icon_filename: gpsd.png
        categories:
          - data-collection.apm
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor GPSD (GPS daemon) metrics for efficient GPS data management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [gpsd exporter](https://github.com/natesales/gpsd-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [gpsd exporter](https://github.com/natesales/gpsd-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-gtp
      most_popular: false
      community: true
      monitored_instance:
        name: GTP
        link: https://github.com/wmnsk/gtp_exporter
        icon_filename: gtpu.png
        categories:
          - data-collection.telephony-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep an eye on GTP (GPRS Tunneling Protocol) metrics for optimized mobile data communication and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [GTP Exporter](https://github.com/wmnsk/gtp_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [GTP Exporter](https://github.com/wmnsk/gtp_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-halon
      most_popular: false
      community: true
      monitored_instance:
        name: Halon
        link: https://github.com/tobiasbp/halon_exporter
        icon_filename: halon.svg
        categories:
          - data-collection.mail-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Halon email security and delivery metrics for optimized email management and protection.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Halon exporter](https://github.com/tobiasbp/halon_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Halon exporter](https://github.com/tobiasbp/halon_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-hasura_graphql
      most_popular: false
      community: true
      monitored_instance:
        name: Hasura GraphQL Server
        link: https://github.com/zolamk/hasura-exporter
        icon_filename: hasura.svg
        categories:
          - data-collection.database-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep tabs on Hasura GraphQL engine metrics for optimized
          API performance and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Hasura Exporter](https://github.com/zolamk/hasura-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Hasura Exporter](https://github.com/zolamk/hasura-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-hdsentinel
      most_popular: false
      community: true
      monitored_instance:
        name: HDSentinel
        link: https://github.com/qusielle/hdsentinel-exporter
        icon_filename: harddisk.svg
        categories:
          - data-collection.storage-mount-points-and-filesystems
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Hard Disk Sentinel metrics for efficient storage device health management and diagnostics.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [HDSentinel Exporter](https://github.com/qusielle/hdsentinel-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [HDSentinel Exporter](https://github.com/qusielle/hdsentinel-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-helium_hotspot
      most_popular: false
      community: true
      monitored_instance:
        name: Helium hotspot
        link: https://github.com/tedder/helium_hotspot_exporter
        icon_filename: helium.svg
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Helium hotspot metrics for optimized LoRaWAN network management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Helium hotspot exporter](https://github.com/tedder/helium_hotspot_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Helium hotspot exporter](https://github.com/tedder/helium_hotspot_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-helium_miner
      most_popular: false
      community: true
      monitored_instance:
        name: Helium miner (validator)
        link: https://github.com/tedder/miner_exporter
        icon_filename: helium.svg
        categories:
          - data-collection.blockchain-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Helium miner and validator metrics for efficient blockchain performance and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Helium miner (validator) exporter](https://github.com/tedder/miner_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Helium miner (validator) exporter](https://github.com/tedder/miner_exporter) by following the instructions mentioned in the exporter README.

  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-hhvm
      most_popular: false
      community: true
      monitored_instance:
        name: HHVM
        link: https://github.com/wikimedia/operations-software-hhvm_exporter
        icon_filename: hhvm.svg
        categories:
          - data-collection.web-servers-and-web-proxies
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor HipHop Virtual Machine metrics for efficient
          PHP execution and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [HHVM Exporter](https://github.com/wikimedia/operations-software-hhvm_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [HHVM Exporter](https://github.com/wikimedia/operations-software-hhvm_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-hilink
      most_popular: false
      community: true
      monitored_instance:
        name: Huawei devices
        link: https://github.com/eliecharra/hilink-exporter
        icon_filename: huawei.svg
        categories:
          - data-collection.networking-stack-and-network-interfaces
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep tabs on Huawei HiLink device metrics for optimized connectivity and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Huawei Hilink exporter](https://github.com/eliecharra/hilink-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Huawei Hilink exporter](https://github.com/eliecharra/hilink-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-hitron_cgm
      most_popular: false
      community: true
      monitored_instance:
        name: Hitron CGN series CPE
        link: https://github.com/yrro/hitron-exporter
        icon_filename: hitron.svg
        categories:
          - data-collection.networking-stack-and-network-interfaces
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Hitron CGNV4 gateway metrics for efficient network management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Hitron CGNV4 exporter](https://github.com/yrro/hitron-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Hitron CGNV4 exporter](https://github.com/yrro/hitron-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-hitron_coda
      most_popular: false
      community: true
      monitored_instance:
        name: Hitron CODA Cable Modem
        link: https://github.com/hairyhenderson/hitron_coda_exporter
        icon_filename: hitron.svg
        categories:
          - data-collection.networking-stack-and-network-interfaces
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Hitron CODA cable modem metrics for optimized internet connectivity and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Hitron CODA Cable Modem Exporter](https://github.com/hairyhenderson/hitron_coda_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Hitron CODA Cable Modem Exporter](https://github.com/hairyhenderson/hitron_coda_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-homebridge
      most_popular: false
      community: true
      monitored_instance:
        name: Homebridge
        link: https://github.com/lstrojny/homebridge-prometheus-exporter
        icon_filename: homebridge.svg
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Homebridge smart home metrics for efficient home automation management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Homebridge Prometheus Exporter](https://github.com/lstrojny/homebridge-prometheus-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Homebridge Prometheus Exporter](https://github.com/lstrojny/homebridge-prometheus-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-homey
      most_popular: false
      community: true
      monitored_instance:
        name: Homey
        link: https://github.com/rickardp/homey-prometheus-exporter
        icon_filename: homey.svg
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Homey smart home controller metrics for efficient home automation and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Homey Exporter](https://github.com/rickardp/homey-prometheus-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Homey Exporter](https://github.com/rickardp/homey-prometheus-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-ibm_cex
      most_popular: false
      community: true
      monitored_instance:
        name: IBM CryptoExpress (CEX) cards
        link: https://github.com/ibm-s390-cloud/k8s-cex-dev-plugin
        icon_filename: ibm.svg
        categories:
          - data-collection.hardware-devices-and-sensors
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track IBM Z Crypto Express device metrics for optimized cryptographic performance and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [IBM Z CEX Device Plugin Prometheus Exporter](https://github.com/ibm-s390-cloud/k8s-cex-dev-plugin).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [IBM Z CEX Device Plugin Prometheus Exporter](https://github.com/ibm-s390-cloud/k8s-cex-dev-plugin) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-ibm_zhmc
      most_popular: false
      community: true
      monitored_instance:
        name: IBM Z Hardware Management Console
        link: https://github.com/zhmcclient/zhmc-prometheus-exporter
        icon_filename: ibm.svg
        categories:
          - data-collection.hardware-devices-and-sensors
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor IBM Z Hardware Management Console metrics for efficient mainframe management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [IBM Z HMC Exporter](https://github.com/zhmcclient/zhmc-prometheus-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [IBM Z HMC Exporter](https://github.com/zhmcclient/zhmc-prometheus-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-iota
      most_popular: false
      community: true
      monitored_instance:
        name: IOTA full node
        link: https://github.com/crholliday/iota-prom-exporter
        icon_filename: iota.svg
        categories:
          - data-collection.blockchain-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep an eye on IOTA cryptocurrency network metrics for efficient blockchain performance and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [IOTA Exporter](https://github.com/crholliday/iota-prom-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [IOTA Exporter](https://github.com/crholliday/iota-prom-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-iqair
      most_popular: false
      community: true
      monitored_instance:
        name: iqAir AirVisual air quality monitors
        link: https://github.com/Packetslave/iqair_exporter
        icon_filename: iqair.svg
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor air quality data from IQAir devices for efficient environmental monitoring and analysis.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [IQair Exporter](https://github.com/Packetslave/iqair_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [IQair Exporter](https://github.com/Packetslave/iqair_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-jarvis
      most_popular: false
      community: true
      monitored_instance:
        name: Jarvis Standing Desk
        link: https://github.com/hairyhenderson/jarvis_exporter/
        icon_filename: jarvis.jpg
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Jarvis standing desk usage metrics for efficient workspace ergonomics and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Jarvis Standing Desk Exporter](https://github.com/hairyhenderson/jarvis_exporter/).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Jarvis Standing Desk Exporter](https://github.com/hairyhenderson/jarvis_exporter/) by following the instructions mentioned in the exporter README.

  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-enclosure
      most_popular: false
      community: true
      monitored_instance:
        name: Generic storage enclosure tool
        link: https://github.com/Gandi/jbod-rs
        icon_filename: storage-enclosure.svg
        categories:
          - data-collection.storage-mount-points-and-filesystems
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor storage enclosure metrics for efficient storage device management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [jbod - Generic storage enclosure tool](https://github.com/Gandi/jbod-rs).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [jbod - Generic storage enclosure tool](https://github.com/Gandi/jbod-rs) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-jetbrains_fls
      most_popular: false
      community: true
      monitored_instance:
        name: JetBrains Floating License Server
        link: https://github.com/mkreu/jetbrains-fls-exporter
        icon_filename: jetbrains.png
        categories:
          - data-collection.generic-data-collection
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor JetBrains floating license server metrics for efficient software licensing management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [JetBrains Floating License Server Export](https://github.com/mkreu/jetbrains-fls-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [JetBrains Floating License Server Export](https://github.com/mkreu/jetbrains-fls-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-journald
      most_popular: false
      community: true
      monitored_instance:
        name: journald
        link: https://github.com/dead-claudia/journald-exporter
        icon_filename: linux.png
        categories:
          - data-collection.logs-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep an eye on systemd-journald metrics for efficient log management and analysis.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [journald-exporter](https://github.com/dead-claudia/journald-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [journald-exporter](https://github.com/dead-claudia/journald-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-kafka_connect
      most_popular: false
      community: true
      monitored_instance:
        name: Kafka Connect
        link: https://github.com/findelabs/kafka-connect-exporter-rs
        icon_filename: kafka.svg
        categories:
          - data-collection.message-brokers
      keywords:
        - big data
        - stream processing
        - message broker
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep tabs on Kafka Connect metrics for efficient data streaming and integration.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Kafka Connect exporter](https://github.com/findelabs/kafka-connect-exporter-rs).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Kafka Connect exporter](https://github.com/findelabs/kafka-connect-exporter-rs) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-kannel
      most_popular: false
      community: true
      monitored_instance:
        name: Kannel
        link: https://github.com/apostvav/kannel_exporter
        icon_filename: kannel.png
        categories:
          - data-collection.telephony-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep tabs on Kannel SMS gateway and WAP gateway metrics for efficient mobile communication and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Kannel Exporter](https://github.com/apostvav/kannel_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Kannel Exporter](https://github.com/apostvav/kannel_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-keepalived
      most_popular: false
      community: true
      monitored_instance:
        name: Keepalived
        link: https://github.com/gen2brain/keepalived_exporter
        icon_filename: keepalived.png
        categories:
          - data-collection.networking-stack-and-network-interfaces
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Keepalived metrics for efficient high-availability and load balancing management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Keepalived Exporter](https://github.com/gen2brain/keepalived_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Keepalived Exporter](https://github.com/gen2brain/keepalived_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-korral
      most_popular: false
      community: true
      monitored_instance:
        name: Kubernetes Cluster Cloud Cost
        link: https://github.com/agilestacks/korral
        icon_filename: kubernetes.svg
        categories:
          - data-collection.kubernetes
      keywords:
        - cloud services
        - cloud computing
        - scalability
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep an eye on Kubernetes cloud cost metrics for efficient cloud resource management and budgeting.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Kubernetes Cloud Cost Exporter](https://github.com/agilestacks/korral).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Kubernetes Cloud Cost Exporter](https://github.com/agilestacks/korral) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-lagerist
      most_popular: false
      community: true
      monitored_instance:
        name: Lagerist Disk latency
        link: https://github.com/Svedrin/lagerist
        icon_filename: linux.png
        categories:
          - data-collection.storage-mount-points-and-filesystems
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track disk latency metrics for efficient storage performance and diagnostics.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Lagerist Disk latency exporter](https://github.com/Svedrin/lagerist).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Lagerist Disk latency exporter](https://github.com/Svedrin/lagerist) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-ldap
      most_popular: false
      community: true
      monitored_instance:
        name: LDAP
        link: https://github.com/titisan/ldap_exporter
        icon_filename: ldap.png
        categories:
          - data-collection.authentication-and-authorization
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep an eye on Lightweight Directory Access Protocol (LDAP) metrics for efficient directory service management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [LDAP Exporter](https://github.com/titisan/ldap_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [LDAP Exporter](https://github.com/titisan/ldap_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-lynis
      most_popular: false
      community: true
      monitored_instance:
        name: Lynis audit reports
        link: https://github.com/MauveSoftware/lynis_exporter
        icon_filename: lynis.png
        categories:
          - data-collection.security-systems
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Lynis security auditing tool metrics for efficient system security and compliance management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [lynis_exporter](https://github.com/MauveSoftware/lynis_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [lynis_exporter](https://github.com/MauveSoftware/lynis_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-machbase
      most_popular: false
      community: true
      monitored_instance:
        name: Machbase
        link: https://github.com/MACHBASE/prometheus-machbase-exporter
        icon_filename: machbase.png
        categories:
          - data-collection.database-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Machbase time-series database metrics for efficient data storage and query performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Machbase Exporter](https://github.com/MACHBASE/prometheus-machbase-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Machbase Exporter](https://github.com/MACHBASE/prometheus-machbase-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-maildir
      most_popular: false
      community: true
      monitored_instance:
        name: Maildir
        link: https://github.com/cherti/mailexporter
        icon_filename: mailserver.svg
        categories:
          - data-collection.mail-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track mail server metrics for optimized email management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [mailexporter](https://github.com/cherti/mailexporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [mailexporter](https://github.com/cherti/mailexporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-meilisearch
      most_popular: false
      community: true
      monitored_instance:
        name: Meilisearch
        link: https://github.com/scottaglia/meilisearch_exporter
        icon_filename: meilisearch.svg
        categories:
          - data-collection.search-engines
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Meilisearch search engine metrics for efficient search performance and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Meilisearch Exporter](https://github.com/scottaglia/meilisearch_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Meilisearch Exporter](https://github.com/scottaglia/meilisearch_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-memcached
      most_popular: false
      community: true
      monitored_instance:
        name: Memcached (community)
        link: https://github.com/prometheus/memcached_exporter
        icon_filename: memcached.svg
        categories:
          - data-collection.database-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Memcached in-memory key-value store metrics for efficient caching performance and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Memcached exporter](https://github.com/prometheus/memcached_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Memcached exporter](https://github.com/prometheus/memcached_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      id: collector-go.d.plugin-prometheus-meraki
      <<: *meta
      most_popular: false
      community: true
      monitored_instance:
        name: Meraki dashboard
        link: https://github.com/TheHolm/meraki-dashboard-promethus-exporter
        icon_filename: meraki.png
        categories:
          - data-collection.networking-stack-and-network-interfaces
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep tabs on Cisco Meraki cloud-managed networking device metrics for efficient network management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Meraki dashboard data exporter using API](https://github.com/TheHolm/meraki-dashboard-promethus-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Meraki dashboard data exporter using API](https://github.com/TheHolm/meraki-dashboard-promethus-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-mesos
      most_popular: false
      community: true
      monitored_instance:
        name: Mesos
        link: http://github.com/mesosphere/mesos_exporter
        icon_filename: mesos.svg
        categories:
          #- data-collection.provisioning-systems
          - data-collection.task-queues
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Apache Mesos cluster manager metrics for efficient resource management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Mesos exporter](http://github.com/mesosphere/mesos_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Mesos exporter](http://github.com/mesosphere/mesos_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-xiaomi_mi_flora
      most_popular: false
      community: true
      monitored_instance:
        name: Xiaomi Mi Flora
        link: https://github.com/xperimental/flowercare-exporter
        icon_filename: xiaomi.svg
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep tabs on MiFlora plant monitor metrics for efficient plant care and growth management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [MiFlora / Flower Care Exporter](https://github.com/xperimental/flowercare-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [MiFlora / Flower Care Exporter](https://github.com/xperimental/flowercare-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-modbus_rtu
      most_popular: false
      community: true
      monitored_instance:
        name: Modbus protocol
        link: https://github.com/dernasherbrezon/modbusrtu_exporter
        icon_filename: modbus.svg
        categories:
          - data-collection.iot-devices
      keywords:
        - database
        - dbms
        - data storage
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Modbus RTU protocol metrics for efficient industrial automation and control performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [modbusrtu_exporter](https://github.com/dernasherbrezon/modbusrtu_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [modbusrtu_exporter](https://github.com/dernasherbrezon/modbusrtu_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-mogilefs
      most_popular: false
      community: true
      monitored_instance:
        name: MogileFS
        link: https://github.com/KKBOX/mogilefs-exporter
        icon_filename: filesystem.svg
        categories:
          - data-collection.storage-mount-points-and-filesystems
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor MogileFS distributed file system metrics for efficient storage management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [MogileFS Exporter](https://github.com/KKBOX/mogilefs-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [MogileFS Exporter](https://github.com/KKBOX/mogilefs-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-monnit_mqtt
      most_popular: false
      community: true
      monitored_instance:
        name: Monnit Sensors MQTT
        link: https://github.com/braxton9460/monnit-mqtt-exporter
        icon_filename: monnit.svg
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Monnit sensor data via MQTT for efficient IoT device monitoring and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Monnit Sensors MQTT Exporter WIP](https://github.com/braxton9460/monnit-mqtt-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Monnit Sensors MQTT Exporter WIP](https://github.com/braxton9460/monnit-mqtt-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-mtail
      most_popular: false
      community: true
      monitored_instance:
        name: mtail
        link: https://github.com/google/mtail
        icon_filename: mtail.png
        categories:
          - data-collection.logs-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor log data metrics using mtail log data extractor and parser.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [mtail](https://github.com/google/mtail).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [mtail](https://github.com/google/mtail) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-naemon
      most_popular: false
      community: true
      monitored_instance:
        name: Naemon
        link: https://github.com/Griesbacher/Iapetos
        icon_filename: naemon.svg
        categories:
          - data-collection.observability
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Naemon or Nagios network monitoring metrics for efficient IT infrastructure management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Naemon / Nagios Exporter](https://github.com/Griesbacher/Iapetos).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Naemon / Nagios Exporter](https://github.com/Griesbacher/Iapetos) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-nagios
      most_popular: false
      community: true
      monitored_instance:
        name: Nagios
        link: https://github.com/wbollock/nagios_exporter
        icon_filename: nagios.png
        categories:
          - data-collection.observability
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep tabs on Nagios network monitoring metrics for efficient
          IT infrastructure management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Nagios exporter](https://github.com/wbollock/nagios_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Nagios exporter](https://github.com/wbollock/nagios_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-nature_remo
      most_popular: false
      community: true
      monitored_instance:
        name: Nature Remo E lite devices
        link: https://github.com/kenfdev/remo-exporter
        icon_filename: nature-remo.png
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Nature Remo E series smart home device metrics for efficient home automation and energy management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Nature Remo E series Exporter](https://github.com/kenfdev/remo-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Nature Remo E series Exporter](https://github.com/kenfdev/remo-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-netatmo
      most_popular: false
      community: true
      monitored_instance:
        name: Netatmo sensors
        link: https://github.com/xperimental/netatmo-exporter
        icon_filename: netatmo.svg
        categories:
          - data-collection.iot-devices
      keywords:
        - network monitoring
        - network performance
        - traffic analysis
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep an eye on Netatmo smart home device metrics for efficient home automation and energy management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Netatmo exporter](https://github.com/xperimental/netatmo-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Netatmo exporter](https://github.com/xperimental/netatmo-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-netflow
      most_popular: false
      community: true
      monitored_instance:
        name: NetFlow
        link: https://github.com/paihu/netflow_exporter
        icon_filename: netflow.png
        categories:
          - data-collection.networking-stack-and-network-interfaces
      keywords:
        - network monitoring
        - network performance
        - traffic analysis
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track NetFlow network traffic metrics for efficient network monitoring and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [netflow exporter](https://github.com/paihu/netflow_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [netflow exporter](https://github.com/paihu/netflow_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-nextcloud
      most_popular: false
      community: true
      monitored_instance:
        name: Nextcloud servers
        link: https://github.com/xperimental/nextcloud-exporter
        icon_filename: nextcloud.png
        categories:
          - data-collection.cloud-provider-managed
      keywords:
        - cloud services
        - cloud computing
        - scalability
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep an eye on Nextcloud cloud storage metrics for efficient file hosting and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Nextcloud exporter](https://github.com/xperimental/nextcloud-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Nextcloud exporter](https://github.com/xperimental/nextcloud-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-nextdns
      most_popular: false
      community: true
      monitored_instance:
        name: NextDNS
        link: https://github.com/raylas/nextdns-exporter
        icon_filename: nextdns.png
        categories:
          - data-collection.dns-and-dhcp-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track NextDNS DNS resolver and security platform metrics for efficient DNS management and security.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [nextdns-exporter](https://github.com/raylas/nextdns-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [nextdns-exporter](https://github.com/raylas/nextdns-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-nftables
      most_popular: false
      community: true
      monitored_instance:
        name: nftables
        link: https://github.com/Sheridan/nftables_exporter
        icon_filename: nftables.png
        categories:
          - data-collection.linux-systems.firewall-metrics
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor nftables firewall metrics for efficient network security and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [nftables_exporter](https://github.com/Sheridan/nftables_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [nftables_exporter](https://github.com/Sheridan/nftables_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-ibm_aix_njmon
      most_popular: false
      community: true
      monitored_instance:
        name: IBM AIX systems Njmon
        link: https://github.com/crooks/njmon_exporter
        icon_filename: ibm.svg
        categories:
          - data-collection.apm
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep an eye on NJmon system performance monitoring metrics for efficient IT infrastructure management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [NJmon](https://github.com/crooks/njmon_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [NJmon](https://github.com/crooks/njmon_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-nrpe
      most_popular: false
      community: true
      monitored_instance:
        name: NRPE daemon
        link: https://github.com/canonical/nrpe_exporter
        icon_filename: nrpelinux.png
        categories:
          - data-collection.apm
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Nagios Remote Plugin Executor (NRPE) metrics for efficient system and network monitoring.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [NRPE exporter](https://github.com/canonical/nrpe_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [NRPE exporter](https://github.com/canonical/nrpe_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-mikrotik
      most_popular: false
      community: true
      monitored_instance:
        name: MikroTik devices
        link: https://github.com/swoga/mikrotik-exporter
        icon_filename: mikrotik.png
        categories:
          - data-collection.networking-stack-and-network-interfaces
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep tabs on MikroTik RouterOS metrics for efficient network device management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [mikrotik-exporter](https://github.com/swoga/mikrotik-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [nshttpd/mikrotik-exporter, swoga/m](https://github.com/swoga/mikrotik-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-nsxt
      most_popular: false
      community: true
      monitored_instance:
        name: NSX-T
        link: https://github.com/jk8s/nsxt_exporter
        icon_filename: vmware-nsx.svg
        categories:
          - data-collection.containers-and-vms
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track VMware NSX-T software-defined networking metrics for efficient network virtualization and security management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [NSX-T Exporter](https://github.com/jk8s/nsxt_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [NSX-T Exporter](https://github.com/jk8s/nsxt_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      id: collector-go.d.plugin-prometheus-nvml
      <<: *meta
      most_popular: false
      community: true
      monitored_instance:
        name: NVML
        link: https://github.com/oko/nvml-exporter-rs
        icon_filename: nvidia.svg
        categories:
          - data-collection.hardware-devices-and-sensors
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep an eye on NVIDIA Management Library (NVML) GPU metrics for efficient GPU performance and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [NVML exporter](https://github.com/oko/nvml-exporter-rs).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [NVML exporter](https://github.com/oko/nvml-exporter-rs) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-obs_studio
      most_popular: false
      community: true
      monitored_instance:
        name: OBS Studio
        link: https://github.com/lukegb/obs_studio_exporter
        icon_filename: obs-studio.png
        categories:
          - data-collection.media-streaming-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track OBS Studio live streaming and recording software metrics for efficient video production and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [OBS Studio Exporter](https://github.com/lukegb/obs_studio_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [OBS Studio Exporter](https://github.com/lukegb/obs_studio_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-odbc
      most_popular: false
      community: true
      monitored_instance:
        name: ODBC
        link: https://github.com/MACHBASE/prometheus-odbc-exporter
        icon_filename: odbc.svg
        categories:
          - data-collection.database-servers
      keywords:
        - database
        - dbms
        - data storage
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep tabs on Open Database Connectivity (ODBC) metrics for efficient database connection and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [ODBC Exporter](https://github.com/MACHBASE/prometheus-odbc-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [ODBC Exporter](https://github.com/MACHBASE/prometheus-odbc-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-openhab
      most_popular: false
      community: true
      monitored_instance:
        name: OpenHAB
        link: https://github.com/pdreker/openhab_exporter
        icon_filename: openhab.svg
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track openHAB smart home automation system metrics for efficient home automation and energy management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [OpenHAB exporter](https://github.com/pdreker/openhab_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [OpenHAB exporter](https://github.com/pdreker/openhab_exporter) by following the instructions mentioned in the exporter README.


  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-openrc
      most_popular: false
      community: true
      monitored_instance:
        name: OpenRC
        link: https://git.sr.ht/~tomleb/openrc-exporter
        icon_filename: linux.png
        categories:
          - data-collection.linux-systems
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep tabs on OpenRC init system metrics for efficient system startup and service management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [openrc-exporter](https://git.sr.ht/~tomleb/openrc-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [openrc-exporter](https://git.sr.ht/~tomleb/openrc-exporter) by following the instructions mentioned in the exporter README.

  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-openrct2
      most_popular: false
      community: true
      monitored_instance:
        name: OpenRCT2
        link: https://github.com/terinjokes/openrct2-prometheus-exporter
        icon_filename: openRCT2.png
        categories:
          - data-collection.gaming
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track OpenRCT2 game metrics for efficient game server management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [OpenRCT2 Prometheus Exporter](https://github.com/terinjokes/openrct2-prometheus-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [OpenRCT2 Prometheus Exporter](https://github.com/terinjokes/openrct2-prometheus-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-openroadm
      most_popular: false
      community: true
      monitored_instance:
        name: OpenROADM devices
        link: https://github.com/utdal/openroadm_exporter
        icon_filename: openroadm.png
        categories:
          - data-collection.networking-stack-and-network-interfaces
      keywords:
        - network monitoring
        - network performance
        - traffic analysis
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor OpenROADM optical transport network metrics using the NETCONF protocol for efficient network management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [OpenROADM NETCONF Exporter WIP](https://github.com/utdal/openroadm_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [OpenROADM NETCONF Exporter WIP](https://github.com/utdal/openroadm_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-openweathermap
      most_popular: false
      community: true
      monitored_instance:
        name: OpenWeatherMap
        link: https://github.com/Tenzer/openweathermap-exporter
        icon_filename: openweather.png
        categories:
          - data-collection.generic-data-collection
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track OpenWeatherMap weather data and air pollution metrics for efficient environmental monitoring and analysis.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [OpenWeatherMap Exporter](https://github.com/Tenzer/openweathermap-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [OpenWeatherMap Exporter](https://github.com/Tenzer/openweathermap-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-oracledb
      most_popular: false
      community: true
      monitored_instance:
        name: Oracle DB (community)
        link: https://github.com/iamseth/oracledb_exporter
        icon_filename: oracle.svg
        categories:
          - data-collection.database-servers
      keywords:
        - oracle
        - database
        - dbms
        - data storage
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Oracle Database metrics for efficient database management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Oracle DB Exporter](https://github.com/iamseth/oracledb_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Oracle DB Exporter](https://github.com/iamseth/oracledb_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-otrs
      most_popular: false
      community: true
      monitored_instance:
        name: OTRS
        link: https://github.com/JulianDroste/otrs_exporter
        icon_filename: otrs.png
        categories:
          - data-collection.notifications
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor OTRS (Open-Source Ticket Request System) metrics for efficient helpdesk management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [OTRS Exporter](https://github.com/JulianDroste/otrs_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [OTRS Exporter](https://github.com/JulianDroste/otrs_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-dutch_electricity_smart_meter
      most_popular: false
      community: true
      monitored_instance:
        name: Dutch Electricity Smart Meter
        link: https://github.com/TobiasDeBruijn/prometheus-p1-exporter
        icon_filename: dutch-electricity.png
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep tabs on Dutch smart meter P1 port metrics for efficient energy management and monitoring.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [P1Exporter - Dutch Electricity Smart Meter Exporter](https://github.com/TobiasDeBruijn/prometheus-p1-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [P1Exporter - Dutch Electricity Smart Meter Exporter](https://github.com/TobiasDeBruijn/prometheus-p1-exporter) by following the instructions mentioned in the exporter README.

  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-patroni
      most_popular: false
      community: true
      monitored_instance:
        name: Patroni
        link: https://github.com/gopaytech/patroni_exporter
        icon_filename: patroni.png
        categories:
          - data-collection.database-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep tabs on Patroni PostgreSQL high-availability metrics for efficient database management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Patroni Exporter](https://github.com/gopaytech/patroni_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Patroni Exporter](https://github.com/gopaytech/patroni_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-pws
      most_popular: false
      community: true
      monitored_instance:
        name: Personal Weather Station
        link: https://github.com/JohnOrthoefer/pws-exporter
        icon_filename: wunderground.png
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track personal weather station metrics for efficient weather monitoring and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Personal Weather Station Exporter](https://github.com/JohnOrthoefer/pws-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Personal Weather Station Exporter](https://github.com/JohnOrthoefer/pws-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-pgbackrest
      most_popular: false
      community: true
      monitored_instance:
        name: pgBackRest
        link: https://github.com/woblerr/pgbackrest_exporter
        icon_filename: pgbackrest.png
        categories:
          - data-collection.database-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor pgBackRest PostgreSQL backup metrics for efficient database backup and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [pgBackRest Exporter](https://github.com/woblerr/pgbackrest_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [pgBackRest Exporter](https://github.com/woblerr/pgbackrest_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-pgpool2
      most_popular: false
      community: true
      monitored_instance:
        name: Pgpool-II
        link: https://github.com/pgpool/pgpool2_exporter
        icon_filename: pgpool2.png
        categories:
          - data-collection.database-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Pgpool-II PostgreSQL middleware metrics for efficient database connection management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Pgpool-II Exporter](https://github.com/pgpool/pgpool2_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Pgpool-II Exporter](https://github.com/pgpool/pgpool2_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-pimoroni_enviro_plus
      most_popular: false
      community: true
      monitored_instance:
        name: Pimoroni Enviro+
        link: https://github.com/terradolor/prometheus-enviro-exporter
        icon_filename: pimorino.png
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Pimoroni Enviro+ air quality and environmental metrics for efficient environmental monitoring and analysis.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Pimoroni Enviro+ Exporter](https://github.com/terradolor/prometheus-enviro-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Pimoroni Enviro+ Exporter](https://github.com/terradolor/prometheus-enviro-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-pingdom
      most_popular: false
      community: true
      monitored_instance:
        name: Pingdom
        link: https://github.com/veepee-oss/pingdom_exporter
        icon_filename: solarwinds.svg
        categories:
          - data-collection.synthetic-checks
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Pingdom website monitoring service metrics for efficient website performance management and diagnostics.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Pingdom Exporter](https://github.com/veepee-oss/pingdom_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Pingdom Exporter](https://github.com/veepee-oss/pingdom_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-dell_powermax
      most_popular: false
      community: true
      monitored_instance:
        name: Dell PowerMax
        link: https://github.com/kckecheng/powermax_exporter
        icon_filename: powermax.png
        categories:
          - data-collection.storage-mount-points-and-filesystems
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Dell EMC PowerMax storage array metrics for efficient storage management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [PowerMax Exporter](https://github.com/kckecheng/powermax_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [PowerMax Exporter](https://github.com/kckecheng/powermax_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-powerpal
      most_popular: false
      community: true
      monitored_instance:
        name: Powerpal devices
        link: https://github.com/aashley/powerpal_exporter
        icon_filename: powerpal.png
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep an eye on Powerpal smart meter metrics for efficient energy management and monitoring.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Powerpal Exporter](https://github.com/aashley/powerpal_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Powerpal Exporter](https://github.com/aashley/powerpal_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-proftpd
      most_popular: false
      community: true
      monitored_instance:
        name: ProFTPD
        link: https://github.com/transnano/proftpd_exporter
        icon_filename: proftpd.png
        categories:
          - data-collection.ftp-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor ProFTPD FTP server metrics for efficient file transfer and server performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [ProFTPD Exporter](https://github.com/transnano/proftpd_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [ProFTPD Exporter](https://github.com/transnano/proftpd_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-eaton_ups
      most_popular: false
      community: true
      monitored_instance:
        name: Eaton UPS
        link: https://github.com/psyinfra/prometheus-eaton-ups-exporter
        icon_filename: eaton.svg
        categories:
          - data-collection.ups
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Eaton uninterruptible power supply (UPS) metrics for efficient power management and monitoring.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Prometheus Eaton UPS Exporter](https://github.com/psyinfra/prometheus-eaton-ups-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Prometheus Eaton UPS Exporter](https://github.com/psyinfra/prometheus-eaton-ups-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-redis_queue
      most_popular: false
      community: true
      monitored_instance:
        name: Redis Queue
        link: https://github.com/mdawar/rq-exporter
        icon_filename: rq.png
        categories:
          - data-collection.message-brokers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Python RQ (Redis Queue) job queue metrics for efficient task management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Python RQ Exporter](https://github.com/mdawar/rq-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Python RQ Exporter](https://github.com/mdawar/rq-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-radio_thermostat
      most_popular: false
      community: true
      monitored_instance:
        name: Radio Thermostat
        link: https://github.com/andrewlow/radio-thermostat-exporter
        icon_filename: radiots.png
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Radio Thermostat smart thermostat metrics for efficient home automation and energy management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Radio Thermostat Exporter](https://github.com/andrewlow/radio-thermostat-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Radio Thermostat Exporter](https://github.com/andrewlow/radio-thermostat-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-rancher
      most_popular: false
      community: true
      monitored_instance:
        name: Rancher
        link: https://github.com/infinityworksltd/prometheus-rancher-exporter
        icon_filename: rancher.svg
        categories:
          - data-collection.kubernetes
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Rancher container orchestration platform metrics for efficient container management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Rancher Exporter](https://github.com/infinityworksltd/prometheus-rancher-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Rancher Exporter](https://github.com/infinityworksltd/prometheus-rancher-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-raritan_pdu
      most_popular: false
      community: true
      monitored_instance:
        name: Raritan PDU
        link: https://github.com/psyinfra/prometheus-raritan-pdu-exporter
        icon_filename: raritan.svg
        categories:
          - data-collection.hardware-devices-and-sensors
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Raritan Power Distribution Unit (PDU) metrics for efficient power management and monitoring.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Raritan PDU Exporter](https://github.com/psyinfra/prometheus-raritan-pdu-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Raritan PDU Exporter](https://github.com/psyinfra/prometheus-raritan-pdu-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-routeros
      most_popular: false
      community: true
      monitored_instance:
        name: Mikrotik RouterOS devices
        link: https://github.com/welbymcroberts/routeros_exporter
        icon_filename: routeros.png
        categories:
          - data-collection.networking-stack-and-network-interfaces
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track MikroTik RouterOS metrics for efficient network device management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [RouterOS exporter](https://github.com/welbymcroberts/routeros_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [RouterOS exporter](https://github.com/welbymcroberts/routeros_exporter) by following the instructions mentioned in the exporter README.

  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-sabnzbd
      most_popular: false
      community: true
      monitored_instance:
        name: SABnzbd
        link: https://github.com/msroest/sabnzbd_exporter
        icon_filename: sabnzbd.png
        categories:
          - data-collection.media-streaming-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor SABnzbd Usenet client metrics for efficient file downloads and resource management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [SABnzbd Exporter](https://github.com/msroest/sabnzbd_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [SABnzbd Exporter](https://github.com/msroest/sabnzbd_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-salicru_eqx
      most_popular: false
      community: true
      monitored_instance:
        name: Salicru EQX inverter
        link: https://github.com/alejandroscf/prometheus_salicru_exporter
        icon_filename: salicru.png
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep tabs on Salicru EQX solar inverter metrics for efficient solar energy management and monitoring.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Salicru EQX inverter](https://github.com/alejandroscf/prometheus_salicru_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Salicru EQX inverter](https://github.com/alejandroscf/prometheus_salicru_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-sense_energy
      most_popular: false
      community: true
      monitored_instance:
        name: Sense Energy
        link: https://github.com/ejsuncy/sense_energy_prometheus_exporter
        icon_filename: sense.png
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep tabs on Sense Energy smart meter metrics for efficient energy management and monitoring.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Sense Energy exporter](https://github.com/ejsuncy/sense_energy_prometheus_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Sense Energy exporter](https://github.com/ejsuncy/sense_energy_prometheus_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-servertech
      most_popular: false
      community: true
      monitored_instance:
        name: ServerTech
        link: https://github.com/tynany/servertech_exporter
        icon_filename: servertech.png
        categories:
          - data-collection.hardware-devices-and-sensors
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep an eye on Server Technology power distribution unit (PDU) metrics for efficient power management and monitoring.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [ServerTech Exporter](https://github.com/tynany/servertech_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [ServerTech Exporter](https://github.com/tynany/servertech_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-shelly
      most_popular: false
      community: true
      monitored_instance:
        name: Shelly humidity sensor
        link: https://github.com/aexel90/shelly_exporter
        icon_filename: shelly.jpg
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Shelly smart home device metrics for efficient home automation and energy management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Shelly Exporter](https://github.com/aexel90/shelly_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Shelly Exporter](https://github.com/aexel90/shelly_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-sia
      most_popular: false
      community: true
      monitored_instance:
        name: Sia
        link: https://github.com/tbenz9/sia_exporter
        icon_filename: sia.png
        categories:
          - data-collection.blockchain-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Sia decentralized storage platform metrics for efficient storage management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Sia Exporter](https://github.com/tbenz9/sia_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Sia Exporter](https://github.com/tbenz9/sia_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-s7_plc
      most_popular: false
      community: true
      monitored_instance:
        name: Siemens S7 PLC
        link: https://github.com/MarcusCalidus/s7-plc-exporter
        icon_filename: siemens.svg
        categories:
          - data-collection.hardware-devices-and-sensors
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Siemens S7 Programmable Logic Controller (PLC) metrics for efficient industrial automation and control.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Siemens S7 PLC exporter](https://github.com/MarcusCalidus/s7-plc-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Siemens S7 PLC exporter](https://github.com/MarcusCalidus/s7-plc-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-site24x7
      most_popular: false
      community: true
      monitored_instance:
        name: Site 24x7
        link: https://github.com/svenstaro/site24x7_exporter
        icon_filename: site24x7.svg
        categories:
          - data-collection.synthetic-checks
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Site24x7 website and infrastructure monitoring metrics for efficient performance tracking and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [site24x7 Exporter](https://github.com/svenstaro/site24x7_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [site24x7 Exporter](https://github.com/svenstaro/site24x7_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-sma_inverter
      most_popular: false
      community: true
      monitored_instance:
        name: SMA Inverters
        link: https://github.com/dr0ps/sma_inverter_exporter
        icon_filename: sma.png
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor SMA solar inverter metrics for efficient solar energy management and monitoring.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [sma-exporter](https://github.com/dr0ps/sma_inverter_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [sma-exporter](https://github.com/dr0ps/sma_inverter_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-smartrg808ac
      most_popular: false
      community: true
      monitored_instance:
        name: SmartRG 808AC Cable Modem
        link: https://github.com/AdamIsrael/smartrg808ac_exporter
        icon_filename: smartr.jpeg
        categories:
          - data-collection.networking-stack-and-network-interfaces
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor SmartRG SR808ac router metrics for efficient network device management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [smartrg808ac_exporter](https://github.com/AdamIsrael/smartrg808ac_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [smartrg808ac_exporter](https://github.com/AdamIsrael/smartrg808ac_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-sml
      most_popular: false
      community: true
      monitored_instance:
        name: Smart meters SML
        link: https://github.com/mweinelt/sml-exporter
        icon_filename: sml.png
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Smart Message Language (SML) metrics for efficient smart metering and energy management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [SML Exporter](https://github.com/mweinelt/sml-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [SML Exporter](https://github.com/mweinelt/sml-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-softether
      most_popular: false
      community: true
      monitored_instance:
        name: SoftEther VPN Server
        link: https://github.com/dalance/softether_exporter
        icon_filename: softether.svg
        categories:
          - data-collection.vpns
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor SoftEther VPN Server metrics for efficient virtual private network (VPN) management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [SoftEther Exporter](https://github.com/dalance/softether_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [SoftEther Exporter](https://github.com/dalance/softether_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-lsx
      most_popular: false
      community: true
      monitored_instance:
        name: Solar logging stick
        link: https://gitlab.com/bhavin192/lsx-exporter
        icon_filename: solar.png
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor solar energy metrics using a solar logging stick for efficient solar energy management and monitoring.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Solar logging stick exporter](https://gitlab.com/bhavin192/lsx-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Solar logging stick exporter](https://gitlab.com/bhavin192/lsx-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-solaredge
      most_popular: false
      community: true
      monitored_instance:
        name: SolarEdge inverters
        link: https://github.com/dave92082/SolarEdge-Exporter
        icon_filename: solaredge.png
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track SolarEdge solar inverter metrics for efficient solar energy management and monitoring.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [SolarEdge Exporter](https://github.com/dave92082/SolarEdge-Exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [SolarEdge Exporter](https://github.com/dave92082/SolarEdge-Exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-solis
      most_popular: false
      community: true
      monitored_instance:
        name: Solis Ginlong 5G inverters
        link: https://github.com/candlerb/solis_exporter
        icon_filename: solis.jpg
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Solis solar inverter metrics for efficient solar energy management and monitoring.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Solis Exporter](https://github.com/candlerb/solis_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Solis Exporter](https://github.com/candlerb/solis_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-sonic
      most_popular: false
      community: true
      monitored_instance:
        name: SONiC NOS
        link: https://github.com/kamelnetworks/sonic_exporter
        icon_filename: sonic.png
        categories:
          - data-collection.networking-stack-and-network-interfaces
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep tabs on Software for Open Networking in the Cloud (SONiC) metrics for efficient network switch management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [SONiC Exporter](https://github.com/kamelnetworks/sonic_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [SONiC Exporter](https://github.com/kamelnetworks/sonic_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-ibm_spectrum_virtualize
      most_popular: false
      community: true
      monitored_instance:
        name: IBM Spectrum Virtualize
        link: https://github.com/bluecmd/spectrum_virtualize_exporter
        icon_filename: ibm.svg
        categories:
          - data-collection.storage-mount-points-and-filesystems
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor IBM Spectrum Virtualize metrics for efficient storage virtualization and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [spectrum_virtualize_exporter](https://github.com/bluecmd/spectrum_virtualize_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [spectrum_virtualize_exporter](https://github.com/bluecmd/spectrum_virtualize_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-speedify
      most_popular: false
      community: true
      monitored_instance:
        name: Speedify CLI
        link: https://github.com/willshen/speedify_exporter
        icon_filename: speedify.png
        categories:
          - data-collection.vpns
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Speedify VPN metrics for efficient virtual private network (VPN) management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Speedify Exporter](https://github.com/willshen/speedify_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Speedify Exporter](https://github.com/willshen/speedify_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-sphinx
      most_popular: false
      community: true
      monitored_instance:
        name: Sphinx
        link: https://github.com/foxdalas/sphinx_exporter
        icon_filename: sphinx.png
        categories:
          - data-collection.search-engines
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Sphinx search engine metrics for efficient search and indexing performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Sphinx Exporter](https://github.com/foxdalas/sphinx_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Sphinx Exporter](https://github.com/foxdalas/sphinx_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-sql
      most_popular: false
      community: true
      monitored_instance:
        name: SQL Database agnostic
        link: https://github.com/free/sql_exporter
        icon_filename: sql.svg
        categories:
          - data-collection.database-servers
      keywords:
        - database
        - relational db
        - data querying
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Query SQL databases for efficient database performance monitoring.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [SQL Exporter](https://github.com/free/sql_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [SQL Exporter](https://github.com/free/sql_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-starwind_vsan
      most_popular: false
      community: true
      monitored_instance:
        name: Starwind VSAN VSphere Edition
        link: https://github.com/evoicefire/starwind-vsan-exporter
        icon_filename: starwind.svg
        categories:
          - data-collection.storage-mount-points-and-filesystems
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep tabs on StarWind Virtual SAN metrics for efficient storage virtualization and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Starwind vSAN Exporter](https://github.com/evoicefire/starwind-vsan-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Starwind vSAN Exporter](https://github.com/evoicefire/starwind-vsan-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-storidge
      most_popular: false
      community: true
      monitored_instance:
        name: Storidge
        link: https://github.com/Storidge/cio-user-docs/blob/master/integrations/prometheus.md
        icon_filename: storidge.png
        categories:
          - data-collection.storage-mount-points-and-filesystems
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep an eye on Storidge storage metrics for efficient storage management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Storidge exporter](https://github.com/Storidge/cio-user-docs/blob/master/integrations/prometheus.md).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Storidge exporter](https://github.com/Storidge/cio-user-docs/blob/master/integrations/prometheus.md) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-stream_generic
      most_popular: false
      community: true
      monitored_instance:
        name: Stream
        link: https://github.com/carlpett/stream_exporter
        icon_filename: stream.png
        categories:
          - data-collection.media-streaming-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor streaming metrics for efficient media streaming and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Stream exporter](https://github.com/carlpett/stream_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Stream exporter](https://github.com/carlpett/stream_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-strongswan
      most_popular: false
      community: true
      monitored_instance:
        name: strongSwan
        link: https://github.com/jlti-dev/ipsec_exporter
        icon_filename: strongswan.svg
        categories:
          - data-collection.vpns
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track strongSwan VPN and IPSec metrics using the vici interface for efficient virtual private network (VPN) management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [strongSwan/IPSec/vici Exporter](https://github.com/jlti-dev/ipsec_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [strongSwan/IPSec/vici Exporter](https://github.com/jlti-dev/ipsec_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      id: collector-go.d.plugin-prometheus-sunspec
      <<: *meta
      most_popular: false
      community: true
      monitored_instance:
        name: Sunspec Solar Energy
        link: https://github.com/inosion/prometheus-sunspec-exporter
        icon_filename: sunspec.png
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor SunSpec Alliance solar energy metrics for efficient solar energy management and monitoring.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Sunspec Solar Energy Exporter](https://github.com/inosion/prometheus-sunspec-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Sunspec Solar Energy Exporter](https://github.com/inosion/prometheus-sunspec-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-suricata
      most_popular: false
      community: true
      monitored_instance:
        name: Suricata
        link: https://github.com/corelight/suricata_exporter
        icon_filename: suricata.png
        categories:
          - data-collection.security-systems
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Keep an eye on Suricata network intrusion detection and prevention system (IDS/IPS) metrics for efficient network security and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Suricata Exporter](https://github.com/corelight/suricata_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Suricata Exporter](https://github.com/corelight/suricata_exporter) by following the instructions mentioned in the exporter README.


  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-synology_activebackup
      most_popular: false
      community: true
      monitored_instance:
        name: Synology ActiveBackup
        link: https://github.com/codemonauts/activebackup-prometheus-exporter
        icon_filename: synology.png
        categories:
          - data-collection.storage-mount-points-and-filesystems
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Synology Active Backup metrics for efficient backup and data protection management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Synology ActiveBackup Exporter](https://github.com/codemonauts/activebackup-prometheus-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Synology ActiveBackup Exporter](https://github.com/codemonauts/activebackup-prometheus-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      id: collector-go.d.plugin-prometheus-sysload
      <<: *meta
      most_popular: false
      community: true
      monitored_instance:
        name: Sysload
        link: https://github.com/egmc/sysload_exporter
        icon_filename: sysload.png
        categories:
          - data-collection.apm
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor system load metrics for efficient system performance and resource management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Sysload Exporter](https://github.com/egmc/sysload_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Sysload Exporter](https://github.com/egmc/sysload_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-trex
      most_popular: false
      community: true
      monitored_instance:
        name: T-Rex NVIDIA GPU Miner
        link: https://github.com/dennisstritzke/trex_exporter
        icon_filename: trex.png
        categories:
          - data-collection.hardware-devices-and-sensors
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor T-Rex NVIDIA GPU miner metrics for efficient cryptocurrency mining and GPU performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [T-Rex NVIDIA GPU Miner Exporter](https://github.com/dennisstritzke/trex_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [T-Rex NVIDIA GPU Miner Exporter](https://github.com/dennisstritzke/trex_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      id: collector-go.d.plugin-prometheus-tado
      <<: *meta
      most_popular: false
      community: true
      monitored_instance:
        name: Tado smart heating solution
        link: https://github.com/eko/tado-exporter
        icon_filename: tado.png
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Tado smart thermostat metrics for efficient home heating and cooling management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Tado\xB0 Exporter](https://github.com/eko/tado-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Tado Exporter](https://github.com/eko/tado-exporter) by following the instructions mentioned in the exporter README.

  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-tankerkoenig
      most_popular: false
      community: true
      monitored_instance:
        name: Tankerkoenig API
        link: https://github.com/lukasmalkmus/tankerkoenig_exporter
        icon_filename: tanker.png
        categories:
          - data-collection.generic-data-collection
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Tankerknig API fuel price metrics for efficient fuel price monitoring and management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Tankerknig API Exporter](https://github.com/lukasmalkmus/tankerkoenig_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Tankerknig API Exporter](https://github.com/lukasmalkmus/tankerkoenig_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-tesla_wall_connector
      most_popular: false
      community: true
      monitored_instance:
        name: Tesla Wall Connector
        link: https://github.com/benclapp/tesla_wall_connector_exporter
        icon_filename: tesla.png
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Tesla Wall Connector charging station metrics for efficient electric vehicle charging management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Tesla Wall Connector Exporter](https://github.com/benclapp/tesla_wall_connector_exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Tesla Wall Connector Exporter](https://github.com/benclapp/tesla_wall_connector_exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-tplink_p110
      most_popular: false
      community: true
      monitored_instance:
        name: TP-Link P110
        link: https://github.com/ijohanne/prometheus-tplink-p110-exporter
        icon_filename: tplink.png
        categories:
          - data-collection.iot-devices
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track TP-Link P110 smart plug metrics for efficient energy management and monitoring.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [TP-Link P110 Exporter](https://github.com/ijohanne/prometheus-tplink-p110-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [TP-Link P110 Exporter](https://github.com/ijohanne/prometheus-tplink-p110-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-traceroute
      most_popular: false
      community: true
      monitored_instance:
        name: Traceroute
        link: https://github.com/jeanfabrice/prometheus-tcptraceroute-exporter
        icon_filename: traceroute.png
        categories:
          - data-collection.networking-stack-and-network-interfaces
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Export traceroute metrics for efficient network path analysis and performance monitoring.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [traceroute exporter](https://github.com/jeanfabrice/prometheus-tcptraceroute-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [traceroute exporter](https://github.com/jeanfabrice/prometheus-tcptraceroute-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-twincat_ads_webservice
      most_popular: false
      community: true
      monitored_instance:
        name: TwinCAT ADS Web Service
        link: https://github.com/MarcusCalidus/twincat-ads-webservice-exporter
        icon_filename: twincat.png
        categories:
          - data-collection.generic-data-collection
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor TwinCAT ADS (Automation Device Specification) Web Service metrics for efficient industrial automation and control.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [TwinCAT ADS Web Service exporter](https://github.com/MarcusCalidus/twincat-ads-webservice-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [TwinCAT ADS Web Service exporter](https://github.com/MarcusCalidus/twincat-ads-webservice-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-warp10
      most_popular: false
      community: true
      monitored_instance:
        name: Warp10
        link: https://github.com/centreon/warp10-sensision-exporter
        icon_filename: warp10.svg
        categories:
          - data-collection.database-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Warp 10 time-series database metrics for efficient time-series data management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Warp10 Exporter](https://github.com/centreon/warp10-sensision-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Warp10 Exporter](https://github.com/centreon/warp10-sensision-exporter) by following the instructions mentioned in the exporter README.

  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-yourls
      most_popular: false
      community: true
      monitored_instance:
        name: YOURLS URL Shortener
        link: https://github.com/just1not2/prometheus-exporter-yourls
        icon_filename: yourls.png
        categories:
          - data-collection.apm
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor YOURLS (Your Own URL Shortener) metrics for efficient URL shortening service management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [YOURLS exporter](https://github.com/just1not2/prometheus-exporter-yourls).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [YOURLS exporter](https://github.com/just1not2/prometheus-exporter-yourls) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-zerto
      most_popular: false
      community: true
      monitored_instance:
        name: Zerto
        link: https://github.com/claranet/zerto-exporter
        icon_filename: zerto.png
        categories:
          - data-collection.cloud-provider-managed
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Zerto disaster recovery and data protection metrics for efficient backup and recovery management.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Zerto Exporter](https://github.com/claranet/zerto-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Zerto Exporter](https://github.com/claranet/zerto-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-zulip
      most_popular: false
      community: true
      monitored_instance:
        name: Zulip
        link: https://github.com/brokenpip3/zulip-exporter
        icon_filename: zulip.png
        categories:
          - data-collection.media-streaming-servers
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Monitor Zulip open-source group chat application metrics for efficient team communication management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Zulip Exporter](https://github.com/brokenpip3/zulip-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Zulip Exporter](https://github.com/brokenpip3/zulip-exporter) by following the instructions mentioned in the exporter README.
  - <<: *module
    meta:
      <<: *meta
      id: collector-go.d.plugin-prometheus-zyxel_gs1200
      most_popular: false
      community: true
      monitored_instance:
        name: Zyxel GS1200-8
        link: https://github.com/robinelfrink/gs1200-exporter
        icon_filename: zyxel.png
        categories:
          - data-collection.networking-stack-and-network-interfaces
      keywords: []
    overview:
      <<: *overview
      data_collection:
        metrics_description: |
          Track Zyxel GS1200 network switch metrics for efficient network device management and performance.
        method_description: |
          Metrics are gathered by periodically sending HTTP requests to [Zyxel GS1200 Exporter](https://github.com/robinelfrink/gs1200-exporter).
    setup:
      <<: *setup
      prerequisites:
        list:
          - title: Install Exporter
            description: |
              Install [Zyxel GS1200 Exporter](https://github.com/robinelfrink/gs1200-exporter) by following the instructions mentioned in the exporter README.

