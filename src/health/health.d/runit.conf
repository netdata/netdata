# you can disable an alarm notification by setting the 'to' line to: silent

    template: runit_service_undesired_state
          on: runit.service_state
       class: Errors
        type: Linux
   component: Runit
       units: up
       every: 30s
        calc: 1 - $down
        warn: $this != nan AND $this != $enabled
       delay: up 5s down 1m multiplier 1.5 max 1h
     summary: runit ${label:_collect_job} service ${label:service} state
        info: runit service is not in desired state
          to: sysadmin

    template: runit_service_paused
          on: runit.service_state
       class: Errors
        type: Linux
   component: Runit
       units: paused
       every: 30s
      lookup: max -30s unaligned of paused
        warn: $this != nan AND $this == 1
       delay: down 1m multiplier 1.5 max 1h
     summary: runit ${label:_collect_job} service ${label:service} state
        info: runit service is paused
          to: sysadmin

    template: runit_service_failed
          on: runit.service_state
       class: Errors
        type: Linux
   component: Runit
       units: failed
       every: 30s
      lookup: max -30s unaligned of starting
        crit: $this != nan AND $starting != nan AND $this == 1 AND $starting == 1
       delay: down 1m multiplier 1.5 max 1h
     summary: runit ${label:_collect_job} service ${label:service} state
        info: runit service is failed
          to: sysadmin

    template: runit_service_hangs_on_finish
          on: runit.service_state
       class: Latency
        type: Linux
   component: Runit
       units: seconds
       every: 5s
      lookup: sum -50s unaligned of finishing
        calc: $this * $update_every
        warn: $this != nan AND $this > 10
        crit: $this != nan AND $this > 30
       delay: down 1m multiplier 1.5 max 1h
     summary: runit ${label:_collect_job} service ${label:service} state
        info: runit service finishing takes too long
          to: sysadmin
