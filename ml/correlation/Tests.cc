// SPDX-License-Identifier: GPL-3.0-or-later

#include "ml/ml-private.h"
#include <gtest/gtest.h>
#include "SpearmansRank.h"

/*
 * The SpearmansRankCorrelation class implements the functionality of the following algorithm:
 *      Rank each observation in X and store it in Rank_X 
 *      Rank each observation in Y and store it in Rank_Y 
 *      Obtain Pearson Correlation Coefficient for Rank_X and Rank_Y
 *
 * The correctness of this implementation has been verified by the following tests that 
 * are designed to capture several different correlation relationship based on the 
 * number sets with different synthetic values 
*/

TEST(SpearmansRankCorrelationTest, twoZeroVectors) {

    std::vector<float> X = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
	std::vector<float> Y = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
	
	SpearmansRank SR(X, Y);
    double result = SR.getCorrelationCoefficient();
    EXPECT_EQ(result, 0);
}

TEST(SpearmansRankCorrelationTest, oneZeroVector) {

    std::vector<float> X = {1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2};
	std::vector<float> Y = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
	
	SpearmansRank SR(X, Y);
    double result = SR.getCorrelationCoefficient();
    EXPECT_EQ(result, 0);
}

TEST(SpearmansRankCorrelationTest, PerfectlyPositiveCorrelation) {

    std::vector<float> X = {1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2};
	std::vector<float> Y = {2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3};
    
    SpearmansRank SR(X, Y);
	double result = SR.getCorrelationCoefficient();
    EXPECT_NEAR(result, 1.0, 0.01);
}

TEST(SpearmansRankCorrelationTest, PositiveCorrelation) {

    std::vector<float> X = {7.64686444, 82.81834663, 47.19034669, 41.1688683, 72.95597309, 25.25836315,
                            64.09426948, 67.57408253, 92.61611751,  2.60614868, 13.88249453, 68.27543939,
                            54.2829987,  25.19381391, 49.02069402, 74.68907948, 19.64251871, 55.02340822,
                            24.61935231, 83.34922937, 49.93527722,  9.10499027, 59.60211516, 36.13146907,
                            37.41032506,  7.27052079, 74.34103065, 41.9869086,  46.89504991, 73.73165815,
                            75.52509077, 24.63597459, 16.91092239, 53.75924172, 14.65188979, 58.60736635,
                            22.14269391, 50.92184275, 38.41585053, 24.8494357,  22.0321635,   1.01242643,
                            31.46021177, 41.56815667, 59.19402875, 54.22957756, 51.11197406, 38.34122601,
                            21.81199885,  7.90438883};
	std::vector<float> Y = {0.29749283, 5.41989507, 5.75011989, 8.38092768, 6.16180899, 5.90580747,
                            9.68344299, 5.37935643, 6.19352969, 8.53197023, 6.67490221, 9.16940148,
                            2.28915173, 2.29433615, 7.28166739, 5.05127219, 4.7774711,  7.17823017,
                            9.42951577, 3.01779926, 9.46221312, 7.85627077, 6.3140868,  3.75612228,
                            4.069158,   3.54477326, 5.27549367, 3.89496765, 2.08347247, 1.36408528,
                            7.18474004, 2.65156045, 0.6058127,  0.16271817, 6.5555049,  1.30115953,
                            5.20794813, 5.40572969, 1.09638299, 1.97954733, 3.19149123, 8.61118968,
                            5.63650074, 7.41343741, 1.00253612, 8.73603701, 0.67671279, 3.22079062,
                            2.82487675, 5.19643226};
    
    SpearmansRank SR(X, Y);
	double result = SR.getCorrelationCoefficient();
    EXPECT_NEAR(result, 0.0440, 0.01);
    
}

TEST(SpearmansRankCorrelationTest, NoCorrelation) {

    std::vector<float> X = {1.09971296e+01, 8.91113902e+01, 8.85002599e+01, 6.07912309e-01,
                            6.55809186e+01, 8.23978596e+00, 8.92323717e+01, 4.63061227e+01,
                            4.90959364e+01, 2.24963367e-01, 6.06308555e+01, 3.29889441e+01,
                            5.07523082e+01, 9.11497891e+01, 5.53869051e+01, 8.70269462e+01,
                            5.45940881e+01, 4.47226662e+01, 7.79636117e+01, 9.11632410e+01,
                            6.36701845e+01, 2.47583723e+01, 1.89771022e+01, 9.45207018e-01,
                            2.65768040e+01, 3.74670417e+01, 3.80612589e+00, 7.74143234e+01,
                            5.15531569e+01, 9.57251845e+01, 8.54046449e+01, 3.79263743e+01,
                            9.36001409e+01, 7.67150563e+01, 8.73773557e+01, 2.10591577e+01,
                            8.74847301e+01, 6.75209809e+01, 5.70818127e+01, 6.93975893e+01,
                            2.84694132e+01, 1.20917150e+01, 5.71930930e+01, 3.10659370e-02,
                            9.35554380e+01, 9.94151603e+01, 6.24921168e+01, 8.78542717e+00,
                            6.08075077e+01, 1.47530030e+01};
	std::vector<float> Y = {0.45879188, 7.14608257, 1.92079345, 0.04229272, 9.45636497, 9.84894732,
                            1.98569361, 8.51178998, 5.55369811, 5.54585788, 2.20142729, 9.12067162,
                            1.31273546, 5.86366168, 4.80220173, 4.60306201, 9.07455212, 0.94723624,
                            2.22944615, 7.18158387, 2.64115861, 0.69289765, 4.45177057, 6.14063009,
                            3.72398921, 7.84644894, 5.53343682, 8.14063091, 3.90288662, 0.87841509,
                            9.73775121, 2.01236148, 5.65765423, 3.09824059, 8.93732516, 2.73068668,
                            5.56556986, 5.60231723, 9.43767602, 8.83098541, 8.18058439, 2.10418254,
                            5.0242335,  2.35021297, 3.71096172, 0.02918597, 4.37887381, 9.56441993,
                            3.56612145, 7.46444786};
    
    SpearmansRank SR(X, Y);
	double result = SR.getCorrelationCoefficient();
    EXPECT_NEAR(result, 0.0, 0.01);
}

TEST(SpearmansRankCorrelationTest, NegativeCorrelation) {

    std::vector<float> X = {97.64662187, 11.8911485,  93.21947879, 64.69703262, 94.1518275,  81.23530297,
                            52.30645578, 89.08272077, 29.6788517,  62.49962776, 37.14557633, 28.46077302,
                            48.00647975,  3.8670434,  54.58573864, 84.23560228, 11.74825083,  1.25672072,
                            62.79796518, 84.28237579, 14.94237412, 94.48844021, 62.95446666, 84.33992946,
                            33.19423681, 90.98990259, 11.95722137, 59.99575512,  1.47825512, 12.28137445,
                            60.01037221, 49.09612035, 39.97327398, 71.35917798, 36.23707797, 46.66546794,
                            22.49870249, 28.39728954, 90.64903075,  4.72185514, 81.06235917, 67.51400728,
                            2.29362484, 14.49070841, 92.93183775, 42.2335748,  28.75665859, 90.04759768,
                            23.28048184, 72.56071202};
	std::vector<float> Y = {6.77073627, 6.16991585, 2.52738804, 4.93311788, 6.45040102, 8.26719229,
                            0.95306564, 5.45317111, 1.69453211, 7.98890157, 5.69845104, 1.48940967,
                            0.80617341, 8.42300854, 2.29388354, 7.57413711, 0.21546237, 3.97414794,
                            1.60195982, 4.38531349, 8.18740367, 2.93491046, 3.26372196, 5.3205566,
                            7.89306097, 7.59275964, 0.17874693, 7.42735779, 4.23206543, 9.39293248,
                            5.20587516, 6.10339702, 8.16915979, 9.24038723, 8.14814319, 8.57947455,
                            9.90003517, 8.11034329, 4.84182667, 2.32772582, 6.42611701, 4.68854146,
                            3.13763832, 7.16254701, 1.75268139, 7.7962695,  1.4491085,  2.12052722,
                            7.55173096, 5.09440716};

    SpearmansRank SR(X, Y);
	double result = SR.getCorrelationCoefficient();
    EXPECT_NEAR(result, -0.0302, 0.01);
}

TEST(SpearmansRankCorrelationTest, PerfectlyNegativeCorrelation) {

    std::vector<float> X = {77.96075722, 58.31187729, 71.2775372,  29.64708124, 82.95458931, 72.55485168,
                            11.14578172, 67.31068508, 56.88142945, 75.15537409, 42.44856133, 70.41575041,
                            8.18025316, 35.29561944, 11.50288037, 12.42418494, 63.04149799,  9.39500338,
                            8.86225837, 44.69525864, 46.88025085, 75.3097742,  75.03201053, 14.76337503,
                            57.22508355, 78.25918079, 25.83290584, 19.75752851, 61.03583897, 13.59853677,
                            90.69749663, 25.37578166, 21.05270221, 56.02725283, 99.62131907, 12.48380261,
                            50.91161141, 25.594315,   30.17495544, 75.59805329, 89.76533989, 77.36590303,
                            30.40357846, 73.59897525, 77.8679796,  37.63092947, 12.55471991, 52.86743501,
                            87.80498951, 70.17019227};
	std::vector<float> Y = {-7.34073984e+07, -2.29254562e+07, -5.12605700e+07, -1.51903790e+06,
                            -9.41382334e+07, -5.50417885e+07, -2.94727925e+04, -4.07500239e+07,
                            -2.07528342e+07, -6.33827590e+07, -6.41705042e+06, -4.88218670e+07,
                            -8.40025285e+03, -3.05996076e+06, -3.34851655e+04, -4.57284467e+04,
                            -3.13384662e+07, -1.47445446e+04, -1.16329065e+04, -7.89204585e+06,
                            -9.55724031e+06, -6.39061010e+07, -6.29669313e+07, -9.17849344e+04,
                            -2.12600501e+07, -7.45396789e+07, -8.73435440e+05, -2.97041207e+05,
                            -2.75294282e+07, -6.58683182e+04, -1.34589244e+08, -8.12944215e+05,
                            -3.83542424e+05, -1.95314277e+07, -1.95999027e+08, -4.66219900e+04,
                            -1.33048764e+07, -8.41456645e+05, -1.63063910e+06, -6.48918952e+07,
                            -1.29133485e+08, -7.11889320e+07, -1.68083545e+06, -5.82849633e+07,
                            -7.30580243e+07, -3.95730729e+06, -4.77018668e+04, -1.54758957e+07,
                            -1.18202488e+08, -4.81431976e+07};
    
    SpearmansRank SR(X, Y);
	double result = SR.getCorrelationCoefficient();
    EXPECT_NEAR(result, -1.0, 0.01);
}
