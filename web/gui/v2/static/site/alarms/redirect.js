let query;"undefined"===typeof module&&(module={});const buildQuery=()=>{query="URLSearchParams"in window?new URLSearchParams(window.location.search.substr(1)):null},NOT_FOUND="404",fetchJson=e=>fetch(e).then((e=>{if(!e.ok)throw new Error(e.status);return e.json()})),findAgentInCloud=e=>fetchJson(`/api/v1/agents/${e}/user_access`).then((({authorizedNodeIDs:e})=>fetchJson("/api/v1/spaces").then((({results:n})=>Promise.any(n.map((n=>fetchJson(`/api/v1/spaces/${n.id}/rooms`).then((({results:t})=>Promise.any(t.map((t=>fetchJson(`/api/v1/spaces/${n.id}/rooms/${t.id}/nodes`).then((({results:o})=>{const r=o.find((({id:n})=>e.includes(n)));if(!r)throw new Error("can't find matching node");return{node:r,space:n,room:t}}))))))))))))));function fetchNode(e){if(!e)throw new Error("no agentId");return fetchJson(`/api/v1/agents/${e}/info`).then((({claimed:e,reachable:n})=>{if(!n){const n=new Error("Node not reachable in cloud");throw n.isClaimed=e,n}})).then((()=>findAgentInCloud(e)))}const getChartId=(e,n)=>`${e}.${n}`,goToNode=({node:e,space:n,room:t})=>{const o=`/spaces/${n.slug}/rooms/${t.slug}/alerts/${r=query.get("alarm_chart"),s=query.get("alarm"),`${r}.${s}`}:::${e.id}`;var r,s;location.assign(o)},isCloudUrl=e=>/https:\/\/\w*\.netdata\.cloud/.test(e),splitUrls=e=>{const n=[],t=[];return e.forEach((e=>{isCloudUrl(e)?t.push(e):n.push(e)})),{agentUrls:n,cloudUrls:t}},redirectToUrl=e=>{location.replace(e)},handleVisitedNodesResponse=({agentId:e,isClaimed:n})=>t=>{const o=t.urls.map(reformatURL),{agentUrls:r,cloudUrls:s}=splitUrls(o);return Promise.any(r.map(fetchURL)).then(redirectToUrl).catch((()=>new Promise((t=>{n?findAgentInCloud(e).then(goToNode).finally((()=>t())):t()})).then((()=>{document.body.innerHTML=`\n                <section>\n                  <p>We found your Agent urls but they don't seem to be responding. Please select url manually if you wish to redirect.</p>\n                  <ul data-testid="agents-list">\n                      ${r.concat(s).map(((e,n)=>`<li><a href="${e}" target="_blank" rel="noopener noreferrer" data-testid="agent-link-${n}">${e}</a></li>`)).join("\n")}\n                  </ul>\n                </section>\n            `}))))},handleVisitedNodesError=e=>n=>{if("401"===n.message){const n=`/sign-in?id=${encodeURIComponent(e)}&redirect_uri=${encodeURIComponent(location.href)}`;location.assign(n)}else"404"===n.message?document.body.innerHTML='<p>Sorry we cannot find your Agent in the Netdata Cloud visited nodes. To continue please connect your node in the <a href="/">Netdata Cloud</a></p>':document.body.innerHTML=`<p>${n.message}</p>`},main=()=>{if(query="URLSearchParams"in window?new URLSearchParams(window.location.search.substr(1)):null,!query.has("agentId"))return void(document.body.innerHTML='<p>missing "agentId" query string parameter');const e=query.get("agentId"),n=query.get("childId");return fetchNode(n||e).then(goToNode).catch((t=>fetchAgent(n||e).then((e=>{if(!e.urls?.length)throw new Error("404");return e})).then(handleVisitedNodesResponse({agentId:n||e,isClaimed:t.isClaimed})).catch(handleVisitedNodesError(e))))};function fetchAgent(e){return fetchJson("/api/v1/accounts/me").then((n=>fetchJson(`/api/v1/accounts/${n.id}/nodes/${e}`)))}function fetchURL(e){return fetch(e,{redirect:"follow"}).then((()=>e))}function reformatURL(e){let n="top;nowelcome=1";for(let[o,r]of query.entries())"agentId"!==o&&(n+=";"+encodeURIComponent(o),""!==r&&(n+="="+encodeURIComponent(r)));const t=new URL(e);return"/"===t.pathname&&(t.pathname=""),t.hash=n,t.toString()}"undefined"===typeof process&&main(),module.exports={main:main};