#chainhead_header is expected momenterarily to be ahead. If its considerably ahead (e.g more than 5 blocks), then the node is definetely out of sync. 
 template: geth_chainhead_diff_between_header_block
       on: geth.chainhead
    class: Workload
     type: ethereum_node
component: geth
    every: 10s
     calc: $chain_head_block -  $chain_head_header
    units: blocks
     warn: $this != 0
     crit: $this > 5
    delay: up 5s

# For about 50 peers, ~500 goroutines are expected. For 200 peers, ~1500 goroutines is expected. 
 template: geth_goroutines
       on: geth.goroutines
    class: Workload
     type: ethereum_node
component: geth
    every: 10s
     calc: $goroutines
     warn: $this > (($geth.p2p_peers < 100) ? (600) : (1500))
     warn: $this > (($geth.p2p_peers < 100) ? (1000) : (2000))
    delay: up 5s

