
# Warn if a list keys operation is running.
 template: riakkv_list_keys_active
       on: riak.core.fsm_active
    class: Utilization
     type: Database
component: Riak KV
     calc: $list_fsm_active
    units: state machines
    every: 10s
     warn: $list_fsm_active > 0
     info: Number of currently running list keys finite state machines. \
           There are active list keys FSMs. \
           A key listing in Riak is a very expensive operation, and should not be used in production \
           as it will affect the performance of the cluster and not scale well.
       to: dba


## Timing healthchecks
# KV GET
 template: riakkv_1h_kv_get_mean_latency
       on: riak.kv.latency.get
    class: Latency
     type: Database
component: Riak KV
     calc: $node_get_fsm_time_mean
   lookup: average -1h unaligned of time
    every: 30s
    units: ms
     info: average time between reception of client GET request and \
           subsequent response to client over the last hour

 template: riakkv_kv_get_slow
       on: riak.kv.latency.get
    class: Latency
     type: Database
component: Riak KV
     calc: $mean
   lookup: average -3m unaligned of time
    units: ms
    every: 10s
     warn: ($this > ($riakkv_1h_kv_get_mean_latency * 2) )
     crit: ($this > ($riakkv_1h_kv_get_mean_latency * 3) )
     info: Average GET request processing time over the last 3 minutes, compared to the average over the last hour. \
           GET request processing time has increased significantly. \
           It indicates that the server is overloaded.
    delay: down 5m multiplier 1.5 max 1h
       to: dba

# KV PUT
 template: riakkv_1h_kv_put_mean_latency
       on: riak.kv.latency.put
    class: Latency
     type: Database
component: Riak KV
     calc: $node_put_fsm_time_mean
   lookup: average -1h unaligned of time
    every: 30s
    units: ms
     info: average time between reception of client PUT request and \
           subsequent response to the client over the last hour

 template: riakkv_kv_put_slow
       on: riak.kv.latency.put
    class: Latency
     type: Database
component: Riak KV
     calc: $mean
   lookup: average -3m unaligned of time
    units: ms
    every: 10s
     warn: ($this > ($riakkv_1h_kv_put_mean_latency * 2) )
     crit: ($this > ($riakkv_1h_kv_put_mean_latency * 3) )
     info: Average PUT request processing time over the last 3 minutes, compared to the average over the last hour. \
           PUT request processing time has increased significantly. \
           It indicates that the server is overloaded.
    delay: down 5m multiplier 1.5 max 1h
       to: dba


## VM healthchecks

# Default Erlang VM process limit: 262144
# On systems observed, this is < 2000, but may grow depending on load.
 template: riakkv_vm_high_process_count
       on: riak.vm
    class: Utilization
     type: Database
component: Riak KV
     calc: $sys_process_count
    units: processes
    every: 10s
     warn: $this > 10000
     crit: $this > 100000
     info: Number of processes running in the Erlang VM. \
           The number of processes is high, you may see performance degradation due to scheduling overhead.
       to: dba
